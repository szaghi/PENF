name: CI

on: push

jobs:
  test:

    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GCC_V: 14 # gcc version

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
 
    - name: Install GCC
      run: |
        sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install -y gcc-${GCC_V} gfortran-${GCC_V} g++-${GCC_V}
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V} \
        --slave /usr/bin/gcov gcov /usr/bin/gcov-${GCC_V}

    - name: Install Graphviz
      uses: ts-graphviz/setup-graphviz@v2
 
    - name: Install FOBIS-FORD
      run: |
        pip install --upgrade markdown
        pip install --upgrade markdown-include
        pip install --upgrade python-markdown-math
        pip install --upgrade toposort
        pip install --upgrade jinja2
        pip install --upgrade pygments
        pip install --upgrade beautifulsoup4
        pip install --upgrade graphviz
        pip install --upgrade tqdm
        pip install --upgrade importlib-metadata
        pip install --upgrade ford
        pip install --upgrade FoBiS.py

    - name: Check system
      run: |
        echo 'GFORTRAN'
        gfortran --version
        echo
        echo 'GCOV'
        gcov --version
        echo
        echo 'PYTHON'
        python --version
        echo
        echo 'FOBIS'
        FoBiS.py --version
        echo
        echo 'FORD'
        ford --version

    - name: Make Coverage
      run: |
        FoBiS.py rule -ex makecoverage

    - name: Upload Coverage to CODECOV
      run: |
         bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   - name: Make doc
  #     run: |
  #       FoBiS.py rule -ex makedoc

  #   - name: Push doc to GH Pages
  #     if: ${{ !env.ACT }}
  #     uses: JamesIves/github-pages-deploy-action@v4
  #     with:
  #       branch: gh-pages
  #       folder: doc/html

  #   - name: Make TAR
  #     run: |
  #       echo "release version:" ${{ env.RELEASE }}
  #       FoBiS.py rule -ex maketar
  #       ls *.tar.gz

  #   - name: Deploy Asset
  #     if: ${{ !env.ACT }}
  #     uses: "marvinpinto/action-automatic-releases@latest"
  #     with:
  #       repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #       automatic_release_tag: ${{ env.RELEASE }}
  #       prerelease: false
  #       title: ${{ env.RELEASE }}
  #       files: |
  #         *.tar.gz
  #         ./scripts/install.sh
