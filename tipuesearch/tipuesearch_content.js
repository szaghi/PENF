var tipuesearch = {"pages":[{"title":" PENF ","text":"PENF PENF PENF, Portability Environment for Fortran poor people A KISS library for exploiting codes portability for modern (2003+) Fortran projects. PENF is a pure Fortran (KISS) library for achieving portable codes for modern Fortran projects; PENF provides many number-to-string and viceversa facilities; PENF is Fortran 2003+ standard compliant; PENF is a Free, Open Source Project. Table of Contents What is PENF? Main features Copyrights Documentation A Taste of PENF Issues Compiler Support What is PENF? Fortran is the most popular programming language for scientific computing. With Fortran it is quite simple obtain fast code and manage large multidimensional array. Because Fortran permits the achievement of high performance it is also used on great range of different computer-architectures, and often on the fastest supercomputer in the world. Therefore Fortran programs must be portable : portability means that the code will give the same results on every different computer-architectures. One of the most important goal of the numeric code is to control the numeric error due to finite precision of numerical operations. Fortran uses the IEEE representations. Integers and reals (floating point) are represented with a finite precision. So when the code computes an operation it has a truncation error due to the truncation of the numerical finite representations. For numerical and more in general scientific applications this source of errors must be controlled. The programmer must know which is the precision associated to the code variables. Before the standard Fortran 90/95 there are not any way to select the precision of the numerical variables in a portable fashion. Modern Fortran standards (2003+) have introduced better support for codes portability. With the possibility to specify a kind parameter for variables, the standard Fortran 90+ makes available useful functions to select the kind precision in a portable parametric way. Using these functions the programmer can accurately control the precision of its own variables in a portable manner. PENF module provides an effective KISS library to achieve portability and concurrently it provides many tools to handles parametrized numbers. Go to Top Main features The library provides portable kind-parameters and many useful procedures to deal with them: [X] integer and reals parameters for 1,2,4,8,16 bytes-like representations; [X] integer and real formats definitions for all parameters; [X] integer and real minimum maximum representable numbers; [X] number-to-string and string-to-number casting procedures; [X] endianism procedures checking. Any feature request is welcome. Go to Top Copyrights PENF is an open source project, it is distributed under a multi-licensing system: for FOSS projects: GPL v3 ; for closed source/commercial projects: BSD 2-Clause ; BSD 3-Clause ; MIT . Anyone is interest to use, to develop or to contribute to PENF is welcome, feel free to select the license that best matches your soul! More details can be found on wiki . Go to Top Documentation Besides this README file the PENF documentation is contained into its own wiki . Detailed documentation of the API is contained into the GitHub Pages that can also be created locally by means of ford tool . A Taste of PENF To be written. Go to Top Project history See CHANGELOG for the complete list of changes. a graphical overview of the history and evolution of PENF project Go to Top Developer Info Stefano Zaghi","tags":"home","loc":"index.html"},{"title":"bit_size_R16P – PENF","text":"private elemental function bit_size_R16P(i) result(bits) Compute the number of bits of a real variable. use penf print FI2P , bit_size ( 1._R16P ) Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I2P) Number of bits of r. Contents Source Code bit_size_R16P Source Code elemental function bit_size_R16P ( i ) result ( bits ) !< Compute the number of bits of a real variable. !< !<```fortran !< use penf !< print FI2P, bit_size(1._R16P) !<``` !=> 128 <<< real ( R16P ), intent ( in ) :: i !< Real variable whose number of bits must be computed. integer ( I2P ) :: bits !< Number of bits of r. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I2P ) * 8_I2P endfunction bit_size_R16P","tags":"","loc":"proc/bit_size_r16p.html"},{"title":"bit_size_R8P – PENF","text":"private elemental function bit_size_R8P(i) result(bits) Compute the number of bits of a real variable. use penf print FI1P , bit_size ( 1._R8P ) Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. Called by proc~~bit_size_r8p~~CalledByGraph proc~bit_size_r8p bit_size_R8P interface~bit_size bit_size interface~bit_size->proc~bit_size_r8p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bit_size_R8P Source Code elemental function bit_size_R8P ( i ) result ( bits ) !< Compute the number of bits of a real variable. !< !<```fortran !< use penf !< print FI1P, bit_size(1._R8P) !<``` !=> 64 <<< real ( R8P ), intent ( in ) :: i !< Real variable whose number of bits must be computed. integer ( I1P ) :: bits !< Number of bits of r. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I1P ) * 8_I1P endfunction bit_size_R8P","tags":"","loc":"proc/bit_size_r8p.html"},{"title":"bit_size_R4P – PENF","text":"private elemental function bit_size_R4P(i) result(bits) Compute the number of bits of a real variable. use penf print FI1P , bit_size ( 1._R4P ) Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. Called by proc~~bit_size_r4p~~CalledByGraph proc~bit_size_r4p bit_size_R4P interface~bit_size bit_size interface~bit_size->proc~bit_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bit_size_R4P Source Code elemental function bit_size_R4P ( i ) result ( bits ) !< Compute the number of bits of a real variable. !< !<```fortran !< use penf !< print FI1P, bit_size(1._R4P) !<``` !=> 32 <<< real ( R4P ), intent ( in ) :: i !< Real variable whose number of bits must be computed. integer ( I1P ) :: bits !< Number of bits of r. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I1P ) * 8_I1P endfunction bit_size_R4P","tags":"","loc":"proc/bit_size_r4p.html"},{"title":"bit_size_chr – PENF","text":"private elemental function bit_size_chr(i) result(bits) Compute the number of bits of a character variable. use penf print FI4P , bit_size ( 'ab' ) Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bits must be computed. Return Value integer(kind=I4P) Number of bits of c. Called by proc~~bit_size_chr~~CalledByGraph proc~bit_size_chr bit_size_chr interface~bit_size bit_size interface~bit_size->proc~bit_size_chr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bit_size_chr Source Code elemental function bit_size_chr ( i ) result ( bits ) !< Compute the number of bits of a character variable. !< !<```fortran !< use penf !< print FI4P, bit_size('ab') !<``` !=> 16 <<< character ( * ), intent ( IN ) :: i !< Character variable whose number of bits must be computed. integer ( I4P ) :: bits !< Number of bits of c. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I4P ) * 8_I4P endfunction bit_size_chr","tags":"","loc":"proc/bit_size_chr.html"},{"title":"byte_size_R16P – PENF","text":"private elemental function byte_size_R16P(i) result(bytes) Compute the number of bytes of a real variable. use penf print FI1P , byte_size ( 1._R16P ) Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. Contents Source Code byte_size_R16P Source Code elemental function byte_size_R16P ( i ) result ( bytes ) !< Compute the number of bytes of a real variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1._R16P) !<``` !=> 16 <<< real ( R16P ), intent ( in ) :: i !< Real variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of r. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_R16P","tags":"","loc":"proc/byte_size_r16p.html"},{"title":"byte_size_R8P – PENF","text":"private elemental function byte_size_R8P(i) result(bytes) Compute the number of bytes of a real variable. use penf print FI1P , byte_size ( 1._R8P ) Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. Called by proc~~byte_size_r8p~~CalledByGraph proc~byte_size_r8p byte_size_R8P interface~byte_size byte_size interface~byte_size->proc~byte_size_r8p program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code byte_size_R8P Source Code elemental function byte_size_R8P ( i ) result ( bytes ) !< Compute the number of bytes of a real variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1._R8P) !<``` !=> 8 <<< real ( R8P ), intent ( in ) :: i !< Real variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of r. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_R8P","tags":"","loc":"proc/byte_size_r8p.html"},{"title":"byte_size_R4P – PENF","text":"private elemental function byte_size_R4P(i) result(bytes) Compute the number of bytes of a real variable. use penf print FI1P , byte_size ( 1._R4P ) Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. Called by proc~~byte_size_r4p~~CalledByGraph proc~byte_size_r4p byte_size_R4P interface~byte_size byte_size interface~byte_size->proc~byte_size_r4p program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code byte_size_R4P Source Code elemental function byte_size_R4P ( i ) result ( bytes ) !< Compute the number of bytes of a real variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1._R4P) !<``` !=> 4 <<< real ( R4P ), intent ( in ) :: i !< Real variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of r. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_R4P","tags":"","loc":"proc/byte_size_r4p.html"},{"title":"byte_size_chr – PENF","text":"private elemental function byte_size_chr(i) result(bytes) Compute the number of bytes of a character variable. use penf print FI1P , byte_size ( 'ab' ) Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bytes must be computed. Return Value integer(kind=I4P) Number of bytes of c. Called by proc~~byte_size_chr~~CalledByGraph proc~byte_size_chr byte_size_chr interface~byte_size byte_size interface~byte_size->proc~byte_size_chr program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code byte_size_chr Source Code elemental function byte_size_chr ( i ) result ( bytes ) !< Compute the number of bytes of a character variable. !< !<```fortran !< use penf !< print FI1P, byte_size('ab') !<``` !=> 2 <<< character ( * ), intent ( in ) :: i !< Character variable whose number of bytes must be computed. integer ( I4P ) :: bytes !< Number of bytes of c. bytes = bit_size ( i ) / 8_I4P endfunction byte_size_chr","tags":"","loc":"proc/byte_size_chr.html"},{"title":"byte_size_I8P – PENF","text":"private elemental function byte_size_I8P(i) result(bytes) Compute the number of bytes of an integer variable. use penf print FI1P , byte_size ( 1_I8P ) Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. Called by proc~~byte_size_i8p~~CalledByGraph proc~byte_size_i8p byte_size_I8P interface~byte_size byte_size interface~byte_size->proc~byte_size_i8p program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code byte_size_I8P Source Code elemental function byte_size_I8P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I8P) !<``` !=> 8 <<< integer ( I8P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I8P","tags":"","loc":"proc/byte_size_i8p.html"},{"title":"byte_size_I4P – PENF","text":"private elemental function byte_size_I4P(i) result(bytes) Compute the number of bytes of an integer variable. use penf print FI1P , byte_size ( 1_I4P ) Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. Called by proc~~byte_size_i4p~~CalledByGraph proc~byte_size_i4p byte_size_I4P interface~byte_size byte_size interface~byte_size->proc~byte_size_i4p program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code byte_size_I4P Source Code elemental function byte_size_I4P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I4P) !<``` !=> 4 <<< integer ( I4P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I4P","tags":"","loc":"proc/byte_size_i4p.html"},{"title":"byte_size_I2P – PENF","text":"private elemental function byte_size_I2P(i) result(bytes) Compute the number of bytes of an integer variable. use penf print FI1P , byte_size ( 1_I2P ) Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. Called by proc~~byte_size_i2p~~CalledByGraph proc~byte_size_i2p byte_size_I2P interface~byte_size byte_size interface~byte_size->proc~byte_size_i2p program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code byte_size_I2P Source Code elemental function byte_size_I2P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I2P) !<``` !=> 2 <<< integer ( I2P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I2P","tags":"","loc":"proc/byte_size_i2p.html"},{"title":"byte_size_I1P – PENF","text":"private elemental function byte_size_I1P(i) result(bytes) Compute the number of bytes of an integer variable. use penf print FI1P , byte_size ( 1_I1P ) Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. Called by proc~~byte_size_i1p~~CalledByGraph proc~byte_size_i1p byte_size_I1P interface~byte_size byte_size interface~byte_size->proc~byte_size_i1p program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code byte_size_I1P Source Code elemental function byte_size_I1P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I1P) !<``` !=> 1 <<< integer ( I1P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I1P","tags":"","loc":"proc/byte_size_i1p.html"},{"title":"bit_size – PENF","text":"public interface bit_size Overloading of the intrinsic bit_size function for computing the number of bits of (also) real and character variables. Calls interface~~bit_size~~CallsGraph interface~bit_size bit_size proc~bit_size_r8p bit_size_R8P interface~bit_size->proc~bit_size_r8p proc~bit_size_r4p bit_size_R4P interface~bit_size->proc~bit_size_r4p proc~bit_size_chr bit_size_chr interface~bit_size->proc~bit_size_chr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures bit_size_R8P bit_size_R4P bit_size_chr Module Procedures private elemental function bit_size_R8P (i) result(bits) Compute the number of bits of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. private elemental function bit_size_R4P (i) result(bits) Compute the number of bits of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. private elemental function bit_size_chr (i) result(bits) Compute the number of bits of a character variable. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bits must be computed. Return Value integer(kind=I4P) Number of bits of c.","tags":"","loc":"interface/bit_size.html"},{"title":"byte_size – PENF","text":"public interface byte_size Compute the number of bytes of a variable. Calls interface~~byte_size~~CallsGraph interface~byte_size byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~byte_size~~CalledByGraph interface~byte_size byte_size program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->interface~byte_size program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->interface~byte_size program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->interface~byte_size program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->interface~byte_size program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->interface~byte_size program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->interface~byte_size program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->interface~byte_size program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->interface~byte_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures byte_size_I8P byte_size_I4P byte_size_I2P byte_size_I1P byte_size_R8P byte_size_R4P byte_size_chr Module Procedures private elemental function byte_size_I8P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I4P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I2P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I1P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_R8P (i) result(bytes) Compute the number of bytes of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. private elemental function byte_size_R4P (i) result(bytes) Compute the number of bytes of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. private elemental function byte_size_chr (i) result(bytes) Compute the number of bytes of a character variable. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bytes must be computed. Return Value integer(kind=I4P) Number of bytes of c.","tags":"","loc":"interface/byte_size.html"},{"title":"digit_I8 – PENF","text":"private elemental function digit_I8(n) result(digit) Compute the number of digits in decimal base of the input integer. use penf print FI4P , digit ( 100_I8P ) Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. Called by proc~~digit_i8~~CalledByGraph proc~digit_i8 digit_I8 interface~digit digit interface~digit->proc~digit_i8 program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->interface~digit program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->interface~digit program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->interface~digit program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->interface~digit Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code digit_I8 Source Code elemental function digit_I8 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I8P) !<``` !=> 3 <<< integer ( I8P ), intent ( in ) :: n !< Input integer. character ( DI8P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI8P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I8","tags":"","loc":"proc/digit_i8.html"},{"title":"digit_I4 – PENF","text":"private elemental function digit_I4(n) result(digit) Compute the number of digits in decimal base of the input integer. use penf print FI4P , digit ( 100_I4P ) Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. Called by proc~~digit_i4~~CalledByGraph proc~digit_i4 digit_I4 interface~digit digit interface~digit->proc~digit_i4 program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->interface~digit program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->interface~digit program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->interface~digit program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->interface~digit Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code digit_I4 Source Code elemental function digit_I4 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I4P) !<``` !=> 3 <<< integer ( I4P ), intent ( in ) :: n !< Input integer. character ( DI4P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI4P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I4","tags":"","loc":"proc/digit_i4.html"},{"title":"digit_I2 – PENF","text":"private elemental function digit_I2(n) result(digit) Compute the number of digits in decimal base of the input integer. use penf print FI4P , digit ( 100_I2P ) Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. Called by proc~~digit_i2~~CalledByGraph proc~digit_i2 digit_I2 interface~digit digit interface~digit->proc~digit_i2 program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->interface~digit program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->interface~digit program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->interface~digit program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->interface~digit Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code digit_I2 Source Code elemental function digit_I2 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I2P) !<``` !=> 3 <<< integer ( I2P ), intent ( in ) :: n !< Input integer. character ( DI2P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI2P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I2","tags":"","loc":"proc/digit_i2.html"},{"title":"digit_I1 – PENF","text":"private elemental function digit_I1(n) result(digit) Compute the number of digits in decimal base of the input integer. use penf print FI4P , digit ( 100_I1P ) Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. Called by proc~~digit_i1~~CalledByGraph proc~digit_i1 digit_I1 interface~digit digit interface~digit->proc~digit_i1 program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->interface~digit program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->interface~digit program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->interface~digit program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->interface~digit Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code digit_I1 Source Code elemental function digit_I1 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I1P) !<``` !=> 3 <<< integer ( I1P ), intent ( in ) :: n !< Input integer. character ( DI1P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI1P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I1","tags":"","loc":"proc/digit_i1.html"},{"title":"check_endian – PENF","text":"public subroutine check_endian() Check the type of bit ordering (big or little endian) of the running architecture. Note The result is stored into the endian global variable. use penf call check_endian print * , endian Arguments None Called by proc~~check_endian~~CalledByGraph proc~check_endian check_endian proc~penf_init penf_init proc~penf_init->proc~check_endian program~volatile_doctest~95 volatile_doctest program~volatile_doctest~95->proc~check_endian proc~penf_print penf_print proc~penf_print->proc~penf_init program~volatile_doctest~92 volatile_doctest program~volatile_doctest~92->proc~penf_init program~volatile_doctest~96 volatile_doctest program~volatile_doctest~96->proc~penf_print Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code check_endian Source Code subroutine check_endian () !< Check the type of bit ordering (big or little endian) of the running architecture. !< !> @note The result is stored into the *endian* global variable. !< !<```fortran !< use penf !< call check_endian !< print *, endian !<``` !=> 1 <<< if ( is_little_endian ()) then endian = endianL else endian = endianB endif contains pure function is_little_endian () result ( is_little ) !< Check if the type of the bit ordering of the running architecture is little endian. logical :: is_little !< Logical output: true is the running architecture uses little endian ordering, false otherwise. integer ( I1P ) :: int1 ( 1 : 4 ) !< One byte integer array for casting 4 bytes integer. int1 = transfer ( 1_I4P , int1 ) is_little = ( int1 ( 1 ) == 1_I1P ) endfunction is_little_endian endsubroutine check_endian","tags":"","loc":"proc/check_endian.html"},{"title":"penf_init – PENF","text":"public subroutine penf_init() Initialize PENF’s variables that are not initialized into the definition specification. use penf call penf_init print FI1P , BYR4P Arguments None Calls proc~~penf_init~~CallsGraph proc~penf_init penf_init proc~check_endian check_endian proc~penf_init->proc~check_endian Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~penf_init~~CalledByGraph proc~penf_init penf_init proc~penf_print penf_print proc~penf_print->proc~penf_init program~volatile_doctest~92 volatile_doctest program~volatile_doctest~92->proc~penf_init program~volatile_doctest~96 volatile_doctest program~volatile_doctest~96->proc~penf_print Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code penf_init Source Code subroutine penf_init () !< Initialize PENF's variables that are not initialized into the definition specification. !< !<```fortran !< use penf !< call penf_init !< print FI1P, BYR4P !<``` !=> 4 <<< call check_endian is_initialized = . true . endsubroutine penf_init","tags":"","loc":"proc/penf_init.html"},{"title":"penf_print – PENF","text":"public subroutine penf_print(unit, pref, iostat, iomsg) Print to the specified unit the PENF’s environment data. use penf integer :: u open ( newunit = u , status = 'scratch' ) call penf_print ( u ) close ( u ) print \"(A)\" , 'done' Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: unit Logic unit. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: iostat IO error. character, intent(out), optional :: iomsg IO error message. Calls proc~~penf_print~~CallsGraph proc~penf_print penf_print proc~penf_init penf_init proc~penf_print->proc~penf_init proc~check_endian check_endian proc~penf_init->proc~check_endian Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~penf_print~~CalledByGraph proc~penf_print penf_print program~volatile_doctest~96 volatile_doctest program~volatile_doctest~96->proc~penf_print Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code penf_print Source Code subroutine penf_print ( unit , pref , iostat , iomsg ) !< Print to the specified unit the PENF's environment data. !< !<```fortran !< use penf !< integer :: u !< open(newunit=u, status='scratch') !< call penf_print(u) !< close(u) !< print \"(A)\", 'done' !<``` !=> done <<< integer ( I4P ), intent ( in ) :: unit !< Logic unit. character ( * ), intent ( in ), optional :: pref !< Prefixing string. integer ( I4P ), intent ( out ), optional :: iostat !< IO error. character ( * ), intent ( out ), optional :: iomsg !< IO error message. character ( len = :), allocatable :: prefd !< Prefixing string. integer ( I4P ) :: iostatd !< IO error. character ( 500 ) :: iomsgd !< Temporary variable for IO error message. if (. not . is_initialized ) call penf_init prefd = '' ; if ( present ( pref )) prefd = pref if ( endian == endianL ) then write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'This architecture has LITTLE Endian bit ordering' else write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'This architecture has BIG Endian bit ordering' endif write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Character kind:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ASCII: ' // str ( n = ASCII ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  UCS4:  ' // str ( n = UCS4 ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  CK:    ' // str ( n = CK ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Reals kind, format and characters number:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R16P: ' // str ( n = R16P ) // ',' // FR16P // ',' // str ( n = DR16P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R8P:  ' // str ( n = R8P ) // ',' // FR8P // ',' // str ( n = DR8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R4P:  ' // str ( n = R4P ) // ',' // FR4P // ',' // str ( n = DR4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R_P:  ' // str ( n = R_P ) // ',' // FR_P // ',' // str ( n = DR_P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Integers kind, format and characters number:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I8P:  ' // str ( n = I8P ) // ',' // FI8P // ',' // str ( n = DI8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I4P:  ' // str ( n = I4P ) // ',' // FI4P // ',' // str ( n = DI4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I2P:  ' // str ( n = I2P ) // ',' // FI2P // ',' // str ( n = DI2P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I1P:  ' // str ( n = I1P ) // ',' // FI1P // ',' // str ( n = DI1P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Reals minimum and maximum values:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R16P: ' // str ( n = MinR16P ) // ',' // str ( n = MaxR16P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R8P:  ' // str ( n = MinR8P ) // ',' // str ( n = MaxR8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R4P:  ' // str ( n = MinR4P ) // ',' // str ( n = MaxR4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R_P:  ' // str ( n = MinR_P ) // ',' // str ( n = MaxR_P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Integergs minimum and maximum values:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I8P:  ' // str ( n = MinI8P ) // ',' // str ( n = MaxI8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I4P:  ' // str ( n = MinI4P ) // ',' // str ( n = MaxI4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I2P:  ' // str ( n = MinI2P ) // ',' // str ( n = MaxI2P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I1P:  ' // str ( n = MinI1P ) // ',' // str ( n = MaxI1P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Reals bits/bytes sizes:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R16P: ' // str ( n = BIR16P ) // '/' // str ( n = BYR16P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R8P:  ' // str ( n = BIR8P ) // '/' // str ( n = BYR8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R4P:  ' // str ( n = BIR4P ) // '/' // str ( n = BYR4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R_P:  ' // str ( n = BIR_P ) // '/' // str ( n = BYR_P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Integers bits/bytes sizes:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I8P:  ' // str ( n = BII8P ) // '/' // str ( n = BYI8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I4P:  ' // str ( n = BII4P ) // '/' // str ( n = BYI4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I2P:  ' // str ( n = BII2P ) // '/' // str ( n = BYI2P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I1P:  ' // str ( n = BII1P ) // '/' // str ( n = BYI1P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Smallest reals' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR16P: ' // str ( smallR16P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR8P:  ' // str ( smallR8P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR4P:  ' // str ( smallR4P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR_P:  ' // str ( smallR_P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Machine zero' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR16P: ' // str ( ZeroR16P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR8P:  ' // str ( ZeroR8P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR4P:  ' // str ( ZeroR4P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR_P:  ' // str ( ZeroR_P , . true .) if ( present ( iostat )) iostat = iostatd if ( present ( iomsg )) iomsg = iomsgd endsubroutine penf_print","tags":"","loc":"proc/penf_print.html"},{"title":"bit_size – PENF","text":"public interface bit_size Overloading of the intrinsic bit_size function for computing the number of bits of (also) real and character variables. Contents None","tags":"","loc":"interface/bit_size~2.html"},{"title":"digit – PENF","text":"public interface digit Compute the number of digits in decimal base of the input integer. Calls interface~~digit~~CallsGraph interface~digit digit proc~digit_i8 digit_I8 interface~digit->proc~digit_i8 proc~digit_i2 digit_I2 interface~digit->proc~digit_i2 proc~digit_i1 digit_I1 interface~digit->proc~digit_i1 proc~digit_i4 digit_I4 interface~digit->proc~digit_i4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~digit~~CalledByGraph interface~digit digit program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->interface~digit program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->interface~digit program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->interface~digit program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->interface~digit Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures digit_I8 digit_I4 digit_I2 digit_I1 Module Procedures private elemental function digit_I8 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I4 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I2 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I1 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits.","tags":"","loc":"interface/digit.html"},{"title":"str_ascii_default – PENF","text":"private pure function str_ascii_default(input) result(output) Convert string of default kind to ASCII string. use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( 'I was DEFAULT kind, but now I am ASCII' ) print \"(A)\" , string Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind. Called by proc~~str_ascii_default~~CalledByGraph proc~str_ascii_default str_ascii_default interface~str_ascii str_ascii interface~str_ascii->proc~str_ascii_default program~volatile_doctest~9 volatile_doctest program~volatile_doctest~9->interface~str_ascii program~volatile_doctest~59 volatile_doctest program~volatile_doctest~59->interface~str_ascii program~volatile_doctest~33 volatile_doctest program~volatile_doctest~33->interface~str_ascii program~volatile_doctest~77 volatile_doctest program~volatile_doctest~77->interface~str_ascii program~volatile_doctest~12 volatile_doctest program~volatile_doctest~12->interface~str_ascii program~volatile_doctest~70 volatile_doctest program~volatile_doctest~70->interface~str_ascii Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_ascii_default Source Code pure function str_ascii_default ( input ) result ( output ) !< Convert string of default kind to ASCII string. !< !<```fortran !< use penf !< character(len=:, kind=ASCII), allocatable :: string !< string = str_ascii('I was DEFAULT kind, but now I am ASCII') !< print \"(A)\", string !<``` !=> I was DEFAULT kind, but now I am ASCII <<< character ( len =* ), intent ( in ) :: input !< Input string of default kind. character ( len = :, kind = ASCII ), allocatable :: output !< Output string of ASCII kind. output = input endfunction str_ascii_default","tags":"","loc":"proc/str_ascii_default.html"},{"title":"str_ascii_ascii – PENF","text":"private pure function str_ascii_ascii(input) result(output) Convert string of ASCII kind to ASCII string, just for convenience in sanitize strings. use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( 'I was ASCII kind and I am still ASCII' ) print \"(A)\" , string Arguments Type Intent Optional Attributes Name character(kind=ASCII,len=*), intent(in) :: input Input string of ASCII kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind. Contents Source Code str_ascii_ascii Source Code pure function str_ascii_ascii ( input ) result ( output ) !< Convert string of ASCII kind to ASCII string, just for convenience in sanitize strings. !< !<```fortran !< use penf !< character(len=:, kind=ASCII), allocatable :: string !< string = str_ascii('I was ASCII kind and I am still ASCII') !< print \"(A)\", string !<``` !=> I was ASCII kind and I am still ASCII <<< character ( len =* , kind = ASCII ), intent ( in ) :: input !< Input string of ASCII kind. character ( len = :, kind = ASCII ), allocatable :: output !< Output string of ASCII kind. output = input endfunction str_ascii_ascii","tags":"","loc":"proc/str_ascii_ascii.html"},{"title":"str_ascii_ucs4 – PENF","text":"private pure function str_ascii_ucs4(input) result(output) Convert string of UCS4 kind to ASCII string. use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( UCS4_ 'I was UCS4 kind, but now I am ASCII' ) print \"(A)\" , string Arguments Type Intent Optional Attributes Name character(kind=UCS4,len=*), intent(in) :: input Input string of UCS4 kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind. Contents Source Code str_ascii_ucs4 Source Code pure function str_ascii_ucs4 ( input ) result ( output ) !< Convert string of UCS4 kind to ASCII string. !< !<```fortran !< use penf !< character(len=:, kind=ASCII), allocatable :: string !< string = str_ascii(UCS4_'I was UCS4 kind, but now I am ASCII') !< print \"(A)\", string !<``` !=> I was UCS4 kind, but now I am ASCII <<< character ( len =* , kind = UCS4 ), intent ( in ) :: input !< Input string of UCS4 kind. character ( len = :, kind = ASCII ), allocatable :: output !< Output string of ASCII kind. output = input endfunction str_ascii_ucs4","tags":"","loc":"proc/str_ascii_ucs4.html"},{"title":"str_ucs4_default – PENF","text":"private pure function str_ucs4_default(input) result(output) Convert string of default kind to UCS4 string. use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( 'I was DEFAULT kind, but now I am UCS4' ) print \"(A)\" , string Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind. Called by proc~~str_ucs4_default~~CalledByGraph proc~str_ucs4_default str_ucs4_default interface~str_ucs4 str_ucs4 interface~str_ucs4->proc~str_ucs4_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_ucs4_default Source Code pure function str_ucs4_default ( input ) result ( output ) !< Convert string of default kind to UCS4 string. !< !<```fortran !< use penf !< character(len=:, kind=UCS4), allocatable :: string !< string = str_ascii('I was DEFAULT kind, but now I am UCS4') !< print \"(A)\", string !<``` !=> I was DEFAULT kind, but now I am UCS4 <<< character ( len =* ), intent ( in ) :: input !< Input string of default kind. character ( len = :, kind = UCS4 ), allocatable :: output !< Output string of UCS4 kind. output = input endfunction str_ucs4_default","tags":"","loc":"proc/str_ucs4_default.html"},{"title":"str_ucs4_ascii – PENF","text":"private pure function str_ucs4_ascii(input) result(output) Convert string of ASCII kind to UCS4 string. use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( ASCII_ 'I was ASCII kind, but now I am UCS4' ) print \"(A)\" , string Arguments Type Intent Optional Attributes Name character(kind=ASCII,len=*), intent(in) :: input Input string of ASCII kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind. Contents Source Code str_ucs4_ascii Source Code pure function str_ucs4_ascii ( input ) result ( output ) !< Convert string of ASCII kind to UCS4 string. !< !<```fortran !< use penf !< character(len=:, kind=UCS4), allocatable :: string !< string = str_ascii(ASCII_'I was ASCII kind, but now I am UCS4') !< print \"(A)\", string !<``` !=> I was ASCII kind, but now I am UCS4 <<< character ( len =* , kind = ASCII ), intent ( in ) :: input !< Input string of ASCII kind. character ( len = :, kind = UCS4 ), allocatable :: output !< Output string of UCS4 kind. output = input endfunction str_ucs4_ascii","tags":"","loc":"proc/str_ucs4_ascii.html"},{"title":"str_ucs4_ucs4 – PENF","text":"private pure function str_ucs4_ucs4(input) result(output) Convert string of UCS4 kind to UCS4 string, just for convenience in sanitize strings. use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( UCS4_ 'I was UCS4 kind and I am still UCS4' ) print \"(A)\" , string Arguments Type Intent Optional Attributes Name character(kind=UCS4,len=*), intent(in) :: input Input string of UCS4 kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind. Contents Source Code str_ucs4_ucs4 Source Code pure function str_ucs4_ucs4 ( input ) result ( output ) !< Convert string of UCS4 kind to UCS4 string, just for convenience in sanitize strings. !< !<```fortran !< use penf !< character(len=:, kind=UCS4), allocatable :: string !< string = str_ascii(UCS4_'I was UCS4 kind and I am still UCS4') !< print \"(A)\", string !<``` !=> I was UCS4 kind and I am still UCS4 <<< character ( len =* , kind = UCS4 ), intent ( in ) :: input !< Input string of UCS4 kind. character ( len = :, kind = UCS4 ), allocatable :: output !< Output string of UCS4 kind. output = input endfunction str_ucs4_ucs4","tags":"","loc":"proc/str_ucs4_ucs4.html"},{"title":"strf_R16P – PENF","text":"private elemental function strf_R16P(fm, n) result(str) Convert real to string. use penf print \"(A)\" , str ( fm = FR16P , n = 1._R16P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R16P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. Contents Source Code strf_R16P Source Code elemental function strf_R16P ( fm , n ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FR16P, n=1._R16P) !<``` !=> 0.100000000000000000000000000000000E+0001 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. real ( R16P ), intent ( in ) :: n !< Real to be converted. character ( DR16P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_R16P","tags":"","loc":"proc/strf_r16p.html"},{"title":"strf_R8P – PENF","text":"private elemental function strf_R8P(fm, n) result(str) Convert real to string. use penf print \"(A)\" , str ( fm = FR8P , n = 1._R8P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R8P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. Called by proc~~strf_r8p~~CalledByGraph proc~strf_r8p strf_R8P interface~str str interface~str->proc~strf_r8p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strf_R8P Source Code elemental function strf_R8P ( fm , n ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FR8P, n=1._R8P) !<``` !=> 0.100000000000000E+001 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. real ( R8P ), intent ( in ) :: n !< Real to be converted. character ( DR8P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_R8P","tags":"","loc":"proc/strf_r8p.html"},{"title":"strf_R4P – PENF","text":"private elemental function strf_R4P(fm, n) result(str) Convert real to string. use penf print \"(A)\" , str ( fm = FR4P , n = 1._R4P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R4P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. Called by proc~~strf_r4p~~CalledByGraph proc~strf_r4p strf_R4P interface~str str interface~str->proc~strf_r4p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strf_R4P Source Code elemental function strf_R4P ( fm , n ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FR4P, n=1._R4P) !<``` !=> 0.100000E+01 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. real ( R4P ), intent ( in ) :: n !< Real to be converted. character ( DR4P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_R4P","tags":"","loc":"proc/strf_r4p.html"},{"title":"strf_I8P – PENF","text":"private elemental function strf_I8P(fm, n) result(str) Convert integer to string. use penf print \"(A)\" , str ( fm = FI8P , n = 1_I8P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I8P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. Called by proc~~strf_i8p~~CalledByGraph proc~strf_i8p strf_I8P interface~str str interface~str->proc~strf_i8p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strf_I8P Source Code elemental function strf_I8P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI8P, n=1_I8P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I8P ), intent ( in ) :: n !< Integer to be converted. character ( DI8P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I8P","tags":"","loc":"proc/strf_i8p.html"},{"title":"strf_I4P – PENF","text":"private elemental function strf_I4P(fm, n) result(str) Convert integer to string. use penf print \"(A)\" , str ( fm = FI4P , n = 1_I4P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I4P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. Called by proc~~strf_i4p~~CalledByGraph proc~strf_i4p strf_I4P interface~str str interface~str->proc~strf_i4p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strf_I4P Source Code elemental function strf_I4P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI4P, n=1_I4P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I4P ), intent ( in ) :: n !< Integer to be converted. character ( DI4P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I4P","tags":"","loc":"proc/strf_i4p.html"},{"title":"strf_I2P – PENF","text":"private elemental function strf_I2P(fm, n) result(str) Convert integer to string. use penf print \"(A)\" , str ( fm = FI2P , n = 1_I2P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I2P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. Called by proc~~strf_i2p~~CalledByGraph proc~strf_i2p strf_I2P interface~str str interface~str->proc~strf_i2p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strf_I2P Source Code elemental function strf_I2P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI2P, n=1_I2P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I2P ), intent ( in ) :: n !< Integer to be converted. character ( DI2P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I2P","tags":"","loc":"proc/strf_i2p.html"},{"title":"strf_I1P – PENF","text":"private elemental function strf_I1P(fm, n) result(str) Convert integer to string. use penf print \"(A)\" , str ( fm = FI1P , n = 1_I1P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I1P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. Called by proc~~strf_i1p~~CalledByGraph proc~strf_i1p strf_I1P interface~str str interface~str->proc~strf_i1p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strf_I1P Source Code elemental function strf_I1P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI1P, n=1_I1P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I1P ), intent ( in ) :: n !< Integer to be converted. character ( DI1P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I1P","tags":"","loc":"proc/strf_i1p.html"},{"title":"str_R16P – PENF","text":"private elemental function str_R16P(n, no_sign, compact) result(str) Convert real to string. use penf print \"(A)\" , str ( n =- 1._R16P ) use penf print \"(A)\" , str ( n =- 1._R16P , no_sign = . true .) use penf print \"(A)\" , str ( n =- 1._R16P , compact = . true .) Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. Calls proc~~str_r16p~~CallsGraph proc~str_r16p str_R16P proc~compact_real_string compact_real_string proc~str_r16p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_r16p~~CalledByGraph proc~str_r16p str_R16P proc~str_a_r16p str_a_R16P proc~str_a_r16p->proc~str_r16p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_R16P Source Code elemental function str_R16P ( n , no_sign , compact ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R16P) !<``` !=> -0.100000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R16P, no_sign=.true.) !<``` !=> 0.100000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R16P, compact=.true.) !<``` !=> -0.1E+1 <<< real ( R16P ), intent ( in ) :: n !< Real to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( DR16P ) :: str !< Returned string containing input number. write ( str , FR16P ) n ! Casting of n to string. if ( n > 0._R16P ) str ( 1 : 1 ) = '+' ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. if ( present ( compact )) then if ( compact ) call compact_real_string ( string = str ) endif endfunction str_R16P","tags":"","loc":"proc/str_r16p.html"},{"title":"str_R8P – PENF","text":"private elemental function str_R8P(n, no_sign, compact) result(str) Convert real to string. use penf print \"(A)\" , str ( n =- 1._R8P ) use penf print \"(A)\" , str ( n =- 1._R8P , no_sign = . true .) use penf print \"(A)\" , str ( n =- 1._R8P , compact = . true .) Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. Calls proc~~str_r8p~~CallsGraph proc~str_r8p str_R8P proc~compact_real_string compact_real_string proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_r8p~~CalledByGraph proc~str_r8p str_R8P proc~str_a_r8p str_a_R8P proc~str_a_r8p->proc~str_r8p interface~str str interface~str->proc~str_r8p interface~str->proc~str_a_r8p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_R8P Source Code elemental function str_R8P ( n , no_sign , compact ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R8P) !<``` !=> -0.100000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R8P, no_sign=.true.) !<``` !=> 0.100000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R8P, compact=.true.) !<``` !=> -0.1E+1 <<< real ( R8P ), intent ( in ) :: n !< Real to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( DR8P ) :: str !< Returned string containing input number. write ( str , FR8P ) n ! Casting of n to string. if ( n > 0._R8P ) str ( 1 : 1 ) = '+' ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. if ( present ( compact )) then if ( compact ) call compact_real_string ( string = str ) endif endfunction str_R8P","tags":"","loc":"proc/str_r8p.html"},{"title":"str_R4P – PENF","text":"private elemental function str_R4P(n, no_sign, compact) result(str) Convert real to string. use penf print \"(A)\" , str ( n =- 1._R4P ) use penf print \"(A)\" , str ( n =- 1._R4P , no_sign = . true .) use penf print \"(A)\" , str ( n =- 1._R4P , compact = . true .) Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. Calls proc~~str_r4p~~CallsGraph proc~str_r4p str_R4P proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_r4p~~CalledByGraph proc~str_r4p str_R4P proc~str_a_r4p str_a_R4P proc~str_a_r4p->proc~str_r4p interface~str str interface~str->proc~str_r4p interface~str->proc~str_a_r4p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_R4P Source Code elemental function str_R4P ( n , no_sign , compact ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R4P) !<``` !=> -0.100000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R4P, no_sign=.true.) !<``` !=> 0.100000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R4P, compact=.true.) !<``` !=> -0.1E+1 <<< real ( R4P ), intent ( in ) :: n !< Real to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( DR4P ) :: str !< Returned string containing input number. write ( str , FR4P ) n ! Casting of n to string. if ( n > 0._R4P ) str ( 1 : 1 ) = '+' ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. if ( present ( compact )) then if ( compact ) call compact_real_string ( string = str ) endif endfunction str_R4P","tags":"","loc":"proc/str_r4p.html"},{"title":"str_I8P – PENF","text":"private elemental function str_I8P(n, no_sign) result(str) Convert integer to string. use penf print \"(A)\" , str ( n =- 1_I8P ) use penf print \"(A)\" , str ( n =- 1_I8P , no_sign = . true .) Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. Called by proc~~str_i8p~~CalledByGraph proc~str_i8p str_I8P proc~str_a_i8p str_a_I8P proc~str_a_i8p->proc~str_i8p interface~str str interface~str->proc~str_i8p interface~str->proc~str_a_i8p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_I8P Source Code elemental function str_I8P ( n , no_sign ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I8P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I8P, no_sign=.true.) !<``` !=> 1 <<< integer ( I8P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI8P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI8P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I8P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I8P","tags":"","loc":"proc/str_i8p.html"},{"title":"str_I4P – PENF","text":"private elemental function str_I4P(n, no_sign) result(str) Converting integer to string. use penf print \"(A)\" , str ( n =- 1_I4P ) use penf print \"(A)\" , str ( n =- 1_I4P , no_sign = . true .) Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. Called by proc~~str_i4p~~CalledByGraph proc~str_i4p str_I4P proc~str_a_i4p str_a_I4P proc~str_a_i4p->proc~str_i4p interface~str str interface~str->proc~str_i4p interface~str->proc~str_a_i4p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_I4P Source Code elemental function str_I4P ( n , no_sign ) result ( str ) !< Converting integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I4P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I4P, no_sign=.true.) !<``` !=> 1 <<< integer ( I4P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI4P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI4P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I4P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I4P","tags":"","loc":"proc/str_i4p.html"},{"title":"str_I2P – PENF","text":"private elemental function str_I2P(n, no_sign) result(str) Convert integer to string. use penf print \"(A)\" , str ( n =- 1_I2P ) use penf print \"(A)\" , str ( n =- 1_I2P , no_sign = . true .) Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. Called by proc~~str_i2p~~CalledByGraph proc~str_i2p str_I2P proc~str_a_i2p str_a_I2P proc~str_a_i2p->proc~str_i2p interface~str str interface~str->proc~str_i2p interface~str->proc~str_a_i2p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_I2P Source Code elemental function str_I2P ( n , no_sign ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I2P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I2P, no_sign=.true.) !<``` !=> 1 <<< integer ( I2P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI2P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI2P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I2P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I2P","tags":"","loc":"proc/str_i2p.html"},{"title":"str_I1P – PENF","text":"private elemental function str_I1P(n, no_sign) result(str) Convert integer to string. use penf print \"(A)\" , str ( n =- 1_I1P ) use penf print \"(A)\" , str ( n =- 1_I1P , no_sign = . true .) Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. Called by proc~~str_i1p~~CalledByGraph proc~str_i1p str_I1P proc~str_a_i1p str_a_I1P proc~str_a_i1p->proc~str_i1p interface~str str interface~str->proc~str_i1p interface~str->proc~str_a_i1p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_I1P Source Code elemental function str_I1P ( n , no_sign ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I1P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I1P, no_sign=.true.) !<``` !=> 1 <<< integer ( I1P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI1P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI1P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I1P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I1P","tags":"","loc":"proc/str_i1p.html"},{"title":"str_bol – PENF","text":"private elemental function str_bol(n) result(str) Convert logical to string. use penf print \"(A)\" , str ( n = . true .) Arguments Type Intent Optional Attributes Name logical, intent(in) :: n Logical to be converted. Return Value character(len=1) Returned string containing input number plus padding zeros. Called by proc~~str_bol~~CalledByGraph proc~str_bol str_bol interface~str str interface~str->proc~str_bol proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_bol Source Code elemental function str_bol ( n ) result ( str ) !< Convert logical to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=.true.) !<``` !=> T <<< logical , intent ( in ) :: n !< Logical to be converted. character ( 1 ) :: str !< Returned string containing input number plus padding zeros. write ( str , '(L1)' ) n endfunction str_bol","tags":"","loc":"proc/str_bol.html"},{"title":"str_a_R16P – PENF","text":"private pure function str_a_R16P(n, no_sign, separator, delimiters, compact) result(str) Converting real array to string. use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ]) use penf print \"(A)\" , str ( n = [ 1._R16P , 2._R16P ], no_sign = . true .) use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], separator = '|' ) use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], delimiters = [ '(' , ')' ]) use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], compact = . true .) Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. Calls proc~~str_a_r16p~~CallsGraph proc~str_a_r16p str_a_R16P proc~str_r16p str_R16P proc~str_a_r16p->proc~str_r16p proc~compact_real_string compact_real_string proc~str_r16p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_a_R16P Source Code pure function str_a_R16P ( n , no_sign , separator , delimiters , compact ) result ( str ) !< Converting real array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P]) !<``` !=> +0.100000000000000000000000000000000E+0001,-0.200000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, 2._R16P], no_sign=.true.) !<``` !=> 0.100000000000000000000000000000000E+0001,0.200000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P], separator='|') !<``` !=> +0.100000000000000000000000000000000E+0001|-0.200000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P], delimiters=['(', ')']) !<``` !=> (+0.100000000000000000000000000000000E+0001,-0.200000000000000000000000000000000E+0001) <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P], compact=.true.) !<``` !=> +0.1E+1,-0.2E+1 <<< real ( R16P ), intent ( in ) :: n (:) !< Real array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DR16P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator do i = 1 , size ( n ) strn = str_R16P ( no_sign = no_sign , compact = compact , n = n ( i )) str = str // sep // trim ( strn ) enddo str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_R16P","tags":"","loc":"proc/str_a_r16p.html"},{"title":"str_a_R8P – PENF","text":"private pure function str_a_R8P(n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ]) use penf print \"(A)\" , str ( n = [ 1._R8P , 2._R8P ], no_sign = . true .) use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], separator = '|' ) use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], delimiters = [ '(' , ')' ]) use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], compact = . true .) Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. Calls proc~~str_a_r8p~~CallsGraph proc~str_a_r8p str_a_R8P proc~str_r8p str_R8P proc~str_a_r8p->proc~str_r8p proc~compact_real_string compact_real_string proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_a_r8p~~CalledByGraph proc~str_a_r8p str_a_R8P interface~str str interface~str->proc~str_a_r8p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_a_R8P Source Code pure function str_a_R8P ( n , no_sign , separator , delimiters , compact ) result ( str ) !< Convert real array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P]) !<``` !=> +0.100000000000000E+001,-0.200000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, 2._R8P], no_sign=.true.) !<``` !=> 0.100000000000000E+001,0.200000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P], separator='|') !<``` !=> +0.100000000000000E+001|-0.200000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P], delimiters=['(', ')']) !<``` !=> (+0.100000000000000E+001,-0.200000000000000E+001) <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P], compact=.true.) !<``` !=> +0.1E+1,-0.2E+1 <<< real ( R8P ), intent ( in ) :: n (:) !< Real array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DR8P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator do i = 1 , size ( n ) strn = str_R8P ( no_sign = no_sign , compact = compact , n = n ( i )) str = str // sep // trim ( strn ) enddo str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_R8P","tags":"","loc":"proc/str_a_r8p.html"},{"title":"str_a_R4P – PENF","text":"private pure function str_a_R4P(n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ]) use penf print \"(A)\" , str ( n = [ 1._R4P , 2._R4P ], no_sign = . true .) use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], separator = '|' ) use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], delimiters = [ '(' , ')' ]) use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], compact = . true .) Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. Calls proc~~str_a_r4p~~CallsGraph proc~str_a_r4p str_a_R4P proc~str_r4p str_R4P proc~str_a_r4p->proc~str_r4p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_a_r4p~~CalledByGraph proc~str_a_r4p str_a_R4P interface~str str interface~str->proc~str_a_r4p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_a_R4P Source Code pure function str_a_R4P ( n , no_sign , separator , delimiters , compact ) result ( str ) !< Convert real array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P]) !<``` !=> +0.100000E+01,-0.200000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, 2._R4P], no_sign=.true.) !<``` !=> 0.100000E+01,0.200000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P], separator='|') !<``` !=> +0.100000E+01|-0.200000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P], delimiters=['(', ')']) !<``` !=> (+0.100000E+01,-0.200000E+01) <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P], compact=.true.) !<``` !=> +0.1E+1,-0.2E+1 <<< real ( R4P ), intent ( in ) :: n (:) !< Real array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DR4P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator do i = 1 , size ( n ) strn = str_R4P ( no_sign = no_sign , compact = compact , n = n ( i )) str = str // sep // trim ( strn ) enddo str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_R4P","tags":"","loc":"proc/str_a_r4p.html"},{"title":"str_a_I8P – PENF","text":"private pure function str_a_I8P(n, no_sign, separator, delimiters) result(str) Convert integer array to string. use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ]) use penf print \"(A)\" , str ( n = [ 1_I8P , 2_I8P ], no_sign = . true .) use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ], separator = '|' ) use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ], delimiters = [ '(' , ')' ]) Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. Calls proc~~str_a_i8p~~CallsGraph proc~str_a_i8p str_a_I8P proc~str_i8p str_I8P proc~str_a_i8p->proc~str_i8p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_a_i8p~~CalledByGraph proc~str_a_i8p str_a_I8P interface~str str interface~str->proc~str_a_i8p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_a_I8P Source Code pure function str_a_I8P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, -2_I8P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, 2_I8P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, -2_I8P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, -2_I8P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I8P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI8P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I8P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I8P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I8P","tags":"","loc":"proc/str_a_i8p.html"},{"title":"str_a_I4P – PENF","text":"private pure function str_a_I4P(n, no_sign, separator, delimiters) result(str) Convert integer array to string. use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ]) use penf print \"(A)\" , str ( n = [ 1_I4P , 2_I4P ], no_sign = . true .) use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ], separator = '|' ) use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ], delimiters = [ '(' , ')' ]) Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. Calls proc~~str_a_i4p~~CallsGraph proc~str_a_i4p str_a_I4P proc~str_i4p str_I4P proc~str_a_i4p->proc~str_i4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_a_i4p~~CalledByGraph proc~str_a_i4p str_a_I4P interface~str str interface~str->proc~str_a_i4p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_a_I4P Source Code pure function str_a_I4P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, -2_I4P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, 2_I4P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, -2_I4P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, -2_I4P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I4P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI4P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I4P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I4P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I4P","tags":"","loc":"proc/str_a_i4p.html"},{"title":"str_a_I2P – PENF","text":"private pure function str_a_I2P(n, no_sign, separator, delimiters) result(str) Convert integer array to string. use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ]) use penf print \"(A)\" , str ( n = [ 1_I2P , 2_I2P ], no_sign = . true .) use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ], separator = '|' ) use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ], delimiters = [ '(' , ')' ]) Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. Calls proc~~str_a_i2p~~CallsGraph proc~str_a_i2p str_a_I2P proc~str_i2p str_I2P proc~str_a_i2p->proc~str_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_a_i2p~~CalledByGraph proc~str_a_i2p str_a_I2P interface~str str interface~str->proc~str_a_i2p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_a_I2P Source Code pure function str_a_I2P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, -2_I2P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, 2_I2P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, -2_I2P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, -2_I2P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I2P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI2P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I2P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I2P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I2P","tags":"","loc":"proc/str_a_i2p.html"},{"title":"str_a_I1P – PENF","text":"private pure function str_a_I1P(n, no_sign, separator, delimiters) result(str) Convert integer array to string. use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ]) use penf print \"(A)\" , str ( n = [ 1_I1P , 2_I1P ], no_sign = . true .) use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ], separator = '|' ) use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ], delimiters = [ '(' , ')' ]) Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. Calls proc~~str_a_i1p~~CallsGraph proc~str_a_i1p str_a_I1P proc~str_i1p str_I1P proc~str_a_i1p->proc~str_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~str_a_i1p~~CalledByGraph proc~str_a_i1p str_a_I1P interface~str str interface~str->proc~str_a_i1p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code str_a_I1P Source Code pure function str_a_I1P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, -2_I1P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, 2_I1P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, -2_I1P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, -2_I1P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I1P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI1P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I1P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I1P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I1P","tags":"","loc":"proc/str_a_i1p.html"},{"title":"strz_I8P – PENF","text":"private elemental function strz_I8P(n, nz_pad) result(str) Converting integer to string, prefixing with the right number of zeros. use penf print \"(A)\" , strz ( n = 1_I8P ) use penf print \"(A)\" , strz ( n = 1_I8P , nz_pad = 5 ) Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. Called by proc~~strz_i8p~~CalledByGraph proc~strz_i8p strz_I8P interface~strz strz interface~strz->proc~strz_i8p program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->interface~strz program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->interface~strz program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->interface~strz program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->interface~strz program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->interface~strz program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->interface~strz program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->interface~strz program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->interface~strz Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strz_I8P Source Code elemental function strz_I8P ( n , nz_pad ) result ( str ) !< Converting integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I8P) !<``` !=> 0000000000000000001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I8P, nz_pad=5) !<``` !=> 00001 <<< integer ( I8P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI8P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI8PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI8P - nz_pad : DI8P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I8P","tags":"","loc":"proc/strz_i8p.html"},{"title":"strz_I4P – PENF","text":"private elemental function strz_I4P(n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. use penf print \"(A)\" , strz ( n = 1_I4P ) use penf print \"(A)\" , strz ( n = 1_I4P , nz_pad = 5 ) Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. Called by proc~~strz_i4p~~CalledByGraph proc~strz_i4p strz_I4P interface~strz strz interface~strz->proc~strz_i4p program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->interface~strz program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->interface~strz program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->interface~strz program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->interface~strz program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->interface~strz program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->interface~strz program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->interface~strz program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->interface~strz Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strz_I4P Source Code elemental function strz_I4P ( n , nz_pad ) result ( str ) !< Convert integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I4P) !<``` !=> 0000000001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I4P, nz_pad=5) !<``` !=> 00001 <<< integer ( I4P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI4P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI4PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI4P - nz_pad : DI4P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I4P","tags":"","loc":"proc/strz_i4p.html"},{"title":"strz_I2P – PENF","text":"private elemental function strz_I2P(n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. use penf print \"(A)\" , strz ( n = 1_I2P ) use penf print \"(A)\" , strz ( n = 1_I2P , nz_pad = 3 ) Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. Called by proc~~strz_i2p~~CalledByGraph proc~strz_i2p strz_I2P interface~strz strz interface~strz->proc~strz_i2p program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->interface~strz program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->interface~strz program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->interface~strz program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->interface~strz program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->interface~strz program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->interface~strz program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->interface~strz program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->interface~strz Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strz_I2P Source Code elemental function strz_I2P ( n , nz_pad ) result ( str ) !< Convert integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I2P) !<``` !=> 00001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I2P, nz_pad=3) !<``` !=> 001 <<< integer ( I2P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI2P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI2PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI2P - nz_pad : DI2P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I2P","tags":"","loc":"proc/strz_i2p.html"},{"title":"strz_I1P – PENF","text":"private elemental function strz_I1P(n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. use penf print \"(A)\" , strz ( n = 1_I1P ) use penf print \"(A)\" , strz ( n = 1_I1P , nz_pad = 3 ) Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. Called by proc~~strz_i1p~~CalledByGraph proc~strz_i1p strz_I1P interface~strz strz interface~strz->proc~strz_i1p program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->interface~strz program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->interface~strz program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->interface~strz program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->interface~strz program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->interface~strz program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->interface~strz program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->interface~strz program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->interface~strz Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code strz_I1P Source Code elemental function strz_I1P ( n , nz_pad ) result ( str ) !< Convert integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I1P) !<``` !=> 001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I1P, nz_pad=3) !<``` !=> 001 <<< integer ( I1P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI1P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI1PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI1P - nz_pad : DI1P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I1P","tags":"","loc":"proc/strz_i1p.html"},{"title":"ctor_R16P – PENF","text":"private function ctor_R16P(str, knd, pref, error) result(n) Convert string to real. use penf print FR16P , cton ( str = '-1.0' , knd = 1._R16P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R16P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R16P) Number returned. Contents Source Code ctor_R16P Source Code function ctor_R16P ( str , knd , pref , error ) result ( n ) !< Convert string to real. !< !<```fortran !< use penf !< print FR16P, cton(str='-1.0', knd=1._R16P) !<``` !=> -0.100000000000000000000000000000000E+0001 <<< character ( * ), intent ( in ) :: str !< String containing input number. real ( R16P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. real ( R16P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to real failed! real(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctor_R16P","tags":"","loc":"proc/ctor_r16p.html"},{"title":"ctor_R8P – PENF","text":"private function ctor_R8P(str, knd, pref, error) result(n) Convert string to real. use penf print FR8P , cton ( str = '-1.0' , knd = 1._R8P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R8P) Number returned. Called by proc~~ctor_r8p~~CalledByGraph proc~ctor_r8p ctor_R8P interface~cton cton interface~cton->proc~ctor_r8p program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->interface~cton program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->interface~cton program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->interface~cton program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->interface~cton program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->interface~cton program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->interface~cton program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->interface~cton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code ctor_R8P Source Code function ctor_R8P ( str , knd , pref , error ) result ( n ) !< Convert string to real. !< !<```fortran !< use penf !< print FR8P, cton(str='-1.0', knd=1._R8P) !<``` !=> -0.100000000000000E+001 <<< character ( * ), intent ( in ) :: str !< String containing input number. real ( R8P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. real ( R8P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to real failed! real(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctor_R8P","tags":"","loc":"proc/ctor_r8p.html"},{"title":"ctor_R4P – PENF","text":"private function ctor_R4P(str, knd, pref, error) result(n) Convert string to real. use penf print FR4P , cton ( str = '-1.0' , knd = 1._R4P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R4P) Number returned. Called by proc~~ctor_r4p~~CalledByGraph proc~ctor_r4p ctor_R4P interface~cton cton interface~cton->proc~ctor_r4p program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->interface~cton program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->interface~cton program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->interface~cton program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->interface~cton program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->interface~cton program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->interface~cton program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->interface~cton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code ctor_R4P Source Code function ctor_R4P ( str , knd , pref , error ) result ( n ) !< Convert string to real. !< !<```fortran !< use penf !< print FR4P, cton(str='-1.0', knd=1._R4P) !<``` !=> -0.100000E+01 <<< character ( * ), intent ( in ) :: str !< String containing input number. real ( R4P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. real ( R4P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to real failed! real(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctor_R4P","tags":"","loc":"proc/ctor_r4p.html"},{"title":"ctoi_I8P – PENF","text":"private function ctoi_I8P(str, knd, pref, error) result(n) Convert string to integer. use penf print FI8P , cton ( str = '-1' , knd = 1_I8P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I8P) Number returned. Called by proc~~ctoi_i8p~~CalledByGraph proc~ctoi_i8p ctoi_I8P interface~cton cton interface~cton->proc~ctoi_i8p program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->interface~cton program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->interface~cton program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->interface~cton program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->interface~cton program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->interface~cton program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->interface~cton program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->interface~cton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code ctoi_I8P Source Code function ctoi_I8P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI8P, cton(str='-1', knd=1_I8P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I8P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I8P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I8P","tags":"","loc":"proc/ctoi_i8p.html"},{"title":"ctoi_I4P – PENF","text":"private function ctoi_I4P(str, knd, pref, error) result(n) Convert string to integer. use penf print FI4P , cton ( str = '-1' , knd = 1_I4P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I4P) Number returned. Called by proc~~ctoi_i4p~~CalledByGraph proc~ctoi_i4p ctoi_I4P interface~cton cton interface~cton->proc~ctoi_i4p program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->interface~cton program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->interface~cton program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->interface~cton program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->interface~cton program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->interface~cton program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->interface~cton program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->interface~cton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code ctoi_I4P Source Code function ctoi_I4P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI4P, cton(str='-1', knd=1_I4P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I4P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I4P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I4P","tags":"","loc":"proc/ctoi_i4p.html"},{"title":"ctoi_I2P – PENF","text":"private function ctoi_I2P(str, knd, pref, error) result(n) Convert string to integer. use penf print FI2P , cton ( str = '-1' , knd = 1_I2P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I2P) Number returned. Called by proc~~ctoi_i2p~~CalledByGraph proc~ctoi_i2p ctoi_I2P interface~cton cton interface~cton->proc~ctoi_i2p program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->interface~cton program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->interface~cton program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->interface~cton program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->interface~cton program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->interface~cton program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->interface~cton program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->interface~cton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code ctoi_I2P Source Code function ctoi_I2P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI2P, cton(str='-1', knd=1_I2P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I2P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I2P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I2P","tags":"","loc":"proc/ctoi_i2p.html"},{"title":"ctoi_I1P – PENF","text":"private function ctoi_I1P(str, knd, pref, error) result(n) Convert string to integer. use penf print FI1P , cton ( str = '-1' , knd = 1_I1P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I1P) Number returned. Called by proc~~ctoi_i1p~~CalledByGraph proc~ctoi_i1p ctoi_I1P interface~cton cton interface~cton->proc~ctoi_i1p program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->interface~cton program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->interface~cton program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->interface~cton program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->interface~cton program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->interface~cton program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->interface~cton program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->interface~cton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code ctoi_I1P Source Code function ctoi_I1P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI1P, cton(str='-1', knd=1_I1P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I1P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I1P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I1P","tags":"","loc":"proc/ctoi_i1p.html"},{"title":"bstr_R16P – PENF","text":"private elemental function bstr_R16P(n) result(bstr) Convert real to string of bits. Note It is assumed that R16P is represented by means of 128 bits, but this is not ensured in all architectures. use penf character ( 128 ) :: b b = bstr ( n = 1._R16P ) print \"(A)\" , b ( 17 :) Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: n Real to be converted. Return Value character(len=128) Returned bit-string containing input number. Contents Source Code bstr_R16P Source Code elemental function bstr_R16P ( n ) result ( bstr ) !< Convert real to string of bits. !< !< @note It is assumed that R16P is represented by means of 128 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< character(128) :: b !< b = bstr(n=1._R16P) !< print \"(A)\", b(17:) !<``` !=> 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111100111111 <<< real ( R16P ), intent ( in ) :: n !< Real to be converted. character ( 128 ) :: bstr !< Returned bit-string containing input number. integer ( I1P ) :: buffer ( 16 ) !< Transfer buffer. buffer = transfer ( n , buffer ) write ( bstr , '(16B8.8)' ) buffer endfunction bstr_R16P","tags":"","loc":"proc/bstr_r16p.html"},{"title":"bstr_R8P – PENF","text":"private elemental function bstr_R8P(n) result(bstr) Convert real to string of bits. Note It is assumed that R8P is represented by means of 64 bits, but this is not ensured in all architectures. use penf print \"(A)\" , bstr ( n = 1._R8P ) Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. Called by proc~~bstr_r8p~~CalledByGraph proc~bstr_r8p bstr_R8P interface~bstr bstr interface~bstr->proc~bstr_r8p program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->interface~bstr program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->interface~bstr program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->interface~bstr program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->interface~bstr program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->interface~bstr program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->interface~bstr program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->interface~bstr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bstr_R8P Source Code elemental function bstr_R8P ( n ) result ( bstr ) !< Convert real to string of bits. !< !< @note It is assumed that R8P is represented by means of 64 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1._R8P) !<``` !=> 0000000000000000000000000000000000000000000000001111000000111111 <<< real ( R8P ), intent ( in ) :: n !< Real to be converted. character ( 64 ) :: bstr !< Returned bit-string containing input number. integer ( I1P ) :: buffer ( 8 ) !< Transfer buffer. buffer = transfer ( n , buffer ) write ( bstr , '(8B8.8)' ) buffer endfunction bstr_R8P","tags":"","loc":"proc/bstr_r8p.html"},{"title":"bstr_R4P – PENF","text":"private elemental function bstr_R4P(n) result(bstr) Convert real to string of bits. Note It is assumed that R4P is represented by means of 32 bits, but this is not ensured in all architectures. use penf print \"(A)\" , bstr ( n = 1._R4P ) Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. Called by proc~~bstr_r4p~~CalledByGraph proc~bstr_r4p bstr_R4P interface~bstr bstr interface~bstr->proc~bstr_r4p program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->interface~bstr program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->interface~bstr program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->interface~bstr program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->interface~bstr program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->interface~bstr program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->interface~bstr program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->interface~bstr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bstr_R4P Source Code elemental function bstr_R4P ( n ) result ( bstr ) !< Convert real to string of bits. !< !< @note It is assumed that R4P is represented by means of 32 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1._R4P) !<``` !=> 00000000000000001000000000111111 <<< real ( R4P ), intent ( in ) :: n !< Real to be converted. character ( 32 ) :: bstr !< Returned bit-string containing input number. integer ( I1P ) :: buffer ( 4 ) !< Transfer buffer. buffer = transfer ( n , buffer ) write ( bstr , '(4B8.8)' ) buffer endfunction bstr_R4P","tags":"","loc":"proc/bstr_r4p.html"},{"title":"bstr_I8P – PENF","text":"private elemental function bstr_I8P(n) result(bstr) Convert integer to string of bits. Note It is assumed that I8P is represented by means of 64 bits, but this is not ensured in all architectures. use penf print \"(A)\" , bstr ( n = 1_I8P ) Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. Called by proc~~bstr_i8p~~CalledByGraph proc~bstr_i8p bstr_I8P interface~bstr bstr interface~bstr->proc~bstr_i8p program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->interface~bstr program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->interface~bstr program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->interface~bstr program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->interface~bstr program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->interface~bstr program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->interface~bstr program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->interface~bstr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bstr_I8P Source Code elemental function bstr_I8P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I8P is represented by means of 64 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I8P) !<``` !=> 0000000000000000000000000000000000000000000000000000000000000001 <<< integer ( I8P ), intent ( in ) :: n !< Real to be converted. character ( 64 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B64.64)' ) n endfunction bstr_I8P","tags":"","loc":"proc/bstr_i8p.html"},{"title":"bstr_I4P – PENF","text":"private elemental function bstr_I4P(n) result(bstr) Convert integer to string of bits. Note It is assumed that I4P is represented by means of 32 bits, but this is not ensured in all architectures. use penf print \"(A)\" , bstr ( n = 1_I4P ) Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. Called by proc~~bstr_i4p~~CalledByGraph proc~bstr_i4p bstr_I4P interface~bstr bstr interface~bstr->proc~bstr_i4p program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->interface~bstr program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->interface~bstr program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->interface~bstr program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->interface~bstr program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->interface~bstr program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->interface~bstr program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->interface~bstr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bstr_I4P Source Code elemental function bstr_I4P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I4P is represented by means of 32 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I4P) !<``` !=> 00000000000000000000000000000001 <<< integer ( I4P ), intent ( in ) :: n !< Real to be converted. character ( 32 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B32.32)' ) n endfunction bstr_I4P","tags":"","loc":"proc/bstr_i4p.html"},{"title":"bstr_I2P – PENF","text":"private elemental function bstr_I2P(n) result(bstr) Convert integer to string of bits. Note It is assumed that I2P is represented by means of 16 bits, but this is not ensured in all architectures. use penf print \"(A)\" , bstr ( n = 1_I2P ) Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Real to be converted. Return Value character(len=16) Returned bit-string containing input number. Called by proc~~bstr_i2p~~CalledByGraph proc~bstr_i2p bstr_I2P interface~bstr bstr interface~bstr->proc~bstr_i2p program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->interface~bstr program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->interface~bstr program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->interface~bstr program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->interface~bstr program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->interface~bstr program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->interface~bstr program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->interface~bstr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bstr_I2P Source Code elemental function bstr_I2P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I2P is represented by means of 16 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I2P) !<``` !=> 0000000000000001 <<< integer ( I2P ), intent ( in ) :: n !< Real to be converted. character ( 16 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B16.16)' ) n endfunction bstr_I2P","tags":"","loc":"proc/bstr_i2p.html"},{"title":"bstr_I1P – PENF","text":"private elemental function bstr_I1P(n) result(bstr) Convert integer to string of bits. Note It is assumed that I1P is represented by means of 8 bits, but this is not ensured in all architectures. use penf print \"(A)\" , bstr ( n = 1_I1P ) Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Real to be converted. Return Value character(len=8) Returned bit-string containing input number. Called by proc~~bstr_i1p~~CalledByGraph proc~bstr_i1p bstr_I1P interface~bstr bstr interface~bstr->proc~bstr_i1p program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->interface~bstr program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->interface~bstr program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->interface~bstr program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->interface~bstr program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->interface~bstr program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->interface~bstr program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->interface~bstr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bstr_I1P Source Code elemental function bstr_I1P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I1P is represented by means of 8 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I1P) !<``` !=> 00000001 <<< integer ( I1P ), intent ( in ) :: n !< Real to be converted. character ( 8 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B8.8)' ) n endfunction bstr_I1P","tags":"","loc":"proc/bstr_i1p.html"},{"title":"bctor_R16P – PENF","text":"private elemental function bctor_R16P(bstr, knd) result(n) Convert bit-string to real. use penf print FR16P , bcton ( '00000000000000000000000000000000000000000000000000000000000000000000000000000' // & '000000000000000000000000000000000001111111100111111' , knd = 1._R16P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R16P), intent(in) :: knd Number kind. Return Value real(kind=R16P) Number returned. Contents Source Code bctor_R16P Source Code elemental function bctor_R16P ( bstr , knd ) result ( n ) !< Convert bit-string to real. !< !<```fortran !< use penf !< print FR16P, bcton('00000000000000000000000000000000000000000000000000000000000000000000000000000'//& !<                    '000000000000000000000000000000000001111111100111111', knd=1._R16P) !<``` !=> 0.100000000000000000000000000000000E+0001 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. real ( R16P ), intent ( in ) :: knd !< Number kind. real ( R16P ) :: n !< Number returned. integer ( I1P ) :: buffer ( 16 ) !< Transfer buffer. read ( bstr , '(16B8.8)' ) buffer n = transfer ( buffer , n ) endfunction bctor_R16P","tags":"","loc":"proc/bctor_r16p.html"},{"title":"bctor_R8P – PENF","text":"private elemental function bctor_R8P(bstr, knd) result(n) Convert bit-string to real. use penf print FR8P , bcton ( '0000000000000000000000000000000000000000000000001111000000111111' , knd = 1._R8P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R8P), intent(in) :: knd Number kind. Return Value real(kind=R8P) Number returned. Called by proc~~bctor_r8p~~CalledByGraph proc~bctor_r8p bctor_R8P interface~bcton bcton interface~bcton->proc~bctor_r8p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bctor_R8P Source Code elemental function bctor_R8P ( bstr , knd ) result ( n ) !< Convert bit-string to real. !< !<```fortran !< use penf !< print FR8P, bcton('0000000000000000000000000000000000000000000000001111000000111111', knd=1._R8P) !<``` !=> 0.100000000000000E+001 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. real ( R8P ), intent ( in ) :: knd !< Number kind. real ( R8P ) :: n !< Number returned. integer ( I1P ) :: buffer ( 8 ) !< Transfer buffer. read ( bstr , '(8B8.8)' ) buffer n = transfer ( buffer , n ) endfunction bctor_R8P","tags":"","loc":"proc/bctor_r8p.html"},{"title":"bctor_R4P – PENF","text":"private elemental function bctor_R4P(bstr, knd) result(n) Convert bit-string to real. use penf print FR4P , bcton ( '00000000000000001000000000111111' , knd = 1._R4P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R4P), intent(in) :: knd Number kind. Return Value real(kind=R4P) Number returned. Called by proc~~bctor_r4p~~CalledByGraph proc~bctor_r4p bctor_R4P interface~bcton bcton interface~bcton->proc~bctor_r4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bctor_R4P Source Code elemental function bctor_R4P ( bstr , knd ) result ( n ) !< Convert bit-string to real. !< !<```fortran !< use penf !< print FR4P, bcton('00000000000000001000000000111111', knd=1._R4P) !<``` !=> 0.100000E+01 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. real ( R4P ), intent ( in ) :: knd !< Number kind. real ( R4P ) :: n !< Number returned. integer ( I1P ) :: buffer ( 4 ) !< Transfer buffer. read ( bstr , '(4B8.8)' ) buffer n = transfer ( buffer , n ) endfunction bctor_R4P","tags":"","loc":"proc/bctor_r4p.html"},{"title":"bctoi_I8P – PENF","text":"private elemental function bctoi_I8P(bstr, knd) result(n) Convert bit-string to integer. use penf print FI8P , bcton ( '0000000000000000000000000000000000000000000000000000000000000001' , knd = 1_I8P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. Return Value integer(kind=I8P) Number returned. Calls proc~~bctoi_i8p~~CallsGraph proc~bctoi_i8p bctoi_I8P interface~str str proc~bctoi_i8p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~bctoi_i8p~~CalledByGraph proc~bctoi_i8p bctoi_I8P interface~bcton bcton interface~bcton->proc~bctoi_i8p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bctoi_I8P Source Code elemental function bctoi_I8P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI8P, bcton('0000000000000000000000000000000000000000000000000000000000000001', knd=1_I8P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I8P ), intent ( in ) :: knd !< Number kind. integer ( I8P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I8P","tags":"","loc":"proc/bctoi_i8p.html"},{"title":"bctoi_I4P – PENF","text":"private elemental function bctoi_I4P(bstr, knd) result(n) Convert bit-string to integer. use penf print FI4P , bcton ( '00000000000000000000000000000001' , knd = 1_I4P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. Return Value integer(kind=I4P) Number returned. Calls proc~~bctoi_i4p~~CallsGraph proc~bctoi_i4p bctoi_I4P interface~str str proc~bctoi_i4p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~bctoi_i4p~~CalledByGraph proc~bctoi_i4p bctoi_I4P interface~bcton bcton interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bctoi_I4P Source Code elemental function bctoi_I4P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI4P, bcton('00000000000000000000000000000001', knd=1_I4P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I4P ), intent ( in ) :: knd !< Number kind. integer ( I4P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I4P","tags":"","loc":"proc/bctoi_i4p.html"},{"title":"bctoi_I2P – PENF","text":"private elemental function bctoi_I2P(bstr, knd) result(n) Convert bit-string to integer. use penf print FI2P , bcton ( '0000000000000001' , knd = 1_I2P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. Return Value integer(kind=I2P) Number returned. Calls proc~~bctoi_i2p~~CallsGraph proc~bctoi_i2p bctoi_I2P interface~str str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~bctoi_i2p~~CalledByGraph proc~bctoi_i2p bctoi_I2P interface~bcton bcton interface~bcton->proc~bctoi_i2p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bctoi_I2P Source Code elemental function bctoi_I2P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI2P, bcton('0000000000000001', knd=1_I2P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I2P ), intent ( in ) :: knd !< Number kind. integer ( I2P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I2P","tags":"","loc":"proc/bctoi_i2p.html"},{"title":"bctoi_I1P – PENF","text":"private elemental function bctoi_I1P(bstr, knd) result(n) Convert bit-string to integer. use penf print FI1P , bcton ( '00000001' , knd = 1_I1P ) Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. Return Value integer(kind=I1P) Number returned. Calls proc~~bctoi_i1p~~CallsGraph proc~bctoi_i1p bctoi_I1P interface~str str proc~bctoi_i1p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by proc~~bctoi_i1p~~CalledByGraph proc~bctoi_i1p bctoi_I1P interface~bcton bcton interface~bcton->proc~bctoi_i1p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code bctoi_I1P Source Code elemental function bctoi_I1P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI1P, bcton('00000001', knd=1_I1P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I1P ), intent ( in ) :: knd !< Number kind. integer ( I1P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I1P","tags":"","loc":"proc/bctoi_i1p.html"},{"title":"compact_real_string – PENF","text":"private pure subroutine compact_real_string(string) Compact a string representing a real number, so that the same value is displayed with fewer characters. Note No need to add doctest: this is tested by a lot of doctests of other TBPs. Arguments Type Intent Optional Attributes Name character(len=*), intent(inout) :: string string representation of a real number. Called by proc~~compact_real_string~~CalledByGraph proc~compact_real_string compact_real_string proc~str_r16p str_R16P proc~str_r16p->proc~compact_real_string proc~str_r4p str_R4P proc~str_r4p->proc~compact_real_string proc~str_r8p str_R8P proc~str_r8p->proc~compact_real_string proc~str_a_r16p str_a_R16P proc~str_a_r16p->proc~str_r16p proc~str_a_r4p str_a_R4P proc~str_a_r4p->proc~str_r4p proc~str_a_r8p str_a_R8P proc~str_a_r8p->proc~str_r8p interface~str str interface~str->proc~str_r4p interface~str->proc~str_r8p interface~str->proc~str_a_r4p interface~str->proc~str_a_r8p proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code compact_real_string Source Code pure subroutine compact_real_string ( string ) !< author: Izaak Beekman !< date: 02/24/2015 !< !< Compact a string representing a real number, so that the same value is displayed with fewer characters. !< !< @note No need to add doctest: this is tested by a lot of doctests of other TBPs. character ( len =* ), intent ( inout ) :: string !< string representation of a real number. character ( len = len ( string )) :: significand !< Significand characters. character ( len = len ( string )) :: expnt !< Exponent characters. character ( len = 2 ) :: separator !< Separator characters. integer ( I4P ) :: exp_start !< Start position of exponent. integer ( I4P ) :: decimal_pos !< Decimal positions. integer ( I4P ) :: sig_trim !< Signature trim. integer ( I4P ) :: exp_trim !< Exponent trim. integer ( I4P ) :: i !< counter string = adjustl ( string ) exp_start = scan ( string , 'eEdD' ) if ( exp_start == 0 ) exp_start = scan ( string , '-+' , back = . true .) decimal_pos = scan ( string , '.' ) if ( exp_start /= 0 ) separator = string ( exp_start : exp_start ) if ( exp_start < decimal_pos ) then ! possibly signed, exponent-less float significand = string sig_trim = len ( trim ( significand )) do i = len ( trim ( significand )), decimal_pos + 2 , - 1 ! look from right to left at 0s, but save one after the decimal place if ( significand ( i : i ) == '0' ) then sig_trim = i - 1 else exit endif enddo string = trim ( significand ( 1 : sig_trim )) elseif ( exp_start > decimal_pos ) then ! float has exponent significand = string ( 1 : exp_start - 1 ) sig_trim = len ( trim ( significand )) do i = len ( trim ( significand )), decimal_pos + 2 , - 1 ! look from right to left at 0s if ( significand ( i : i ) == '0' ) then sig_trim = i - 1 else exit endif enddo expnt = adjustl ( string ( exp_start + 1 :)) if ( expnt ( 1 : 1 ) == '+' . or . expnt ( 1 : 1 ) == '-' ) then separator = trim ( adjustl ( separator )) // expnt ( 1 : 1 ) exp_start = exp_start + 1 expnt = adjustl ( string ( exp_start + 1 :)) endif exp_trim = 1 do i = 1 ,( len ( trim ( expnt )) - 1 ) ! look at exponent leading zeros saving last if ( expnt ( i : i ) == '0' ) then exp_trim = i + 1 else exit endif enddo string = trim ( adjustl ( significand ( 1 : sig_trim ))) // & trim ( adjustl ( separator )) // & trim ( adjustl ( expnt ( exp_trim :))) !else ! mal-formed real, BUT this code should be unreachable endif endsubroutine compact_real_string","tags":"","loc":"proc/compact_real_string.html"},{"title":"str_ascii – PENF","text":"public interface str_ascii Convert string of any kind to ASCII string. Calls interface~~str_ascii~~CallsGraph interface~str_ascii str_ascii proc~str_ascii_default str_ascii_default interface~str_ascii->proc~str_ascii_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~str_ascii~~CalledByGraph interface~str_ascii str_ascii program~volatile_doctest~9 volatile_doctest program~volatile_doctest~9->interface~str_ascii program~volatile_doctest~59 volatile_doctest program~volatile_doctest~59->interface~str_ascii program~volatile_doctest~33 volatile_doctest program~volatile_doctest~33->interface~str_ascii program~volatile_doctest~77 volatile_doctest program~volatile_doctest~77->interface~str_ascii program~volatile_doctest~12 volatile_doctest program~volatile_doctest~12->interface~str_ascii program~volatile_doctest~70 volatile_doctest program~volatile_doctest~70->interface~str_ascii Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures str_ascii_default Module Procedures private pure function str_ascii_default (input) result(output) Convert string of default kind to ASCII string. Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind.","tags":"","loc":"interface/str_ascii.html"},{"title":"str_ucs4 – PENF","text":"public interface str_ucs4 Convert string of any kind to UCS4 string. Calls interface~~str_ucs4~~CallsGraph interface~str_ucs4 str_ucs4 proc~str_ucs4_default str_ucs4_default interface~str_ucs4->proc~str_ucs4_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures str_ucs4_default Module Procedures private pure function str_ucs4_default (input) result(output) Convert string of default kind to UCS4 string. Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind.","tags":"","loc":"interface/str_ucs4.html"},{"title":"str – PENF","text":"public interface str Convert number (real and integer) to string (number to string type casting). Calls interface~~str~~CallsGraph interface~str str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~str~~CalledByGraph interface~str str proc~bctoi_i1p bctoi_I1P proc~bctoi_i1p->interface~str program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->interface~str program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->interface~str program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->interface~str program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->interface~str program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->interface~str program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->interface~str program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->interface~str program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->interface~str program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->interface~str program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->interface~str program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->interface~str program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->interface~str program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->interface~str program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->interface~str program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->interface~str program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->interface~str program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->interface~str program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->interface~str program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->interface~str program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->interface~str program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->interface~str program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->interface~str program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->interface~str program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->interface~str program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->interface~str program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->interface~str program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->interface~str program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->interface~str program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->interface~str program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->interface~str program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->interface~str program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->interface~str program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->interface~str proc~bctoi_i8p bctoi_I8P proc~bctoi_i8p->interface~str program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->interface~str program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->interface~str program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->interface~str program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->interface~str program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->interface~str program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->interface~str program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->interface~str proc~bctoi_i2p bctoi_I2P proc~bctoi_i2p->interface~str program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->interface~str program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->interface~str program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->interface~str program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->interface~str program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->interface~str program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->interface~str program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->interface~str program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->interface~str program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->interface~str program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->interface~str program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->interface~str proc~bctoi_i4p bctoi_I4P proc~bctoi_i4p->interface~str program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->interface~str program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->interface~str program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->interface~str program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->interface~str program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->interface~str interface~bcton bcton interface~bcton->proc~bctoi_i1p interface~bcton->proc~bctoi_i8p interface~bcton->proc~bctoi_i2p interface~bcton->proc~bctoi_i4p program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures strf_R8P str_R8P strf_R4P str_R4P strf_I8P str_I8P strf_I4P str_I4P strf_I2P str_I2P strf_I1P str_I1P str_bol str_a_R8P str_a_R4P str_a_I8P str_a_I4P str_a_I2P str_a_I1P Module Procedures private elemental function strf_R8P (fm, n) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R8P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. private elemental function str_R8P (n, no_sign, compact) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. private elemental function strf_R4P (fm, n) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R4P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. private elemental function str_R4P (n, no_sign, compact) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. private elemental function strf_I8P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I8P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I8P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function strf_I4P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I4P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I4P (n, no_sign) result(str) Converting integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function strf_I2P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I2P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I2P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function strf_I1P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I1P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I1P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function str_bol (n) result(str) Convert logical to string. Read more… Arguments Type Intent Optional Attributes Name logical, intent(in) :: n Logical to be converted. Return Value character(len=1) Returned string containing input number plus padding zeros. private pure function str_a_R8P (n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_R4P (n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I8P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I4P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I2P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I1P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number.","tags":"","loc":"interface/str.html"},{"title":"strz – PENF","text":"public interface strz Convert integer, to string, prefixing with the right number of zeros (integer to string type casting with zero padding). Calls interface~~strz~~CallsGraph interface~strz strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~strz~~CalledByGraph interface~strz strz program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->interface~strz program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->interface~strz program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->interface~strz program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->interface~strz program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->interface~strz program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->interface~strz program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->interface~strz program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->interface~strz Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures strz_I8P strz_I4P strz_I2P strz_I1P Module Procedures private elemental function strz_I8P (n, nz_pad) result(str) Converting integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I4P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I2P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I1P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros.","tags":"","loc":"interface/strz.html"},{"title":"cton – PENF","text":"public interface cton Convert string to number (real and integer, string to number type casting). Calls interface~~cton~~CallsGraph interface~cton cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~cton~~CalledByGraph interface~cton cton program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->interface~cton program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->interface~cton program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->interface~cton program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->interface~cton program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->interface~cton program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->interface~cton program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->interface~cton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures ctor_R8P ctor_R4P ctoi_I8P ctoi_I4P ctoi_I2P ctoi_I1P Module Procedures private function ctor_R8P (str, knd, pref, error) result(n) Convert string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R8P) Number returned. private function ctor_R4P (str, knd, pref, error) result(n) Convert string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R4P) Number returned. private function ctoi_I8P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I8P) Number returned. private function ctoi_I4P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I4P) Number returned. private function ctoi_I2P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I2P) Number returned. private function ctoi_I1P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I1P) Number returned.","tags":"","loc":"interface/cton.html"},{"title":"bstr – PENF","text":"public interface bstr Convert number (real and integer) to bit-string (number to bit-string type casting). Calls interface~~bstr~~CallsGraph interface~bstr bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~bstr~~CalledByGraph interface~bstr bstr program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->interface~bstr program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->interface~bstr program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->interface~bstr program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->interface~bstr program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->interface~bstr program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->interface~bstr program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->interface~bstr Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures bstr_R8P bstr_R4P bstr_I8P bstr_I4P bstr_I2P bstr_I1P Module Procedures private elemental function bstr_R8P (n) result(bstr) Convert real to string of bits. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. private elemental function bstr_R4P (n) result(bstr) Convert real to string of bits. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. private elemental function bstr_I8P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. private elemental function bstr_I4P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. private elemental function bstr_I2P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Real to be converted. Return Value character(len=16) Returned bit-string containing input number. private elemental function bstr_I1P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Real to be converted. Return Value character(len=8) Returned bit-string containing input number.","tags":"","loc":"interface/bstr.html"},{"title":"bcton – PENF","text":"public interface bcton Convert bit-string to number (real and integer, bit-string to number type casting). Calls interface~~bcton~~CallsGraph interface~bcton bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Called by interface~~bcton~~CalledByGraph interface~bcton bcton program~volatile_doctest volatile_doctest program~volatile_doctest->interface~bcton program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->interface~bcton program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->interface~bcton program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->interface~bcton program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->interface~bcton program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->interface~bcton program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->interface~bcton Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Module Procedures bctor_R8P bctor_R4P bctoi_I8P bctoi_I4P bctoi_I2P bctoi_I1P Module Procedures private elemental function bctor_R8P (bstr, knd) result(n) Convert bit-string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R8P), intent(in) :: knd Number kind. Return Value real(kind=R8P) Number returned. private elemental function bctor_R4P (bstr, knd) result(n) Convert bit-string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R4P), intent(in) :: knd Number kind. Return Value real(kind=R4P) Number returned. private elemental function bctoi_I8P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. Return Value integer(kind=I8P) Number returned. private elemental function bctoi_I4P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. Return Value integer(kind=I4P) Number returned. private elemental function bctoi_I2P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. Return Value integer(kind=I2P) Number returned. private elemental function bctoi_I1P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. Return Value integer(kind=I1P) Number returned.","tags":"","loc":"interface/bcton.html"},{"title":"penf_b_size – PENF","text":"PENF bit/byte size functions. Uses penf_global_parameters_variables module~~penf_b_size~~UsesGraph module~penf_b_size penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Used by module~~penf_b_size~~UsedByGraph module~penf_b_size penf_b_size module~penf_stringify penf_stringify module~penf_stringify->module~penf_b_size program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->module~penf_b_size module~penf penf program~volatile_doctest~99->module~penf program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->module~penf_b_size program~volatile_doctest~105->module~penf program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->module~penf_b_size program~volatile_doctest~101->module~penf program~volatile_doctest~103 volatile_doctest program~volatile_doctest~103->module~penf_b_size program~volatile_doctest~103->module~penf program~volatile_doctest~107 volatile_doctest program~volatile_doctest~107->module~penf_b_size program~volatile_doctest~107->module~penf program~volatile_doctest~109 volatile_doctest program~volatile_doctest~109->module~penf_b_size program~volatile_doctest~109->module~penf program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->module~penf_b_size program~volatile_doctest~100->module~penf module~penf->module~penf_b_size module~penf->module~penf_stringify program~volatile_doctest~102 volatile_doctest program~volatile_doctest~102->module~penf_b_size program~volatile_doctest~102->module~penf program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->module~penf_b_size program~volatile_doctest~104->module~penf program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->module~penf_b_size program~volatile_doctest~106->module~penf program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->module~penf_b_size program~volatile_doctest~108->module~penf program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->module~penf_b_size program~volatile_doctest~110->module~penf program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->module~penf_stringify program~volatile_doctest~25->module~penf program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->module~penf_stringify program~volatile_doctest~57->module~penf program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->module~penf_stringify program~volatile_doctest~68->module~penf program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->module~penf_stringify program~volatile_doctest~36->module~penf program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->module~penf_stringify program~volatile_doctest~15->module~penf program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->module~penf_stringify program~volatile_doctest~47->module~penf program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->module~penf_stringify program~volatile_doctest~79->module~penf program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->module~penf_stringify program~volatile_doctest~26->module~penf program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->module~penf_stringify program~volatile_doctest~58->module~penf program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->module~penf_stringify program~volatile_doctest~5->module~penf program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->module~penf_stringify program~volatile_doctest~37->module~penf program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->module~penf_stringify program~volatile_doctest~69->module~penf program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->module~penf_stringify program~volatile_doctest~89->module~penf program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->module~penf_stringify program~volatile_doctest~16->module~penf program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->module~penf_stringify program~volatile_doctest~48->module~penf program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->module~penf_stringify program~volatile_doctest~80->module~penf program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->module~penf_stringify program~volatile_doctest~27->module~penf program~volatile_doctest~59 volatile_doctest program~volatile_doctest~59->module~penf_stringify program~volatile_doctest~59->module~penf program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->module~penf_stringify program~volatile_doctest~6->module~penf program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->module~penf_stringify program~volatile_doctest~38->module~penf program~volatile_doctest~70 volatile_doctest program~volatile_doctest~70->module~penf_stringify program~volatile_doctest~70->module~penf program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->module~penf_stringify program~volatile_doctest~90->module~penf program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->module~penf_stringify program~volatile_doctest~17->module~penf program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->module~penf_stringify program~volatile_doctest~49->module~penf program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->module~penf_stringify program~volatile_doctest~81->module~penf program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->module~penf_stringify program~volatile_doctest~28->module~penf program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->module~penf_stringify program~volatile_doctest~60->module~penf program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->module~penf_stringify program~volatile_doctest~7->module~penf program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->module~penf_stringify program~volatile_doctest~39->module~penf program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->module~penf_stringify program~volatile_doctest~71->module~penf program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->module~penf_stringify program~volatile_doctest~91->module~penf program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->module~penf_stringify program~volatile_doctest~18->module~penf program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->module~penf_stringify program~volatile_doctest~50->module~penf program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->module~penf_stringify program~volatile_doctest~82->module~penf program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->module~penf_stringify program~volatile_doctest~29->module~penf program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->module~penf_stringify program~volatile_doctest~61->module~penf program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->module~penf_stringify program~volatile_doctest~8->module~penf program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->module~penf_stringify program~volatile_doctest~40->module~penf program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->module~penf_stringify program~volatile_doctest~72->module~penf program~volatile_doctest~92 volatile_doctest program~volatile_doctest~92->module~penf program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->module~penf_stringify program~volatile_doctest~19->module~penf program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->module~penf_stringify program~volatile_doctest~51->module~penf program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->module~penf_stringify program~volatile_doctest~83->module~penf program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->module~penf_stringify program~volatile_doctest~30->module~penf program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->module~penf_stringify program~volatile_doctest~62->module~penf program~volatile_doctest~9 volatile_doctest program~volatile_doctest~9->module~penf_stringify program~volatile_doctest~9->module~penf program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->module~penf_stringify program~volatile_doctest~41->module~penf program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->module~penf_stringify program~volatile_doctest~73->module~penf program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->module~penf program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->module~penf_stringify program~volatile_doctest~20->module~penf program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->module~penf_stringify program~volatile_doctest~52->module~penf program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->module~penf_stringify program~volatile_doctest~84->module~penf program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->module~penf_stringify program~volatile_doctest~31->module~penf program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->module~penf_stringify program~volatile_doctest~63->module~penf program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->module~penf_stringify program~volatile_doctest~10->module~penf program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->module~penf_stringify program~volatile_doctest~42->module~penf program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->module~penf_stringify program~volatile_doctest~74->module~penf program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->module~penf program~volatile_doctest volatile_doctest program~volatile_doctest->module~penf_stringify program~volatile_doctest->module~penf program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->module~penf_stringify program~volatile_doctest~21->module~penf program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->module~penf_stringify program~volatile_doctest~53->module~penf program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->module~penf_stringify program~volatile_doctest~85->module~penf program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->module~penf_stringify program~volatile_doctest~32->module~penf program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->module~penf_stringify program~volatile_doctest~64->module~penf program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->module~penf_stringify program~volatile_doctest~11->module~penf program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->module~penf_stringify program~volatile_doctest~43->module~penf program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->module~penf_stringify program~volatile_doctest~75->module~penf program~volatile_doctest~95 volatile_doctest program~volatile_doctest~95->module~penf program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->module~penf_stringify program~volatile_doctest~2->module~penf program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->module~penf_stringify program~volatile_doctest~22->module~penf program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->module~penf_stringify program~volatile_doctest~54->module~penf program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->module~penf_stringify program~volatile_doctest~86->module~penf program~volatile_doctest~33 volatile_doctest program~volatile_doctest~33->module~penf_stringify program~volatile_doctest~33->module~penf program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->module~penf_stringify program~volatile_doctest~65->module~penf program~volatile_doctest~12 volatile_doctest program~volatile_doctest~12->module~penf_stringify program~volatile_doctest~12->module~penf program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->module~penf_stringify program~volatile_doctest~44->module~penf program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->module~penf_stringify program~volatile_doctest~76->module~penf program~volatile_doctest~96 volatile_doctest program~volatile_doctest~96->module~penf program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->module~penf_stringify program~volatile_doctest~87->module~penf program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->module~penf_stringify program~volatile_doctest~3->module~penf program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->module~penf_stringify program~volatile_doctest~23->module~penf program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->module~penf_stringify program~volatile_doctest~55->module~penf program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->module~penf_stringify program~volatile_doctest~34->module~penf program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->module~penf_stringify program~volatile_doctest~66->module~penf program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->module~penf_stringify program~volatile_doctest~13->module~penf program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->module~penf_stringify program~volatile_doctest~45->module~penf program~volatile_doctest~77 volatile_doctest program~volatile_doctest~77->module~penf_stringify program~volatile_doctest~77->module~penf program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->module~penf program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->module~penf_stringify program~volatile_doctest~4->module~penf program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->module~penf_stringify program~volatile_doctest~24->module~penf program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->module~penf_stringify program~volatile_doctest~56->module~penf program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->module~penf_stringify program~volatile_doctest~88->module~penf program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->module~penf_stringify program~volatile_doctest~35->module~penf program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->module~penf_stringify program~volatile_doctest~67->module~penf program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->module~penf_stringify program~volatile_doctest~14->module~penf program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->module~penf_stringify program~volatile_doctest~46->module~penf program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->module~penf_stringify program~volatile_doctest~78->module~penf program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->module~penf Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Interfaces bit_size byte_size Functions bit_size_R16P bit_size_R8P bit_size_R4P bit_size_chr byte_size_R16P byte_size_R8P byte_size_R4P byte_size_chr byte_size_I8P byte_size_I4P byte_size_I2P byte_size_I1P Interfaces public interface bit_size Overloading of the intrinsic bit_size function for computing the number of bits of (also) real and character variables. private elemental function bit_size_R8P (i) result(bits) Compute the number of bits of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. private elemental function bit_size_R4P (i) result(bits) Compute the number of bits of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. private elemental function bit_size_chr (i) result(bits) Compute the number of bits of a character variable. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bits must be computed. Return Value integer(kind=I4P) Number of bits of c. public interface byte_size Compute the number of bytes of a variable. private elemental function byte_size_I8P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I4P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I2P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I1P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_R8P (i) result(bytes) Compute the number of bytes of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. private elemental function byte_size_R4P (i) result(bytes) Compute the number of bytes of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. private elemental function byte_size_chr (i) result(bytes) Compute the number of bytes of a character variable. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bytes must be computed. Return Value integer(kind=I4P) Number of bytes of c. Functions private elemental function bit_size_R16P (i) result(bits) Compute the number of bits of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I2P) Number of bits of r. private elemental function bit_size_R8P (i) result(bits) Compute the number of bits of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. private elemental function bit_size_R4P (i) result(bits) Compute the number of bits of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bits must be computed. Return Value integer(kind=I1P) Number of bits of r. private elemental function bit_size_chr (i) result(bits) Compute the number of bits of a character variable. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bits must be computed. Return Value integer(kind=I4P) Number of bits of c. private elemental function byte_size_R16P (i) result(bytes) Compute the number of bytes of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. private elemental function byte_size_R8P (i) result(bytes) Compute the number of bytes of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. private elemental function byte_size_R4P (i) result(bytes) Compute the number of bytes of a real variable. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: i Real variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of r. private elemental function byte_size_chr (i) result(bytes) Compute the number of bytes of a character variable. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: i Character variable whose number of bytes must be computed. Return Value integer(kind=I4P) Number of bytes of c. private elemental function byte_size_I8P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I4P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I2P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i. private elemental function byte_size_I1P (i) result(bytes) Compute the number of bytes of an integer variable. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: i Integer variable whose number of bytes must be computed. Return Value integer(kind=I1P) Number of bytes of i.","tags":"","loc":"module/penf_b_size.html"},{"title":"penf_global_parameters_variables – PENF","text":"PENF global parameters and variables. Note All module defined entities are public. Used by module~~penf_global_parameters_variables~~UsedByGraph module~penf_global_parameters_variables penf_global_parameters_variables module~penf_b_size penf_b_size module~penf_b_size->module~penf_global_parameters_variables module~penf penf module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size program~volatile_doctest~109 volatile_doctest program~volatile_doctest~109->module~penf_b_size program~volatile_doctest~109->module~penf program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->module~penf program~volatile_doctest~25->module~penf_stringify program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->module~penf program~volatile_doctest~57->module~penf_stringify program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->module~penf program~volatile_doctest~36->module~penf_stringify program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->module~penf program~volatile_doctest~68->module~penf_stringify program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->module~penf_b_size program~volatile_doctest~99->module~penf program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->module~penf program~volatile_doctest~15->module~penf_stringify program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->module~penf program~volatile_doctest~47->module~penf_stringify program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->module~penf program~volatile_doctest~79->module~penf_stringify program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->module~penf_b_size program~volatile_doctest~110->module~penf program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->module~penf program~volatile_doctest~26->module~penf_stringify program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->module~penf program~volatile_doctest~58->module~penf_stringify program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->module~penf program~volatile_doctest~5->module~penf_stringify program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->module~penf program~volatile_doctest~37->module~penf_stringify program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->module~penf program~volatile_doctest~69->module~penf_stringify program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->module~penf program~volatile_doctest~89->module~penf_stringify program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->module~penf_b_size program~volatile_doctest~100->module~penf program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->module~penf program~volatile_doctest~16->module~penf_stringify program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->module~penf program~volatile_doctest~48->module~penf_stringify program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->module~penf program~volatile_doctest~80->module~penf_stringify program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->module~penf program~volatile_doctest~27->module~penf_stringify program~volatile_doctest~59 volatile_doctest program~volatile_doctest~59->module~penf program~volatile_doctest~59->module~penf_stringify program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->module~penf program~volatile_doctest~6->module~penf_stringify program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->module~penf program~volatile_doctest~38->module~penf_stringify program~volatile_doctest~70 volatile_doctest program~volatile_doctest~70->module~penf program~volatile_doctest~70->module~penf_stringify program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->module~penf program~volatile_doctest~90->module~penf_stringify program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->module~penf_b_size program~volatile_doctest~101->module~penf program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->module~penf program~volatile_doctest~17->module~penf_stringify program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->module~penf program~volatile_doctest~49->module~penf_stringify program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->module~penf program~volatile_doctest~81->module~penf_stringify program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->module~penf program~volatile_doctest~28->module~penf_stringify program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->module~penf program~volatile_doctest~60->module~penf_stringify program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->module~penf program~volatile_doctest~7->module~penf_stringify program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->module~penf program~volatile_doctest~39->module~penf_stringify program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->module~penf program~volatile_doctest~71->module~penf_stringify program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->module~penf program~volatile_doctest~91->module~penf_stringify program~volatile_doctest~102 volatile_doctest program~volatile_doctest~102->module~penf_b_size program~volatile_doctest~102->module~penf program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->module~penf program~volatile_doctest~18->module~penf_stringify program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->module~penf program~volatile_doctest~50->module~penf_stringify program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->module~penf program~volatile_doctest~82->module~penf_stringify program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->module~penf program~volatile_doctest~29->module~penf_stringify program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->module~penf program~volatile_doctest~61->module~penf_stringify program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->module~penf program~volatile_doctest~8->module~penf_stringify program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->module~penf program~volatile_doctest~40->module~penf_stringify program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->module~penf program~volatile_doctest~72->module~penf_stringify program~volatile_doctest~92 volatile_doctest program~volatile_doctest~92->module~penf program~volatile_doctest~103 volatile_doctest program~volatile_doctest~103->module~penf_b_size program~volatile_doctest~103->module~penf program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->module~penf program~volatile_doctest~19->module~penf_stringify program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->module~penf program~volatile_doctest~51->module~penf_stringify program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->module~penf program~volatile_doctest~83->module~penf_stringify program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->module~penf program~volatile_doctest~30->module~penf_stringify program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->module~penf program~volatile_doctest~62->module~penf_stringify program~volatile_doctest~9 volatile_doctest program~volatile_doctest~9->module~penf program~volatile_doctest~9->module~penf_stringify program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->module~penf program~volatile_doctest~41->module~penf_stringify program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->module~penf program~volatile_doctest~73->module~penf_stringify program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->module~penf program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->module~penf_b_size program~volatile_doctest~104->module~penf program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->module~penf program~volatile_doctest~20->module~penf_stringify program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->module~penf program~volatile_doctest~52->module~penf_stringify program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->module~penf program~volatile_doctest~84->module~penf_stringify program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->module~penf program~volatile_doctest~31->module~penf_stringify program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->module~penf program~volatile_doctest~63->module~penf_stringify program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->module~penf program~volatile_doctest~10->module~penf_stringify program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->module~penf program~volatile_doctest~42->module~penf_stringify program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->module~penf program~volatile_doctest~74->module~penf_stringify program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->module~penf program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->module~penf program~volatile_doctest~53->module~penf_stringify program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->module~penf program~volatile_doctest~85->module~penf_stringify program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->module~penf_b_size program~volatile_doctest~105->module~penf program~volatile_doctest volatile_doctest program~volatile_doctest->module~penf program~volatile_doctest->module~penf_stringify program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->module~penf program~volatile_doctest~21->module~penf_stringify program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->module~penf program~volatile_doctest~32->module~penf_stringify program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->module~penf program~volatile_doctest~64->module~penf_stringify program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->module~penf program~volatile_doctest~11->module~penf_stringify program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->module~penf program~volatile_doctest~43->module~penf_stringify program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->module~penf program~volatile_doctest~75->module~penf_stringify program~volatile_doctest~95 volatile_doctest program~volatile_doctest~95->module~penf program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->module~penf_b_size program~volatile_doctest~106->module~penf program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->module~penf program~volatile_doctest~2->module~penf_stringify program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->module~penf program~volatile_doctest~22->module~penf_stringify program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->module~penf program~volatile_doctest~54->module~penf_stringify program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->module~penf program~volatile_doctest~86->module~penf_stringify program~volatile_doctest~33 volatile_doctest program~volatile_doctest~33->module~penf program~volatile_doctest~33->module~penf_stringify program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->module~penf program~volatile_doctest~65->module~penf_stringify program~volatile_doctest~12 volatile_doctest program~volatile_doctest~12->module~penf program~volatile_doctest~12->module~penf_stringify program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->module~penf program~volatile_doctest~44->module~penf_stringify program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->module~penf program~volatile_doctest~76->module~penf_stringify program~volatile_doctest~96 volatile_doctest program~volatile_doctest~96->module~penf program~volatile_doctest~107 volatile_doctest program~volatile_doctest~107->module~penf_b_size program~volatile_doctest~107->module~penf program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->module~penf program~volatile_doctest~3->module~penf_stringify program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->module~penf program~volatile_doctest~23->module~penf_stringify program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->module~penf program~volatile_doctest~55->module~penf_stringify program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->module~penf program~volatile_doctest~87->module~penf_stringify program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->module~penf program~volatile_doctest~34->module~penf_stringify program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->module~penf program~volatile_doctest~66->module~penf_stringify program~volatile_doctest~77 volatile_doctest program~volatile_doctest~77->module~penf program~volatile_doctest~77->module~penf_stringify program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->module~penf program~volatile_doctest~13->module~penf_stringify program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->module~penf program~volatile_doctest~45->module~penf_stringify program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->module~penf program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->module~penf_b_size program~volatile_doctest~108->module~penf program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->module~penf program~volatile_doctest~4->module~penf_stringify program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->module~penf program~volatile_doctest~24->module~penf_stringify program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->module~penf program~volatile_doctest~56->module~penf_stringify program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->module~penf program~volatile_doctest~88->module~penf_stringify program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->module~penf program~volatile_doctest~35->module~penf_stringify program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->module~penf program~volatile_doctest~67->module~penf_stringify program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->module~penf program~volatile_doctest~14->module~penf_stringify program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->module~penf program~volatile_doctest~46->module~penf_stringify program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->module~penf program~volatile_doctest~78->module~penf_stringify program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->module~penf Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Variables endianL endianB ASCII UCS4 CK R16P R8P R4P R_P I8P I4P I2P I1P I_P FR16P FR8P FR4P FR_P FI8P FI8PZP FI4P FI4PZP FI2P FI2PZP FI1P FI1PZP FI_P FI_PZP DR16P DR8P DR4P DR_P DI8P DI4P DI2P DI1P DI_P CHARACTER_KINDS_LIST REAL_KINDS_LIST REAL_FORMATS_LIST INTEGER_KINDS_LIST INTEGER_FORMATS_LIST MinR16P MaxR16P MinR8P MaxR8P MinR4P MaxR4P MinR_P MaxR_P MinI8P MinI4P MinI2P MinI1P MinI_P MaxI8P MaxI4P MaxI2P MaxI1P MaxI_P smallR16P smallR8P smallR4P smallR_P ZeroR16P ZeroR8P ZeroR4P ZeroR_P BIR16P BIR8P BIR4P BIR_P BYR16P BYR8P BYR4P BYR_P BII8P BII4P BII2P BII1P BII_P BYI8P BYI4P BYI2P BYI1P BYI_P Variables Type Visibility Attributes Name Initial integer, public, parameter :: endianL = 1 Little endian parameter. integer, public, parameter :: endianB = 0 Big endian parameter. integer, public, parameter :: ASCII = selected_char_kind('default') ASCII character set kind defined as default set. integer, public, parameter :: UCS4 = selected_char_kind('default') Unicode character set kind defined as default set. integer, public, parameter :: CK = selected_char_kind('default') Default kind character. integer, public, parameter :: R16P = selected_real_kind(15, 307) 15 digits, range ; 64 bits. integer, public, parameter :: R8P = selected_real_kind(15, 307) 15 digits, range ; 64 bits. integer, public, parameter :: R4P = selected_real_kind(6, 37) 6  digits, range ; 32 bits. integer, public, parameter :: R_P = R8P Default real precision. integer, public, parameter :: I8P = selected_int_kind(18) Range , 19 digits plus sign; 64 bits. integer, public, parameter :: I4P = selected_int_kind(9) Range , 10 digits plus sign; 32 bits. integer, public, parameter :: I2P = selected_int_kind(4) Range , 5  digits plus sign; 16 bits. integer, public, parameter :: I1P = selected_int_kind(2) Range , 3  digits plus sign; 8  bits. integer, public, parameter :: I_P = I4P Default integer precision. character, public, parameter :: FR16P = '(E23.15E3)' Output format for kind=R8P real. character, public, parameter :: FR8P = '(E23.15E3)' Output format for kind=R8P real. character, public, parameter :: FR4P = '(E13.6E2)' Output format for kind=R4P real. character, public, parameter :: FR_P = FR8P Output format for kind=R_P real. character, public, parameter :: FI8P = '(I20)' Output format for kind=I8P integer. character, public, parameter :: FI8PZP = '(I20.19)' Output format for kind=I8P integer with zero prefixing. character, public, parameter :: FI4P = '(I11)' Output format for kind=I4P integer. character, public, parameter :: FI4PZP = '(I11.10)' Output format for kind=I4P integer with zero prefixing. character, public, parameter :: FI2P = '(I6)' Output format for kind=I2P integer. character, public, parameter :: FI2PZP = '(I6.5)' Output format for kind=I2P integer with zero prefixing. character, public, parameter :: FI1P = '(I4)' Output format for kind=I1P integer. character, public, parameter :: FI1PZP = '(I4.3)' Output format for kind=I1P integer with zero prefixing. character, public, parameter :: FI_P = FI4P Output format for kind=I_P integer. character, public, parameter :: FI_PZP = FI4PZP Output format for kind=I_P integer with zero prefixing. integer, public, parameter :: DR16P = 23 Number of digits of output format FR8P. integer, public, parameter :: DR8P = 23 Number of digits of output format FR8P. integer, public, parameter :: DR4P = 13 Number of digits of output format FR4P. integer, public, parameter :: DR_P = DR8P Number of digits of output format FR_P. integer, public, parameter :: DI8P = 20 Number of digits of output format I8P. integer, public, parameter :: DI4P = 11 Number of digits of output format I4P. integer, public, parameter :: DI2P = 6 Number of digits of output format I2P. integer, public, parameter :: DI1P = 4 Number of digits of output format I1P. integer, public, parameter :: DI_P = DI4P Number of digits of output format I_P. integer, public, parameter :: CHARACTER_KINDS_LIST (1:3) = [ASCII, UCS4, CK] List of character kinds. integer, public, parameter :: REAL_KINDS_LIST (1:3) = [R8P, R4P, R_P] List of real kinds. character, public, parameter :: REAL_FORMATS_LIST (1:3) = [FR8P, FR4P//' ', FR_P] List of real formats. integer, public, parameter :: INTEGER_KINDS_LIST (1:5) = [I8P, I4P, I2P, I1P, I_P] List of integer kinds. character, public, parameter :: INTEGER_FORMATS_LIST (1:5) = [FI8P, FI4P, FI2P//' ', FI1P//' ', FI_P] List of integer formats. real(kind=R8P), public, parameter :: MinR16P = -huge(1._R8P) Minimum value of kind=R8P real. real(kind=R8P), public, parameter :: MaxR16P = huge(1._R8P) Maximum value of kind=R8P real. real(kind=R8P), public, parameter :: MinR8P = -huge(1._R8P) Minimum value of kind=R8P real. real(kind=R8P), public, parameter :: MaxR8P = huge(1._R8P) Maximum value of kind=R8P real. real(kind=R4P), public, parameter :: MinR4P = -huge(1._R4P) Minimum value of kind=R4P real. real(kind=R4P), public, parameter :: MaxR4P = huge(1._R4P) Maximum value of kind=R4P real. real(kind=R_P), public, parameter :: MinR_P = -huge(1._R_P) Minimum value of kind=R_P real. real(kind=R_P), public, parameter :: MaxR_P = huge(1._R_P) Maximum value of kind=R_P real. integer(kind=I8P), public, parameter :: MinI8P = -huge(1_I8P) Minimum value of kind=I8P integer. integer(kind=I4P), public, parameter :: MinI4P = -huge(1_I4P) Minimum value of kind=I4P integer. integer(kind=I2P), public, parameter :: MinI2P = -huge(1_I2P) Minimum value of kind=I2P integer. integer(kind=I1P), public, parameter :: MinI1P = -huge(1_I1P) Minimum value of kind=I1P integer. integer(kind=I_P), public, parameter :: MinI_P = -huge(1_I_P) Minimum value of kind=I_P integer. integer(kind=I8P), public, parameter :: MaxI8P = huge(1_I8P) Maximum value of kind=I8P integer. integer(kind=I4P), public, parameter :: MaxI4P = huge(1_I4P) Maximum value of kind=I4P integer. integer(kind=I2P), public, parameter :: MaxI2P = huge(1_I2P) Maximum value of kind=I2P integer. integer(kind=I1P), public, parameter :: MaxI1P = huge(1_I1P) Maximum value of kind=I1P integer. integer(kind=I_P), public, parameter :: MaxI_P = huge(1_I_P) Maximum value of kind=I_P integer. real(kind=R8P), public, parameter :: smallR16P = tiny(1._R8P) Smallest representable value of kind=R8P real. real(kind=R8P), public, parameter :: smallR8P = tiny(1._R8P) Smallest representable value of kind=R8P real. real(kind=R4P), public, parameter :: smallR4P = tiny(1._R4P) Smallest representable value of kind=R4P real. real(kind=R_P), public, parameter :: smallR_P = tiny(1._R_P) Smallest representable value of kind=R_P real. real(kind=R8P), public, parameter :: ZeroR16P = 0._R8P real(kind=R8P), public, parameter :: ZeroR8P = 0._R8P real(kind=R4P), public, parameter :: ZeroR4P = 0._R4P real(kind=R_P), public, parameter :: ZeroR_P = 0._R_P integer(kind=I1P), public, parameter :: BIR16P = storage_size(MaxR8P) Number of bits of kind=R8P real. integer(kind=I1P), public, parameter :: BIR8P = storage_size(MaxR8P) Number of bits of kind=R8P real. integer(kind=I1P), public, parameter :: BIR4P = storage_size(MaxR4P) Number of bits of kind=R4P real. integer(kind=I1P), public, parameter :: BIR_P = storage_size(MaxR_P) Number of bits of kind=R_P real. integer(kind=I1P), public, parameter :: BYR16P = BIR8P/8_I1P Number of bytes of kind=R8P real. integer(kind=I1P), public, parameter :: BYR8P = BIR8P/8_I1P Number of bytes of kind=R8P real. integer(kind=I1P), public, parameter :: BYR4P = BIR4P/8_I1P Number of bytes of kind=R4P real. integer(kind=I1P), public, parameter :: BYR_P = BIR_P/8_I1P Number of bytes of kind=R_P real. integer(kind=I8P), public, parameter :: BII8P = storage_size(MaxI8P) Number of bits of kind=I8P integer. integer(kind=I4P), public, parameter :: BII4P = storage_size(MaxI4P) Number of bits of kind=I4P integer. integer(kind=I2P), public, parameter :: BII2P = storage_size(MaxI2P) Number of bits of kind=I2P integer. integer(kind=I1P), public, parameter :: BII1P = storage_size(MaxI1P) Number of bits of kind=I1P integer. integer(kind=I_P), public, parameter :: BII_P = storage_size(MaxI_P) Number of bits of kind=I_P integer. integer(kind=I8P), public, parameter :: BYI8P = BII8P/8_I8P Number of bytes of kind=I8P integer. integer(kind=I4P), public, parameter :: BYI4P = BII4P/8_I4P Number of bytes of kind=I4P integer. integer(kind=I2P), public, parameter :: BYI2P = BII2P/8_I2P Number of bytes of kind=I2P integer. integer(kind=I1P), public, parameter :: BYI1P = BII1P/8_I1P Number of bytes of kind=I1P integer. integer(kind=I_P), public, parameter :: BYI_P = BII_P/8_I_P Number of bytes of kind=I_P integer.","tags":"","loc":"module/penf_global_parameters_variables.html"},{"title":"penf – PENF","text":"Portability Environment for Fortran poor people. Uses penf_global_parameters_variables penf_stringify penf_b_size module~~penf~~UsesGraph module~penf penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Used by module~~penf~~UsedByGraph module~penf penf program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->module~penf program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->module~penf program~volatile_doctest~109 volatile_doctest program~volatile_doctest~109->module~penf program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->module~penf program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->module~penf program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->module~penf program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->module~penf program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->module~penf program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->module~penf program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->module~penf program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->module~penf program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->module~penf program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->module~penf program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->module~penf program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->module~penf program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->module~penf program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->module~penf program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->module~penf program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->module~penf program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->module~penf program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->module~penf program~volatile_doctest~59 volatile_doctest program~volatile_doctest~59->module~penf program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->module~penf program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->module~penf program~volatile_doctest~70 volatile_doctest program~volatile_doctest~70->module~penf program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->module~penf program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->module~penf program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->module~penf program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->module~penf program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->module~penf program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->module~penf program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->module~penf program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->module~penf program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->module~penf program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->module~penf program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->module~penf program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->module~penf program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->module~penf program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->module~penf program~volatile_doctest~102 volatile_doctest program~volatile_doctest~102->module~penf program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->module~penf program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->module~penf program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->module~penf program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->module~penf program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->module~penf program~volatile_doctest~92 volatile_doctest program~volatile_doctest~92->module~penf program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->module~penf program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->module~penf program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->module~penf program~volatile_doctest~103 volatile_doctest program~volatile_doctest~103->module~penf program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->module~penf program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->module~penf program~volatile_doctest~9 volatile_doctest program~volatile_doctest~9->module~penf program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->module~penf program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->module~penf program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->module~penf program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->module~penf program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->module~penf program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->module~penf program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->module~penf program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->module~penf program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->module~penf program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->module~penf program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->module~penf program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->module~penf program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->module~penf program~volatile_doctest volatile_doctest program~volatile_doctest->module~penf program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->module~penf program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->module~penf program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->module~penf program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->module~penf program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->module~penf program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->module~penf program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->module~penf program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->module~penf program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->module~penf program~volatile_doctest~95 volatile_doctest program~volatile_doctest~95->module~penf program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->module~penf program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->module~penf program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->module~penf program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->module~penf program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->module~penf program~volatile_doctest~33 volatile_doctest program~volatile_doctest~33->module~penf program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->module~penf program~volatile_doctest~12 volatile_doctest program~volatile_doctest~12->module~penf program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->module~penf program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->module~penf program~volatile_doctest~96 volatile_doctest program~volatile_doctest~96->module~penf program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->module~penf program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->module~penf program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->module~penf program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->module~penf program~volatile_doctest~107 volatile_doctest program~volatile_doctest~107->module~penf program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->module~penf program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->module~penf program~volatile_doctest~77 volatile_doctest program~volatile_doctest~77->module~penf program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->module~penf program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->module~penf program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->module~penf program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->module~penf program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->module~penf program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->module~penf program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->module~penf program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->module~penf program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->module~penf program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->module~penf program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->module~penf program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->module~penf program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->module~penf program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->module~penf Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Variables endian is_initialized Interfaces bit_size digit Functions digit_I8 digit_I4 digit_I2 digit_I1 Subroutines check_endian penf_init penf_print Variables Type Visibility Attributes Name Initial integer, public :: endian = endianL Bit ordering: Little endian (endianL), or Big endian (endianB). logical, public :: is_initialized = .false. Check the initialization of some variables that must be initialized. Interfaces public interface bit_size Overloading of the intrinsic bit_size function for computing the number of bits of (also) real and character variables. public interface digit Compute the number of digits in decimal base of the input integer. private elemental function digit_I8 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I4 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I2 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I1 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. Functions private elemental function digit_I8 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I4 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I2 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. private elemental function digit_I1 (n) result(digit) Compute the number of digits in decimal base of the input integer. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Input integer. Return Value integer(kind=I4P) Number of digits. Subroutines public subroutine check_endian () Check the type of bit ordering (big or little endian) of the running architecture. Read more… Arguments None public subroutine penf_init () Initialize PENF’s variables that are not initialized into the definition specification. Read more… Arguments None public subroutine penf_print (unit, pref, iostat, iomsg) Print to the specified unit the PENF’s environment data. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: unit Logic unit. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: iostat IO error. character, intent(out), optional :: iomsg IO error message.","tags":"","loc":"module/penf.html"},{"title":"penf_stringify – PENF","text":"PENF string-to-number (and viceversa) facility. Uses penf_global_parameters_variables iso_fortran_env penf_b_size module~~penf_stringify~~UsesGraph module~penf_stringify penf_stringify module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Used by module~~penf_stringify~~UsedByGraph module~penf_stringify penf_stringify program~volatile_doctest~25 volatile_doctest program~volatile_doctest~25->module~penf_stringify module~penf penf program~volatile_doctest~25->module~penf program~volatile_doctest~57 volatile_doctest program~volatile_doctest~57->module~penf_stringify program~volatile_doctest~57->module~penf program~volatile_doctest~68 volatile_doctest program~volatile_doctest~68->module~penf_stringify program~volatile_doctest~68->module~penf program~volatile_doctest~36 volatile_doctest program~volatile_doctest~36->module~penf_stringify program~volatile_doctest~36->module~penf program~volatile_doctest~15 volatile_doctest program~volatile_doctest~15->module~penf_stringify program~volatile_doctest~15->module~penf program~volatile_doctest~47 volatile_doctest program~volatile_doctest~47->module~penf_stringify program~volatile_doctest~47->module~penf program~volatile_doctest~79 volatile_doctest program~volatile_doctest~79->module~penf_stringify program~volatile_doctest~79->module~penf program~volatile_doctest~26 volatile_doctest program~volatile_doctest~26->module~penf_stringify program~volatile_doctest~26->module~penf program~volatile_doctest~58 volatile_doctest program~volatile_doctest~58->module~penf_stringify program~volatile_doctest~58->module~penf program~volatile_doctest~5 volatile_doctest program~volatile_doctest~5->module~penf_stringify program~volatile_doctest~5->module~penf program~volatile_doctest~37 volatile_doctest program~volatile_doctest~37->module~penf_stringify program~volatile_doctest~37->module~penf program~volatile_doctest~69 volatile_doctest program~volatile_doctest~69->module~penf_stringify program~volatile_doctest~69->module~penf program~volatile_doctest~89 volatile_doctest program~volatile_doctest~89->module~penf_stringify program~volatile_doctest~89->module~penf program~volatile_doctest~16 volatile_doctest program~volatile_doctest~16->module~penf_stringify program~volatile_doctest~16->module~penf program~volatile_doctest~48 volatile_doctest program~volatile_doctest~48->module~penf_stringify program~volatile_doctest~48->module~penf program~volatile_doctest~80 volatile_doctest program~volatile_doctest~80->module~penf_stringify program~volatile_doctest~80->module~penf program~volatile_doctest~27 volatile_doctest program~volatile_doctest~27->module~penf_stringify program~volatile_doctest~27->module~penf program~volatile_doctest~59 volatile_doctest program~volatile_doctest~59->module~penf_stringify program~volatile_doctest~59->module~penf program~volatile_doctest~6 volatile_doctest program~volatile_doctest~6->module~penf_stringify program~volatile_doctest~6->module~penf program~volatile_doctest~38 volatile_doctest program~volatile_doctest~38->module~penf_stringify program~volatile_doctest~38->module~penf program~volatile_doctest~70 volatile_doctest program~volatile_doctest~70->module~penf_stringify program~volatile_doctest~70->module~penf program~volatile_doctest~90 volatile_doctest program~volatile_doctest~90->module~penf_stringify program~volatile_doctest~90->module~penf program~volatile_doctest~17 volatile_doctest program~volatile_doctest~17->module~penf_stringify program~volatile_doctest~17->module~penf program~volatile_doctest~49 volatile_doctest program~volatile_doctest~49->module~penf_stringify program~volatile_doctest~49->module~penf program~volatile_doctest~81 volatile_doctest program~volatile_doctest~81->module~penf_stringify program~volatile_doctest~81->module~penf program~volatile_doctest~28 volatile_doctest program~volatile_doctest~28->module~penf_stringify program~volatile_doctest~28->module~penf program~volatile_doctest~60 volatile_doctest program~volatile_doctest~60->module~penf_stringify program~volatile_doctest~60->module~penf program~volatile_doctest~7 volatile_doctest program~volatile_doctest~7->module~penf_stringify program~volatile_doctest~7->module~penf program~volatile_doctest~39 volatile_doctest program~volatile_doctest~39->module~penf_stringify program~volatile_doctest~39->module~penf program~volatile_doctest~71 volatile_doctest program~volatile_doctest~71->module~penf_stringify program~volatile_doctest~71->module~penf program~volatile_doctest~91 volatile_doctest program~volatile_doctest~91->module~penf_stringify program~volatile_doctest~91->module~penf module~penf->module~penf_stringify program~volatile_doctest~18 volatile_doctest program~volatile_doctest~18->module~penf_stringify program~volatile_doctest~18->module~penf program~volatile_doctest~50 volatile_doctest program~volatile_doctest~50->module~penf_stringify program~volatile_doctest~50->module~penf program~volatile_doctest~82 volatile_doctest program~volatile_doctest~82->module~penf_stringify program~volatile_doctest~82->module~penf program~volatile_doctest~29 volatile_doctest program~volatile_doctest~29->module~penf_stringify program~volatile_doctest~29->module~penf program~volatile_doctest~61 volatile_doctest program~volatile_doctest~61->module~penf_stringify program~volatile_doctest~61->module~penf program~volatile_doctest~8 volatile_doctest program~volatile_doctest~8->module~penf_stringify program~volatile_doctest~8->module~penf program~volatile_doctest~40 volatile_doctest program~volatile_doctest~40->module~penf_stringify program~volatile_doctest~40->module~penf program~volatile_doctest~72 volatile_doctest program~volatile_doctest~72->module~penf_stringify program~volatile_doctest~72->module~penf program~volatile_doctest~19 volatile_doctest program~volatile_doctest~19->module~penf_stringify program~volatile_doctest~19->module~penf program~volatile_doctest~51 volatile_doctest program~volatile_doctest~51->module~penf_stringify program~volatile_doctest~51->module~penf program~volatile_doctest~83 volatile_doctest program~volatile_doctest~83->module~penf_stringify program~volatile_doctest~83->module~penf program~volatile_doctest~30 volatile_doctest program~volatile_doctest~30->module~penf_stringify program~volatile_doctest~30->module~penf program~volatile_doctest~62 volatile_doctest program~volatile_doctest~62->module~penf_stringify program~volatile_doctest~62->module~penf program~volatile_doctest~9 volatile_doctest program~volatile_doctest~9->module~penf_stringify program~volatile_doctest~9->module~penf program~volatile_doctest~41 volatile_doctest program~volatile_doctest~41->module~penf_stringify program~volatile_doctest~41->module~penf program~volatile_doctest~73 volatile_doctest program~volatile_doctest~73->module~penf_stringify program~volatile_doctest~73->module~penf program~volatile_doctest~20 volatile_doctest program~volatile_doctest~20->module~penf_stringify program~volatile_doctest~20->module~penf program~volatile_doctest~52 volatile_doctest program~volatile_doctest~52->module~penf_stringify program~volatile_doctest~52->module~penf program~volatile_doctest~84 volatile_doctest program~volatile_doctest~84->module~penf_stringify program~volatile_doctest~84->module~penf program~volatile_doctest~31 volatile_doctest program~volatile_doctest~31->module~penf_stringify program~volatile_doctest~31->module~penf program~volatile_doctest~63 volatile_doctest program~volatile_doctest~63->module~penf_stringify program~volatile_doctest~63->module~penf program~volatile_doctest~10 volatile_doctest program~volatile_doctest~10->module~penf_stringify program~volatile_doctest~10->module~penf program~volatile_doctest~42 volatile_doctest program~volatile_doctest~42->module~penf_stringify program~volatile_doctest~42->module~penf program~volatile_doctest~74 volatile_doctest program~volatile_doctest~74->module~penf_stringify program~volatile_doctest~74->module~penf program~volatile_doctest volatile_doctest program~volatile_doctest->module~penf_stringify program~volatile_doctest->module~penf program~volatile_doctest~21 volatile_doctest program~volatile_doctest~21->module~penf_stringify program~volatile_doctest~21->module~penf program~volatile_doctest~53 volatile_doctest program~volatile_doctest~53->module~penf_stringify program~volatile_doctest~53->module~penf program~volatile_doctest~85 volatile_doctest program~volatile_doctest~85->module~penf_stringify program~volatile_doctest~85->module~penf program~volatile_doctest~32 volatile_doctest program~volatile_doctest~32->module~penf_stringify program~volatile_doctest~32->module~penf program~volatile_doctest~64 volatile_doctest program~volatile_doctest~64->module~penf_stringify program~volatile_doctest~64->module~penf program~volatile_doctest~11 volatile_doctest program~volatile_doctest~11->module~penf_stringify program~volatile_doctest~11->module~penf program~volatile_doctest~43 volatile_doctest program~volatile_doctest~43->module~penf_stringify program~volatile_doctest~43->module~penf program~volatile_doctest~75 volatile_doctest program~volatile_doctest~75->module~penf_stringify program~volatile_doctest~75->module~penf program~volatile_doctest~2 volatile_doctest program~volatile_doctest~2->module~penf_stringify program~volatile_doctest~2->module~penf program~volatile_doctest~22 volatile_doctest program~volatile_doctest~22->module~penf_stringify program~volatile_doctest~22->module~penf program~volatile_doctest~54 volatile_doctest program~volatile_doctest~54->module~penf_stringify program~volatile_doctest~54->module~penf program~volatile_doctest~86 volatile_doctest program~volatile_doctest~86->module~penf_stringify program~volatile_doctest~86->module~penf program~volatile_doctest~33 volatile_doctest program~volatile_doctest~33->module~penf_stringify program~volatile_doctest~33->module~penf program~volatile_doctest~65 volatile_doctest program~volatile_doctest~65->module~penf_stringify program~volatile_doctest~65->module~penf program~volatile_doctest~12 volatile_doctest program~volatile_doctest~12->module~penf_stringify program~volatile_doctest~12->module~penf program~volatile_doctest~44 volatile_doctest program~volatile_doctest~44->module~penf_stringify program~volatile_doctest~44->module~penf program~volatile_doctest~76 volatile_doctest program~volatile_doctest~76->module~penf_stringify program~volatile_doctest~76->module~penf program~volatile_doctest~3 volatile_doctest program~volatile_doctest~3->module~penf_stringify program~volatile_doctest~3->module~penf program~volatile_doctest~23 volatile_doctest program~volatile_doctest~23->module~penf_stringify program~volatile_doctest~23->module~penf program~volatile_doctest~55 volatile_doctest program~volatile_doctest~55->module~penf_stringify program~volatile_doctest~55->module~penf program~volatile_doctest~87 volatile_doctest program~volatile_doctest~87->module~penf_stringify program~volatile_doctest~87->module~penf program~volatile_doctest~34 volatile_doctest program~volatile_doctest~34->module~penf_stringify program~volatile_doctest~34->module~penf program~volatile_doctest~66 volatile_doctest program~volatile_doctest~66->module~penf_stringify program~volatile_doctest~66->module~penf program~volatile_doctest~13 volatile_doctest program~volatile_doctest~13->module~penf_stringify program~volatile_doctest~13->module~penf program~volatile_doctest~45 volatile_doctest program~volatile_doctest~45->module~penf_stringify program~volatile_doctest~45->module~penf program~volatile_doctest~77 volatile_doctest program~volatile_doctest~77->module~penf_stringify program~volatile_doctest~77->module~penf program~volatile_doctest~4 volatile_doctest program~volatile_doctest~4->module~penf_stringify program~volatile_doctest~4->module~penf program~volatile_doctest~24 volatile_doctest program~volatile_doctest~24->module~penf_stringify program~volatile_doctest~24->module~penf program~volatile_doctest~56 volatile_doctest program~volatile_doctest~56->module~penf_stringify program~volatile_doctest~56->module~penf program~volatile_doctest~88 volatile_doctest program~volatile_doctest~88->module~penf_stringify program~volatile_doctest~88->module~penf program~volatile_doctest~35 volatile_doctest program~volatile_doctest~35->module~penf_stringify program~volatile_doctest~35->module~penf program~volatile_doctest~67 volatile_doctest program~volatile_doctest~67->module~penf_stringify program~volatile_doctest~67->module~penf program~volatile_doctest~14 volatile_doctest program~volatile_doctest~14->module~penf_stringify program~volatile_doctest~14->module~penf program~volatile_doctest~46 volatile_doctest program~volatile_doctest~46->module~penf_stringify program~volatile_doctest~46->module~penf program~volatile_doctest~78 volatile_doctest program~volatile_doctest~78->module~penf_stringify program~volatile_doctest~78->module~penf program~volatile_doctest~109 volatile_doctest program~volatile_doctest~109->module~penf program~volatile_doctest~101 volatile_doctest program~volatile_doctest~101->module~penf program~volatile_doctest~93 volatile_doctest program~volatile_doctest~93->module~penf program~volatile_doctest~104 volatile_doctest program~volatile_doctest~104->module~penf program~volatile_doctest~96 volatile_doctest program~volatile_doctest~96->module~penf program~volatile_doctest~99 volatile_doctest program~volatile_doctest~99->module~penf program~volatile_doctest~107 volatile_doctest program~volatile_doctest~107->module~penf program~volatile_doctest~110 volatile_doctest program~volatile_doctest~110->module~penf program~volatile_doctest~102 volatile_doctest program~volatile_doctest~102->module~penf program~volatile_doctest~94 volatile_doctest program~volatile_doctest~94->module~penf program~volatile_doctest~105 volatile_doctest program~volatile_doctest~105->module~penf program~volatile_doctest~97 volatile_doctest program~volatile_doctest~97->module~penf program~volatile_doctest~100 volatile_doctest program~volatile_doctest~100->module~penf program~volatile_doctest~92 volatile_doctest program~volatile_doctest~92->module~penf program~volatile_doctest~108 volatile_doctest program~volatile_doctest~108->module~penf program~volatile_doctest~103 volatile_doctest program~volatile_doctest~103->module~penf program~volatile_doctest~95 volatile_doctest program~volatile_doctest~95->module~penf program~volatile_doctest~106 volatile_doctest program~volatile_doctest~106->module~penf program~volatile_doctest~98 volatile_doctest program~volatile_doctest~98->module~penf Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Interfaces str_ascii str_ucs4 str strz cton bstr bcton Functions str_ascii_default str_ascii_ascii str_ascii_ucs4 str_ucs4_default str_ucs4_ascii str_ucs4_ucs4 strf_R16P strf_R8P strf_R4P strf_I8P strf_I4P strf_I2P strf_I1P str_R16P str_R8P str_R4P str_I8P str_I4P str_I2P str_I1P str_bol str_a_R16P str_a_R8P str_a_R4P str_a_I8P str_a_I4P str_a_I2P str_a_I1P strz_I8P strz_I4P strz_I2P strz_I1P ctor_R16P ctor_R8P ctor_R4P ctoi_I8P ctoi_I4P ctoi_I2P ctoi_I1P bstr_R16P bstr_R8P bstr_R4P bstr_I8P bstr_I4P bstr_I2P bstr_I1P bctor_R16P bctor_R8P bctor_R4P bctoi_I8P bctoi_I4P bctoi_I2P bctoi_I1P Subroutines compact_real_string Interfaces public interface str_ascii Convert string of any kind to ASCII string. private pure function str_ascii_default (input) result(output) Convert string of default kind to ASCII string. Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind. public interface str_ucs4 Convert string of any kind to UCS4 string. private pure function str_ucs4_default (input) result(output) Convert string of default kind to UCS4 string. Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind. public interface str Convert number (real and integer) to string (number to string type casting). private elemental function strf_R8P (fm, n) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R8P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. private elemental function str_R8P (n, no_sign, compact) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. private elemental function strf_R4P (fm, n) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R4P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. private elemental function str_R4P (n, no_sign, compact) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. private elemental function strf_I8P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I8P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I8P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function strf_I4P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I4P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I4P (n, no_sign) result(str) Converting integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function strf_I2P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I2P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I2P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function strf_I1P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I1P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_I1P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function str_bol (n) result(str) Convert logical to string. Read more… Arguments Type Intent Optional Attributes Name logical, intent(in) :: n Logical to be converted. Return Value character(len=1) Returned string containing input number plus padding zeros. private pure function str_a_R8P (n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_R4P (n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I8P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I4P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I2P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I1P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. public interface strz Convert integer, to string, prefixing with the right number of zeros (integer to string type casting with zero padding). private elemental function strz_I8P (n, nz_pad) result(str) Converting integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I4P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I2P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I1P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. public interface cton Convert string to number (real and integer, string to number type casting). private function ctor_R8P (str, knd, pref, error) result(n) Convert string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R8P) Number returned. private function ctor_R4P (str, knd, pref, error) result(n) Convert string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R4P) Number returned. private function ctoi_I8P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I8P) Number returned. private function ctoi_I4P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I4P) Number returned. private function ctoi_I2P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I2P) Number returned. private function ctoi_I1P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I1P) Number returned. public interface bstr Convert number (real and integer) to bit-string (number to bit-string type casting). private elemental function bstr_R8P (n) result(bstr) Convert real to string of bits. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. private elemental function bstr_R4P (n) result(bstr) Convert real to string of bits. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. private elemental function bstr_I8P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. private elemental function bstr_I4P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. private elemental function bstr_I2P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Real to be converted. Return Value character(len=16) Returned bit-string containing input number. private elemental function bstr_I1P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Real to be converted. Return Value character(len=8) Returned bit-string containing input number. public interface bcton Convert bit-string to number (real and integer, bit-string to number type casting). private elemental function bctor_R8P (bstr, knd) result(n) Convert bit-string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R8P), intent(in) :: knd Number kind. Return Value real(kind=R8P) Number returned. private elemental function bctor_R4P (bstr, knd) result(n) Convert bit-string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R4P), intent(in) :: knd Number kind. Return Value real(kind=R4P) Number returned. private elemental function bctoi_I8P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. Return Value integer(kind=I8P) Number returned. private elemental function bctoi_I4P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. Return Value integer(kind=I4P) Number returned. private elemental function bctoi_I2P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. Return Value integer(kind=I2P) Number returned. private elemental function bctoi_I1P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. Return Value integer(kind=I1P) Number returned. Functions private pure function str_ascii_default (input) result(output) Convert string of default kind to ASCII string. Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind. private pure function str_ascii_ascii (input) result(output) Convert string of ASCII kind to ASCII string, just for convenience in sanitize strings. Read more… Arguments Type Intent Optional Attributes Name character(kind=ASCII,len=*), intent(in) :: input Input string of ASCII kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind. private pure function str_ascii_ucs4 (input) result(output) Convert string of UCS4 kind to ASCII string. Read more… Arguments Type Intent Optional Attributes Name character(kind=UCS4,len=*), intent(in) :: input Input string of UCS4 kind. Return Value character(kind=ASCII,len=:),allocatable Output string of ASCII kind. private pure function str_ucs4_default (input) result(output) Convert string of default kind to UCS4 string. Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: input Input string of default kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind. private pure function str_ucs4_ascii (input) result(output) Convert string of ASCII kind to UCS4 string. Read more… Arguments Type Intent Optional Attributes Name character(kind=ASCII,len=*), intent(in) :: input Input string of ASCII kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind. private pure function str_ucs4_ucs4 (input) result(output) Convert string of UCS4 kind to UCS4 string, just for convenience in sanitize strings. Read more… Arguments Type Intent Optional Attributes Name character(kind=UCS4,len=*), intent(in) :: input Input string of UCS4 kind. Return Value character(kind=UCS4,len=:),allocatable Output string of UCS4 kind. private elemental function strf_R16P (fm, n) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R16P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. private elemental function strf_R8P (fm, n) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R8P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. private elemental function strf_R4P (fm, n) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. real(kind=R4P), intent(in) :: n Real to be converted. Return Value character Returned string containing input number. private elemental function strf_I8P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I8P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function strf_I4P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I4P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function strf_I2P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I2P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function strf_I1P (fm, n) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: fm Format different from the standard for the kind. integer(kind=I1P), intent(in) :: n Integer to be converted. Return Value character Returned string containing input number. private elemental function str_R16P (n, no_sign, compact) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. private elemental function str_R8P (n, no_sign, compact) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. private elemental function str_R4P (n, no_sign, compact) result(str) Convert real to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character Returned string containing input number. private elemental function str_I8P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function str_I4P (n, no_sign) result(str) Converting integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function str_I2P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function str_I1P (n, no_sign) result(str) Convert integer to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. Return Value character Returned string containing input number plus padding zeros. private elemental function str_bol (n) result(str) Convert logical to string. Read more… Arguments Type Intent Optional Attributes Name logical, intent(in) :: n Logical to be converted. Return Value character(len=1) Returned string containing input number plus padding zeros. private pure function str_a_R16P (n, no_sign, separator, delimiters, compact) result(str) Converting real array to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_R8P (n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_R4P (n, no_sign, separator, delimiters, compact) result(str) Convert real array to string. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n (:) Real array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. logical, intent(in), optional :: compact Flag for compacting string encoding. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I8P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I4P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I2P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private pure function str_a_I1P (n, no_sign, separator, delimiters) result(str) Convert integer array to string. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n (:) Integer array to be converted. logical, intent(in), optional :: no_sign Flag for leaving out the sign. character(len=1), intent(in), optional :: separator Eventual separator of array values. character, intent(in), optional :: delimiters (1:2) Eventual delimiters of array values. Return Value character(len=:),allocatable Returned string containing input number. private elemental function strz_I8P (n, nz_pad) result(str) Converting integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I4P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I2P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private elemental function strz_I1P (n, nz_pad) result(str) Convert integer to string, prefixing with the right number of zeros. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Integer to be converted. integer(kind=I4P), intent(in), optional :: nz_pad Number of zeros padding. Return Value character Returned string containing input number plus padding zeros. private function ctor_R16P (str, knd, pref, error) result(n) Convert string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R16P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R16P) Number returned. private function ctor_R8P (str, knd, pref, error) result(n) Convert string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R8P) Number returned. private function ctor_R4P (str, knd, pref, error) result(n) Convert string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. real(kind=R4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value real(kind=R4P) Number returned. private function ctoi_I8P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I8P) Number returned. private function ctoi_I4P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I4P) Number returned. private function ctoi_I2P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I2P) Number returned. private function ctoi_I1P (str, knd, pref, error) result(n) Convert string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: str String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. character, intent(in), optional :: pref Prefixing string. integer(kind=I4P), intent(out), optional :: error Error trapping flag: 0 no errors, >0 error occurs. Return Value integer(kind=I1P) Number returned. private elemental function bstr_R16P (n) result(bstr) Convert real to string of bits. Read more… Arguments Type Intent Optional Attributes Name real(kind=R16P), intent(in) :: n Real to be converted. Return Value character(len=128) Returned bit-string containing input number. private elemental function bstr_R8P (n) result(bstr) Convert real to string of bits. Read more… Arguments Type Intent Optional Attributes Name real(kind=R8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. private elemental function bstr_R4P (n) result(bstr) Convert real to string of bits. Read more… Arguments Type Intent Optional Attributes Name real(kind=R4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. private elemental function bstr_I8P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I8P), intent(in) :: n Real to be converted. Return Value character(len=64) Returned bit-string containing input number. private elemental function bstr_I4P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I4P), intent(in) :: n Real to be converted. Return Value character(len=32) Returned bit-string containing input number. private elemental function bstr_I2P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I2P), intent(in) :: n Real to be converted. Return Value character(len=16) Returned bit-string containing input number. private elemental function bstr_I1P (n) result(bstr) Convert integer to string of bits. Read more… Arguments Type Intent Optional Attributes Name integer(kind=I1P), intent(in) :: n Real to be converted. Return Value character(len=8) Returned bit-string containing input number. private elemental function bctor_R16P (bstr, knd) result(n) Convert bit-string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R16P), intent(in) :: knd Number kind. Return Value real(kind=R16P) Number returned. private elemental function bctor_R8P (bstr, knd) result(n) Convert bit-string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R8P), intent(in) :: knd Number kind. Return Value real(kind=R8P) Number returned. private elemental function bctor_R4P (bstr, knd) result(n) Convert bit-string to real. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. real(kind=R4P), intent(in) :: knd Number kind. Return Value real(kind=R4P) Number returned. private elemental function bctoi_I8P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I8P), intent(in) :: knd Number kind. Return Value integer(kind=I8P) Number returned. private elemental function bctoi_I4P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I4P), intent(in) :: knd Number kind. Return Value integer(kind=I4P) Number returned. private elemental function bctoi_I2P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I2P), intent(in) :: knd Number kind. Return Value integer(kind=I2P) Number returned. private elemental function bctoi_I1P (bstr, knd) result(n) Convert bit-string to integer. Read more… Arguments Type Intent Optional Attributes Name character, intent(in) :: bstr String containing input number. integer(kind=I1P), intent(in) :: knd Number kind. Return Value integer(kind=I1P) Number returned. Subroutines private pure subroutine compact_real_string (string) Author Izaak Beekman Date 02/24/2015 Compact a string representing a real number, so that the same value is displayed with fewer characters. Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(inout) :: string string representation of a real number.","tags":"","loc":"module/penf_stringify.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~~UsesGraph program~volatile_doctest volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest->module~penf_stringify module~penf penf program~volatile_doctest->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~~CallsGraph program~volatile_doctest volatile_doctest interface~bcton bcton program~volatile_doctest->interface~bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI4P , bcton ( '00000000000000000000000000000001' , knd = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~2~~UsesGraph program~volatile_doctest~2 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~2->module~penf_stringify module~penf penf program~volatile_doctest~2->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~2~~CallsGraph program~volatile_doctest~2 volatile_doctest interface~str str program~volatile_doctest~2->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , 2_I1P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~2.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~3~~UsesGraph program~volatile_doctest~3 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~3->module~penf_stringify module~penf penf program~volatile_doctest~3->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~3~~CallsGraph program~volatile_doctest~3 volatile_doctest interface~str str program~volatile_doctest~3->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~3.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~4~~UsesGraph program~volatile_doctest~4 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~4->module~penf_stringify module~penf penf program~volatile_doctest~4->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~4~~CallsGraph program~volatile_doctest~4 volatile_doctest interface~cton cton program~volatile_doctest~4->interface~cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FR16P , cton ( str = '-1.0' , knd = 1._R16P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~4.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~5~~UsesGraph program~volatile_doctest~5 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~5->module~penf_stringify module~penf penf program~volatile_doctest~5->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~5~~CallsGraph program~volatile_doctest~5 volatile_doctest interface~str str program~volatile_doctest~5->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R4P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~5.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~6~~UsesGraph program~volatile_doctest~6 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~6->module~penf_stringify module~penf penf program~volatile_doctest~6->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~6~~CallsGraph program~volatile_doctest~6 volatile_doctest interface~bstr bstr program~volatile_doctest~6->interface~bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~6.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~7~~UsesGraph program~volatile_doctest~7 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~7->module~penf_stringify module~penf penf program~volatile_doctest~7->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~7~~CallsGraph program~volatile_doctest~7 volatile_doctest interface~bstr bstr program~volatile_doctest~7->interface~bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~7.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~8~~UsesGraph program~volatile_doctest~8 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~8->module~penf_stringify module~penf penf program~volatile_doctest~8->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~8~~CallsGraph program~volatile_doctest~8 volatile_doctest interface~strz strz program~volatile_doctest~8->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~8.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~9~~UsesGraph program~volatile_doctest~9 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~9->module~penf_stringify module~penf penf program~volatile_doctest~9->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~9~~CallsGraph program~volatile_doctest~9 volatile_doctest interface~str_ascii str_ascii program~volatile_doctest~9->interface~str_ascii proc~str_ascii_default str_ascii_default interface~str_ascii->proc~str_ascii_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables string Source Code volatile_doctest Variables Type Attributes Name Initial character(kind=UCS4,len=:), allocatable :: string Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( 'I was DEFAULT kind, but now I am UCS4' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~9.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~10~~UsesGraph program~volatile_doctest~10 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~10->module~penf_stringify module~penf penf program~volatile_doctest~10->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~10~~CallsGraph program~volatile_doctest~10 volatile_doctest interface~str str program~volatile_doctest~10->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R16P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~10.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~11~~UsesGraph program~volatile_doctest~11 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~11->module~penf_stringify module~penf penf program~volatile_doctest~11->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~11~~CallsGraph program~volatile_doctest~11 volatile_doctest interface~str str program~volatile_doctest~11->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~11.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~12~~UsesGraph program~volatile_doctest~12 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~12->module~penf_stringify module~penf penf program~volatile_doctest~12->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~12~~CallsGraph program~volatile_doctest~12 volatile_doctest interface~str_ascii str_ascii program~volatile_doctest~12->interface~str_ascii proc~str_ascii_default str_ascii_default interface~str_ascii->proc~str_ascii_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables string Source Code volatile_doctest Variables Type Attributes Name Initial character(kind=ASCII,len=:), allocatable :: string Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( 'I was ASCII kind and I am still ASCII' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~12.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~13~~UsesGraph program~volatile_doctest~13 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~13->module~penf_stringify module~penf penf program~volatile_doctest~13->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~13~~CallsGraph program~volatile_doctest~13 volatile_doctest interface~bcton bcton program~volatile_doctest~13->interface~bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FR16P , bcton ( '00000000000000000000000000000000000000000000000000000000000000000000000000000' // & '000000000000000000000000000000000001111111100111111' , knd = 1._R16P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~13.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~14~~UsesGraph program~volatile_doctest~14 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~14->module~penf_stringify module~penf penf program~volatile_doctest~14->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~14~~CallsGraph program~volatile_doctest~14 volatile_doctest interface~str str program~volatile_doctest~14->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~14.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~15~~UsesGraph program~volatile_doctest~15 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~15->module~penf_stringify module~penf penf program~volatile_doctest~15->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~15~~CallsGraph program~volatile_doctest~15 volatile_doctest interface~str str program~volatile_doctest~15->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~15.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~16~~UsesGraph program~volatile_doctest~16 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~16->module~penf_stringify module~penf penf program~volatile_doctest~16->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~16~~CallsGraph program~volatile_doctest~16 volatile_doctest interface~str str program~volatile_doctest~16->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R8P , compact = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~16.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~17~~UsesGraph program~volatile_doctest~17 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~17->module~penf_stringify module~penf penf program~volatile_doctest~17->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~17~~CallsGraph program~volatile_doctest~17 volatile_doctest interface~str str program~volatile_doctest~17->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FR16P , n = 1._R16P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~17.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~18~~UsesGraph program~volatile_doctest~18 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~18->module~penf_stringify module~penf penf program~volatile_doctest~18->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~18~~CallsGraph program~volatile_doctest~18 volatile_doctest interface~str str program~volatile_doctest~18->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~18.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~19~~UsesGraph program~volatile_doctest~19 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~19->module~penf_stringify module~penf penf program~volatile_doctest~19->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~19~~CallsGraph program~volatile_doctest~19 volatile_doctest interface~str str program~volatile_doctest~19->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~19.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~20~~UsesGraph program~volatile_doctest~20 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~20->module~penf_stringify module~penf penf program~volatile_doctest~20->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~20~~CallsGraph program~volatile_doctest~20 volatile_doctest interface~str str program~volatile_doctest~20->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~20.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~21~~UsesGraph program~volatile_doctest~21 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~21->module~penf_stringify module~penf penf program~volatile_doctest~21->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~21~~CallsGraph program~volatile_doctest~21 volatile_doctest interface~cton cton program~volatile_doctest~21->interface~cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI2P , cton ( str = '-1' , knd = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~21.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~22~~UsesGraph program~volatile_doctest~22 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~22->module~penf_stringify module~penf penf program~volatile_doctest~22->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~22~~CallsGraph program~volatile_doctest~22 volatile_doctest interface~str str program~volatile_doctest~22->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], compact = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~22.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~23~~UsesGraph program~volatile_doctest~23 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~23->module~penf_stringify module~penf penf program~volatile_doctest~23->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~23~~CallsGraph program~volatile_doctest~23 volatile_doctest interface~str str program~volatile_doctest~23->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , 2._R4P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~23.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~24~~UsesGraph program~volatile_doctest~24 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~24->module~penf_stringify module~penf penf program~volatile_doctest~24->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~24~~CallsGraph program~volatile_doctest~24 volatile_doctest interface~strz strz program~volatile_doctest~24->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I4P , nz_pad = 5 ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~24.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~25~~UsesGraph program~volatile_doctest~25 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~25->module~penf_stringify module~penf penf program~volatile_doctest~25->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~25~~CallsGraph program~volatile_doctest~25 volatile_doctest interface~str str program~volatile_doctest~25->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~25.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~26~~UsesGraph program~volatile_doctest~26 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~26->module~penf_stringify module~penf penf program~volatile_doctest~26->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~26~~CallsGraph program~volatile_doctest~26 volatile_doctest interface~bcton bcton program~volatile_doctest~26->interface~bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FR8P , bcton ( '0000000000000000000000000000000000000000000000001111000000111111' , knd = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~26.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~27~~UsesGraph program~volatile_doctest~27 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~27->module~penf_stringify module~penf penf program~volatile_doctest~27->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~27~~CallsGraph program~volatile_doctest~27 volatile_doctest interface~bstr bstr program~volatile_doctest~27->interface~bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables b Source Code volatile_doctest Variables Type Attributes Name Initial character(len=128) :: b Source Code program volatile_doctest use penf_stringify use penf character ( 128 ) :: b b = bstr ( n = 1._R16P ) print \"(A)\" , b ( 17 :) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~27.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~28~~UsesGraph program~volatile_doctest~28 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~28->module~penf_stringify module~penf penf program~volatile_doctest~28->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~28~~CallsGraph program~volatile_doctest~28 volatile_doctest interface~str str program~volatile_doctest~28->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI8P , n = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~28.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~29~~UsesGraph program~volatile_doctest~29 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~29->module~penf_stringify module~penf penf program~volatile_doctest~29->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~29~~CallsGraph program~volatile_doctest~29 volatile_doctest interface~bstr bstr program~volatile_doctest~29->interface~bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~29.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~30~~UsesGraph program~volatile_doctest~30 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~30->module~penf_stringify module~penf penf program~volatile_doctest~30->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~30~~CallsGraph program~volatile_doctest~30 volatile_doctest interface~strz strz program~volatile_doctest~30->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I8P , nz_pad = 5 ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~30.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~31~~UsesGraph program~volatile_doctest~31 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~31->module~penf_stringify module~penf penf program~volatile_doctest~31->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~31~~CallsGraph program~volatile_doctest~31 volatile_doctest interface~str str program~volatile_doctest~31->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FR8P , n = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~31.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~32~~UsesGraph program~volatile_doctest~32 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~32->module~penf_stringify module~penf penf program~volatile_doctest~32->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~32~~CallsGraph program~volatile_doctest~32 volatile_doctest interface~strz strz program~volatile_doctest~32->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~32.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~33~~UsesGraph program~volatile_doctest~33 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~33->module~penf_stringify module~penf penf program~volatile_doctest~33->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~33~~CallsGraph program~volatile_doctest~33 volatile_doctest interface~str_ascii str_ascii program~volatile_doctest~33->interface~str_ascii proc~str_ascii_default str_ascii_default interface~str_ascii->proc~str_ascii_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables string Source Code volatile_doctest Variables Type Attributes Name Initial character(kind=UCS4,len=:), allocatable :: string Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( UCS4_ 'I was UCS4 kind and I am still UCS4' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~33.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~34~~UsesGraph program~volatile_doctest~34 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~34->module~penf_stringify module~penf penf program~volatile_doctest~34->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~34~~CallsGraph program~volatile_doctest~34 volatile_doctest interface~str str program~volatile_doctest~34->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~34.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~35~~UsesGraph program~volatile_doctest~35 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~35->module~penf_stringify module~penf penf program~volatile_doctest~35->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~35~~CallsGraph program~volatile_doctest~35 volatile_doctest interface~bcton bcton program~volatile_doctest~35->interface~bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI2P , bcton ( '0000000000000001' , knd = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~35.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~36~~UsesGraph program~volatile_doctest~36 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~36->module~penf_stringify module~penf penf program~volatile_doctest~36->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~36~~CallsGraph program~volatile_doctest~36 volatile_doctest interface~str str program~volatile_doctest~36->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~36.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~37~~UsesGraph program~volatile_doctest~37 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~37->module~penf_stringify module~penf penf program~volatile_doctest~37->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~37~~CallsGraph program~volatile_doctest~37 volatile_doctest interface~bcton bcton program~volatile_doctest~37->interface~bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FR4P , bcton ( '00000000000000001000000000111111' , knd = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~37.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~38~~UsesGraph program~volatile_doctest~38 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~38->module~penf_stringify module~penf penf program~volatile_doctest~38->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~38~~CallsGraph program~volatile_doctest~38 volatile_doctest interface~str str program~volatile_doctest~38->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~38.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~39~~UsesGraph program~volatile_doctest~39 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~39->module~penf_stringify module~penf penf program~volatile_doctest~39->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~39~~CallsGraph program~volatile_doctest~39 volatile_doctest interface~str str program~volatile_doctest~39->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I8P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~39.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~40~~UsesGraph program~volatile_doctest~40 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~40->module~penf_stringify module~penf penf program~volatile_doctest~40->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~40~~CallsGraph program~volatile_doctest~40 volatile_doctest interface~str str program~volatile_doctest~40->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~40.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~41~~UsesGraph program~volatile_doctest~41 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~41->module~penf_stringify module~penf penf program~volatile_doctest~41->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~41~~CallsGraph program~volatile_doctest~41 volatile_doctest interface~str str program~volatile_doctest~41->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I4P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~41.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~42~~UsesGraph program~volatile_doctest~42 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~42->module~penf_stringify module~penf penf program~volatile_doctest~42->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~42~~CallsGraph program~volatile_doctest~42 volatile_doctest interface~str str program~volatile_doctest~42->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R4P , compact = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~42.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~43~~UsesGraph program~volatile_doctest~43 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~43->module~penf_stringify module~penf penf program~volatile_doctest~43->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~43~~CallsGraph program~volatile_doctest~43 volatile_doctest interface~str str program~volatile_doctest~43->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], compact = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~43.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~44~~UsesGraph program~volatile_doctest~44 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~44->module~penf_stringify module~penf penf program~volatile_doctest~44->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~44~~CallsGraph program~volatile_doctest~44 volatile_doctest interface~str str program~volatile_doctest~44->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], compact = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~44.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~45~~UsesGraph program~volatile_doctest~45 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~45->module~penf_stringify module~penf penf program~volatile_doctest~45->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~45~~CallsGraph program~volatile_doctest~45 volatile_doctest interface~str str program~volatile_doctest~45->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~45.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~46~~UsesGraph program~volatile_doctest~46 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~46->module~penf_stringify module~penf penf program~volatile_doctest~46->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~46~~CallsGraph program~volatile_doctest~46 volatile_doctest interface~str str program~volatile_doctest~46->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , 2._R16P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~46.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~47~~UsesGraph program~volatile_doctest~47 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~47->module~penf_stringify module~penf penf program~volatile_doctest~47->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~47~~CallsGraph program~volatile_doctest~47 volatile_doctest interface~str str program~volatile_doctest~47->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~47.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~48~~UsesGraph program~volatile_doctest~48 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~48->module~penf_stringify module~penf penf program~volatile_doctest~48->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~48~~CallsGraph program~volatile_doctest~48 volatile_doctest interface~str str program~volatile_doctest~48->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~48.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~49~~UsesGraph program~volatile_doctest~49 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~49->module~penf_stringify module~penf penf program~volatile_doctest~49->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~49~~CallsGraph program~volatile_doctest~49 volatile_doctest interface~str str program~volatile_doctest~49->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~49.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~50~~UsesGraph program~volatile_doctest~50 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~50->module~penf_stringify module~penf penf program~volatile_doctest~50->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~50~~CallsGraph program~volatile_doctest~50 volatile_doctest interface~str str program~volatile_doctest~50->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~50.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~51~~UsesGraph program~volatile_doctest~51 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~51->module~penf_stringify module~penf penf program~volatile_doctest~51->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~51~~CallsGraph program~volatile_doctest~51 volatile_doctest interface~cton cton program~volatile_doctest~51->interface~cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI1P , cton ( str = '-1' , knd = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~51.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~52~~UsesGraph program~volatile_doctest~52 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~52->module~penf_stringify module~penf penf program~volatile_doctest~52->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~52~~CallsGraph program~volatile_doctest~52 volatile_doctest interface~str str program~volatile_doctest~52->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI1P , n = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~52.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~53~~UsesGraph program~volatile_doctest~53 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~53->module~penf_stringify module~penf penf program~volatile_doctest~53->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~53~~CallsGraph program~volatile_doctest~53 volatile_doctest interface~str str program~volatile_doctest~53->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~53.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~54~~UsesGraph program~volatile_doctest~54 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~54->module~penf_stringify module~penf penf program~volatile_doctest~54->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~54~~CallsGraph program~volatile_doctest~54 volatile_doctest interface~str str program~volatile_doctest~54->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~54.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~55~~UsesGraph program~volatile_doctest~55 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~55->module~penf_stringify module~penf penf program~volatile_doctest~55->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~55~~CallsGraph program~volatile_doctest~55 volatile_doctest interface~str str program~volatile_doctest~55->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~55.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~56~~UsesGraph program~volatile_doctest~56 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~56->module~penf_stringify module~penf penf program~volatile_doctest~56->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~56~~CallsGraph program~volatile_doctest~56 volatile_doctest interface~str str program~volatile_doctest~56->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~56.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~57~~UsesGraph program~volatile_doctest~57 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~57->module~penf_stringify module~penf penf program~volatile_doctest~57->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~57~~CallsGraph program~volatile_doctest~57 volatile_doctest interface~bstr bstr program~volatile_doctest~57->interface~bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~57.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~58~~UsesGraph program~volatile_doctest~58 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~58->module~penf_stringify module~penf penf program~volatile_doctest~58->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~58~~CallsGraph program~volatile_doctest~58 volatile_doctest interface~cton cton program~volatile_doctest~58->interface~cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI4P , cton ( str = '-1' , knd = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~58.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~59~~UsesGraph program~volatile_doctest~59 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~59->module~penf_stringify module~penf penf program~volatile_doctest~59->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~59~~CallsGraph program~volatile_doctest~59 volatile_doctest interface~str_ascii str_ascii program~volatile_doctest~59->interface~str_ascii proc~str_ascii_default str_ascii_default interface~str_ascii->proc~str_ascii_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables string Source Code volatile_doctest Variables Type Attributes Name Initial character(kind=ASCII,len=:), allocatable :: string Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( 'I was DEFAULT kind, but now I am ASCII' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~59.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~60~~UsesGraph program~volatile_doctest~60 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~60->module~penf_stringify module~penf penf program~volatile_doctest~60->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~60~~CallsGraph program~volatile_doctest~60 volatile_doctest interface~bstr bstr program~volatile_doctest~60->interface~bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~60.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~61~~UsesGraph program~volatile_doctest~61 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~61->module~penf_stringify module~penf penf program~volatile_doctest~61->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~61~~CallsGraph program~volatile_doctest~61 volatile_doctest interface~str str program~volatile_doctest~61->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~61.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~62~~UsesGraph program~volatile_doctest~62 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~62->module~penf_stringify module~penf penf program~volatile_doctest~62->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~62~~CallsGraph program~volatile_doctest~62 volatile_doctest interface~bstr bstr program~volatile_doctest~62->interface~bstr proc~bstr_i4p bstr_I4P interface~bstr->proc~bstr_i4p proc~bstr_i1p bstr_I1P interface~bstr->proc~bstr_i1p proc~bstr_r4p bstr_R4P interface~bstr->proc~bstr_r4p proc~bstr_i8p bstr_I8P interface~bstr->proc~bstr_i8p proc~bstr_r8p bstr_R8P interface~bstr->proc~bstr_r8p proc~bstr_i2p bstr_I2P interface~bstr->proc~bstr_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~62.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~63~~UsesGraph program~volatile_doctest~63 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~63->module~penf_stringify module~penf penf program~volatile_doctest~63->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~63~~CallsGraph program~volatile_doctest~63 volatile_doctest interface~str str program~volatile_doctest~63->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , 2._R8P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~63.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~64~~UsesGraph program~volatile_doctest~64 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~64->module~penf_stringify module~penf penf program~volatile_doctest~64->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~64~~CallsGraph program~volatile_doctest~64 volatile_doctest interface~str str program~volatile_doctest~64->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FR4P , n = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~64.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~65~~UsesGraph program~volatile_doctest~65 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~65->module~penf_stringify module~penf penf program~volatile_doctest~65->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~65~~CallsGraph program~volatile_doctest~65 volatile_doctest interface~str str program~volatile_doctest~65->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R16P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~65.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~66~~UsesGraph program~volatile_doctest~66 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~66->module~penf_stringify module~penf penf program~volatile_doctest~66->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~66~~CallsGraph program~volatile_doctest~66 volatile_doctest interface~cton cton program~volatile_doctest~66->interface~cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI8P , cton ( str = '-1' , knd = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~66.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~67~~UsesGraph program~volatile_doctest~67 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~67->module~penf_stringify module~penf penf program~volatile_doctest~67->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~67~~CallsGraph program~volatile_doctest~67 volatile_doctest interface~cton cton program~volatile_doctest~67->interface~cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FR4P , cton ( str = '-1.0' , knd = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~67.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~68~~UsesGraph program~volatile_doctest~68 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~68->module~penf_stringify module~penf penf program~volatile_doctest~68->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~68~~CallsGraph program~volatile_doctest~68 volatile_doctest interface~str str program~volatile_doctest~68->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R16P , compact = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~68.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~69~~UsesGraph program~volatile_doctest~69 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~69->module~penf_stringify module~penf penf program~volatile_doctest~69->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~69~~CallsGraph program~volatile_doctest~69 volatile_doctest interface~str str program~volatile_doctest~69->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~69.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~70~~UsesGraph program~volatile_doctest~70 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~70->module~penf_stringify module~penf penf program~volatile_doctest~70->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~70~~CallsGraph program~volatile_doctest~70 volatile_doctest interface~str_ascii str_ascii program~volatile_doctest~70->interface~str_ascii proc~str_ascii_default str_ascii_default interface~str_ascii->proc~str_ascii_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables string Source Code volatile_doctest Variables Type Attributes Name Initial character(kind=ASCII,len=:), allocatable :: string Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( UCS4_ 'I was UCS4 kind, but now I am ASCII' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~70.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~71~~UsesGraph program~volatile_doctest~71 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~71->module~penf_stringify module~penf penf program~volatile_doctest~71->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~71~~CallsGraph program~volatile_doctest~71 volatile_doctest interface~str str program~volatile_doctest~71->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI4P , n = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~71.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~72~~UsesGraph program~volatile_doctest~72 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~72->module~penf_stringify module~penf penf program~volatile_doctest~72->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~72~~CallsGraph program~volatile_doctest~72 volatile_doctest interface~strz strz program~volatile_doctest~72->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I2P , nz_pad = 3 ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~72.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~73~~UsesGraph program~volatile_doctest~73 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~73->module~penf_stringify module~penf penf program~volatile_doctest~73->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~73~~CallsGraph program~volatile_doctest~73 volatile_doctest interface~str str program~volatile_doctest~73->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~73.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~74~~UsesGraph program~volatile_doctest~74 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~74->module~penf_stringify module~penf penf program~volatile_doctest~74->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~74~~CallsGraph program~volatile_doctest~74 volatile_doctest interface~str str program~volatile_doctest~74->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I1P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~74.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~75~~UsesGraph program~volatile_doctest~75 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~75->module~penf_stringify module~penf penf program~volatile_doctest~75->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~75~~CallsGraph program~volatile_doctest~75 volatile_doctest interface~str str program~volatile_doctest~75->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I2P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~75.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~76~~UsesGraph program~volatile_doctest~76 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~76->module~penf_stringify module~penf penf program~volatile_doctest~76->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~76~~CallsGraph program~volatile_doctest~76 volatile_doctest interface~str str program~volatile_doctest~76->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R8P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~76.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~77~~UsesGraph program~volatile_doctest~77 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~77->module~penf_stringify module~penf penf program~volatile_doctest~77->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~77~~CallsGraph program~volatile_doctest~77 volatile_doctest interface~str_ascii str_ascii program~volatile_doctest~77->interface~str_ascii proc~str_ascii_default str_ascii_default interface~str_ascii->proc~str_ascii_default Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables string Source Code volatile_doctest Variables Type Attributes Name Initial character(kind=UCS4,len=:), allocatable :: string Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( ASCII_ 'I was ASCII kind, but now I am UCS4' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~77.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~78~~UsesGraph program~volatile_doctest~78 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~78->module~penf_stringify module~penf penf program~volatile_doctest~78->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~78~~CallsGraph program~volatile_doctest~78 volatile_doctest interface~strz strz program~volatile_doctest~78->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~78.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~79~~UsesGraph program~volatile_doctest~79 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~79->module~penf_stringify module~penf penf program~volatile_doctest~79->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~79~~CallsGraph program~volatile_doctest~79 volatile_doctest interface~str str program~volatile_doctest~79->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , 2_I8P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~79.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~80~~UsesGraph program~volatile_doctest~80 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~80->module~penf_stringify module~penf penf program~volatile_doctest~80->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~80~~CallsGraph program~volatile_doctest~80 volatile_doctest interface~str str program~volatile_doctest~80->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , 2_I4P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~80.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~81~~UsesGraph program~volatile_doctest~81 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~81->module~penf_stringify module~penf penf program~volatile_doctest~81->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~81~~CallsGraph program~volatile_doctest~81 volatile_doctest interface~str str program~volatile_doctest~81->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~81.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~82~~UsesGraph program~volatile_doctest~82 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~82->module~penf_stringify module~penf penf program~volatile_doctest~82->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~82~~CallsGraph program~volatile_doctest~82 volatile_doctest interface~bcton bcton program~volatile_doctest~82->interface~bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI8P , bcton ( '0000000000000000000000000000000000000000000000000000000000000001' , knd = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~82.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~83~~UsesGraph program~volatile_doctest~83 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~83->module~penf_stringify module~penf penf program~volatile_doctest~83->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~83~~CallsGraph program~volatile_doctest~83 volatile_doctest interface~cton cton program~volatile_doctest~83->interface~cton proc~ctor_r8p ctor_R8P interface~cton->proc~ctor_r8p proc~ctoi_i2p ctoi_I2P interface~cton->proc~ctoi_i2p proc~ctoi_i8p ctoi_I8P interface~cton->proc~ctoi_i8p proc~ctor_r4p ctor_R4P interface~cton->proc~ctor_r4p proc~ctoi_i4p ctoi_I4P interface~cton->proc~ctoi_i4p proc~ctoi_i1p ctoi_I1P interface~cton->proc~ctoi_i1p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FR8P , cton ( str = '-1.0' , knd = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~83.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~84~~UsesGraph program~volatile_doctest~84 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~84->module~penf_stringify module~penf penf program~volatile_doctest~84->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~84~~CallsGraph program~volatile_doctest~84 volatile_doctest interface~str str program~volatile_doctest~84->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~84.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~85~~UsesGraph program~volatile_doctest~85 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~85->module~penf_stringify module~penf penf program~volatile_doctest~85->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~85~~CallsGraph program~volatile_doctest~85 volatile_doctest interface~str str program~volatile_doctest~85->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~85.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~86~~UsesGraph program~volatile_doctest~86 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~86->module~penf_stringify module~penf penf program~volatile_doctest~86->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~86~~CallsGraph program~volatile_doctest~86 volatile_doctest interface~strz strz program~volatile_doctest~86->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I1P , nz_pad = 3 ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~86.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~87~~UsesGraph program~volatile_doctest~87 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~87->module~penf_stringify module~penf penf program~volatile_doctest~87->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~87~~CallsGraph program~volatile_doctest~87 volatile_doctest interface~str str program~volatile_doctest~87->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI2P , n = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~87.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~88~~UsesGraph program~volatile_doctest~88 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~88->module~penf_stringify module~penf penf program~volatile_doctest~88->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~88~~CallsGraph program~volatile_doctest~88 volatile_doctest interface~strz strz program~volatile_doctest~88->interface~strz proc~strz_i8p strz_I8P interface~strz->proc~strz_i8p proc~strz_i4p strz_I4P interface~strz->proc~strz_i4p proc~strz_i1p strz_I1P interface~strz->proc~strz_i1p proc~strz_i2p strz_I2P interface~strz->proc~strz_i2p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~88.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~89~~UsesGraph program~volatile_doctest~89 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~89->module~penf_stringify module~penf penf program~volatile_doctest~89->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~89~~CallsGraph program~volatile_doctest~89 volatile_doctest interface~str str program~volatile_doctest~89->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~89.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~90~~UsesGraph program~volatile_doctest~90 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~90->module~penf_stringify module~penf penf program~volatile_doctest~90->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~90~~CallsGraph program~volatile_doctest~90 volatile_doctest interface~bcton bcton program~volatile_doctest~90->interface~bcton proc~bctor_r8p bctor_R8P interface~bcton->proc~bctor_r8p proc~bctoi_i1p bctoi_I1P interface~bcton->proc~bctoi_i1p proc~bctoi_i8p bctoi_I8P interface~bcton->proc~bctoi_i8p proc~bctoi_i4p bctoi_I4P interface~bcton->proc~bctoi_i4p proc~bctor_r4p bctor_R4P interface~bcton->proc~bctor_r4p proc~bctoi_i2p bctoi_I2P interface~bcton->proc~bctoi_i2p interface~str str proc~bctoi_i1p->interface~str proc~bctoi_i8p->interface~str proc~bctoi_i4p->interface~str proc~bctoi_i2p->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print FI1P , bcton ( '00000001' , knd = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~90.html"},{"title":"volatile_doctest – PENF","text":"Uses penf_stringify penf program~~volatile_doctest~91~~UsesGraph program~volatile_doctest~91 volatile_doctest module~penf_stringify penf_stringify program~volatile_doctest~91->module~penf_stringify module~penf penf program~volatile_doctest~91->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env module~penf_b_size penf_b_size module~penf_stringify->module~penf_b_size module~penf->module~penf_stringify module~penf->module~penf_global_parameters_variables module~penf->module~penf_b_size module~penf_b_size->module~penf_global_parameters_variables Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~91~~CallsGraph program~volatile_doctest~91 volatile_doctest interface~str str program~volatile_doctest~91->interface~str proc~strf_r8p strf_R8P interface~str->proc~strf_r8p proc~str_a_i2p str_a_I2P interface~str->proc~str_a_i2p proc~str_r4p str_R4P interface~str->proc~str_r4p proc~str_i2p str_I2P interface~str->proc~str_i2p proc~strf_i8p strf_I8P interface~str->proc~strf_i8p proc~str_a_i8p str_a_I8P interface~str->proc~str_a_i8p proc~strf_r4p strf_R4P interface~str->proc~strf_r4p proc~str_i8p str_I8P interface~str->proc~str_i8p proc~str_a_i1p str_a_I1P interface~str->proc~str_a_i1p proc~strf_i1p strf_I1P interface~str->proc~strf_i1p proc~str_i1p str_I1P interface~str->proc~str_i1p proc~str_a_r4p str_a_R4P interface~str->proc~str_a_r4p proc~str_a_i4p str_a_I4P interface~str->proc~str_a_i4p proc~strf_i4p strf_I4P interface~str->proc~strf_i4p proc~str_i4p str_I4P interface~str->proc~str_i4p proc~strf_i2p strf_I2P interface~str->proc~strf_i2p proc~str_a_r8p str_a_R8P interface~str->proc~str_a_r8p proc~str_r8p str_R8P interface~str->proc~str_r8p proc~str_bol str_bol interface~str->proc~str_bol proc~str_a_i2p->proc~str_i2p proc~compact_real_string compact_real_string proc~str_r4p->proc~compact_real_string proc~str_a_i8p->proc~str_i8p proc~str_a_i1p->proc~str_i1p proc~str_a_r4p->proc~str_r4p proc~str_a_i4p->proc~str_i4p proc~str_a_r8p->proc~str_r8p proc~str_r8p->proc~compact_real_string Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , 2_I2P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~91.html"},{"title":"volatile_doctest – PENF","text":"Uses penf program~~volatile_doctest~92~~UsesGraph program~volatile_doctest~92 volatile_doctest module~penf penf program~volatile_doctest~92->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~92~~CallsGraph program~volatile_doctest~92 volatile_doctest proc~penf_init penf_init program~volatile_doctest~92->proc~penf_init proc~check_endian check_endian proc~penf_init->proc~check_endian Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf use penf call penf_init print FI1P , BYR4P endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~92.html"},{"title":"volatile_doctest – PENF","text":"Uses penf program~~volatile_doctest~93~~UsesGraph program~volatile_doctest~93 volatile_doctest module~penf penf program~volatile_doctest~93->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~93~~CallsGraph program~volatile_doctest~93 volatile_doctest interface~digit digit program~volatile_doctest~93->interface~digit proc~digit_i8 digit_I8 interface~digit->proc~digit_i8 proc~digit_i2 digit_I2 interface~digit->proc~digit_i2 proc~digit_i1 digit_I1 interface~digit->proc~digit_i1 proc~digit_i4 digit_I4 interface~digit->proc~digit_i4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~93.html"},{"title":"volatile_doctest – PENF","text":"Uses penf program~~volatile_doctest~94~~UsesGraph program~volatile_doctest~94 volatile_doctest module~penf penf program~volatile_doctest~94->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~94~~CallsGraph program~volatile_doctest~94 volatile_doctest interface~digit digit program~volatile_doctest~94->interface~digit proc~digit_i8 digit_I8 interface~digit->proc~digit_i8 proc~digit_i2 digit_I2 interface~digit->proc~digit_i2 proc~digit_i1 digit_I1 interface~digit->proc~digit_i1 proc~digit_i4 digit_I4 interface~digit->proc~digit_i4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~94.html"},{"title":"volatile_doctest – PENF","text":"Uses penf program~~volatile_doctest~95~~UsesGraph program~volatile_doctest~95 volatile_doctest module~penf penf program~volatile_doctest~95->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~95~~CallsGraph program~volatile_doctest~95 volatile_doctest proc~check_endian check_endian program~volatile_doctest~95->proc~check_endian Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf use penf call check_endian print * , endian endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~95.html"},{"title":"volatile_doctest – PENF","text":"Uses penf program~~volatile_doctest~96~~UsesGraph program~volatile_doctest~96 volatile_doctest module~penf penf program~volatile_doctest~96->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~96~~CallsGraph program~volatile_doctest~96 volatile_doctest proc~penf_print penf_print program~volatile_doctest~96->proc~penf_print proc~penf_init penf_init proc~penf_print->proc~penf_init proc~check_endian check_endian proc~penf_init->proc~check_endian Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Variables u Source Code volatile_doctest Variables Type Attributes Name Initial integer :: u Source Code program volatile_doctest use penf use penf integer :: u open ( newunit = u , status = 'scratch' ) call penf_print ( u ) close ( u ) print \"(A)\" , 'done' endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~96.html"},{"title":"volatile_doctest – PENF","text":"Uses penf program~~volatile_doctest~97~~UsesGraph program~volatile_doctest~97 volatile_doctest module~penf penf program~volatile_doctest~97->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~97~~CallsGraph program~volatile_doctest~97 volatile_doctest interface~digit digit program~volatile_doctest~97->interface~digit proc~digit_i8 digit_I8 interface~digit->proc~digit_i8 proc~digit_i2 digit_I2 interface~digit->proc~digit_i2 proc~digit_i1 digit_I1 interface~digit->proc~digit_i1 proc~digit_i4 digit_I4 interface~digit->proc~digit_i4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~97.html"},{"title":"volatile_doctest – PENF","text":"Uses penf program~~volatile_doctest~98~~UsesGraph program~volatile_doctest~98 volatile_doctest module~penf penf program~volatile_doctest~98->module~penf module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_b_size penf_b_size module~penf->module~penf_b_size module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~98~~CallsGraph program~volatile_doctest~98 volatile_doctest interface~digit digit program~volatile_doctest~98->interface~digit proc~digit_i8 digit_I8 interface~digit->proc~digit_i8 proc~digit_i2 digit_I2 interface~digit->proc~digit_i2 proc~digit_i1 digit_I1 interface~digit->proc~digit_i1 proc~digit_i4 digit_I4 interface~digit->proc~digit_i4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~98.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~99~~UsesGraph program~volatile_doctest~99 volatile_doctest module~penf penf program~volatile_doctest~99->module~penf module~penf_b_size penf_b_size program~volatile_doctest~99->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~99~~CallsGraph program~volatile_doctest~99 volatile_doctest interface~byte_size byte_size program~volatile_doctest~99->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I1P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~99.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~100~~UsesGraph program~volatile_doctest~100 volatile_doctest module~penf penf program~volatile_doctest~100->module~penf module~penf_b_size penf_b_size program~volatile_doctest~100->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~100~~CallsGraph program~volatile_doctest~100 volatile_doctest interface~byte_size byte_size program~volatile_doctest~100->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1._R8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~100.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~101~~UsesGraph program~volatile_doctest~101 volatile_doctest module~penf penf program~volatile_doctest~101->module~penf module~penf_b_size penf_b_size program~volatile_doctest~101->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~101~~CallsGraph program~volatile_doctest~101 volatile_doctest interface~byte_size byte_size program~volatile_doctest~101->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I2P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~101.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~102~~UsesGraph program~volatile_doctest~102 volatile_doctest module~penf penf program~volatile_doctest~102->module~penf module~penf_b_size penf_b_size program~volatile_doctest~102->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI4P , bit_size ( 'ab' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~102.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~103~~UsesGraph program~volatile_doctest~103 volatile_doctest module~penf penf program~volatile_doctest~103->module~penf module~penf_b_size penf_b_size program~volatile_doctest~103->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , bit_size ( 1._R8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~103.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~104~~UsesGraph program~volatile_doctest~104 volatile_doctest module~penf penf program~volatile_doctest~104->module~penf module~penf_b_size penf_b_size program~volatile_doctest~104->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~104~~CallsGraph program~volatile_doctest~104 volatile_doctest interface~byte_size byte_size program~volatile_doctest~104->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1._R4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~104.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~105~~UsesGraph program~volatile_doctest~105 volatile_doctest module~penf penf program~volatile_doctest~105->module~penf module~penf_b_size penf_b_size program~volatile_doctest~105->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~105~~CallsGraph program~volatile_doctest~105 volatile_doctest interface~byte_size byte_size program~volatile_doctest~105->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~105.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~106~~UsesGraph program~volatile_doctest~106 volatile_doctest module~penf penf program~volatile_doctest~106->module~penf module~penf_b_size penf_b_size program~volatile_doctest~106->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~106~~CallsGraph program~volatile_doctest~106 volatile_doctest interface~byte_size byte_size program~volatile_doctest~106->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 'ab' ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~106.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~107~~UsesGraph program~volatile_doctest~107 volatile_doctest module~penf penf program~volatile_doctest~107->module~penf module~penf_b_size penf_b_size program~volatile_doctest~107->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , bit_size ( 1._R4P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~107.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~108~~UsesGraph program~volatile_doctest~108 volatile_doctest module~penf penf program~volatile_doctest~108->module~penf module~penf_b_size penf_b_size program~volatile_doctest~108->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~108~~CallsGraph program~volatile_doctest~108 volatile_doctest interface~byte_size byte_size program~volatile_doctest~108->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1._R16P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~108.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~109~~UsesGraph program~volatile_doctest~109 volatile_doctest module~penf penf program~volatile_doctest~109->module~penf module~penf_b_size penf_b_size program~volatile_doctest~109->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI2P , bit_size ( 1._R16P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~109.html"},{"title":"volatile_doctest – PENF","text":"Uses penf penf_b_size program~~volatile_doctest~110~~UsesGraph program~volatile_doctest~110 volatile_doctest module~penf penf program~volatile_doctest~110->module~penf module~penf_b_size penf_b_size program~volatile_doctest~110->module~penf_b_size module~penf->module~penf_b_size module~penf_global_parameters_variables penf_global_parameters_variables module~penf->module~penf_global_parameters_variables module~penf_stringify penf_stringify module~penf->module~penf_stringify module~penf_b_size->module~penf_global_parameters_variables module~penf_stringify->module~penf_b_size module~penf_stringify->module~penf_global_parameters_variables iso_fortran_env iso_fortran_env module~penf_stringify->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Calls program~~volatile_doctest~110~~CallsGraph program~volatile_doctest~110 volatile_doctest interface~byte_size byte_size program~volatile_doctest~110->interface~byte_size proc~byte_size_i8p byte_size_I8P interface~byte_size->proc~byte_size_i8p proc~byte_size_r8p byte_size_R8P interface~byte_size->proc~byte_size_r8p proc~byte_size_i4p byte_size_I4P interface~byte_size->proc~byte_size_i4p proc~byte_size_chr byte_size_chr interface~byte_size->proc~byte_size_chr proc~byte_size_i2p byte_size_I2P interface~byte_size->proc~byte_size_i2p proc~byte_size_i1p byte_size_I1P interface~byte_size->proc~byte_size_i1p proc~byte_size_r4p byte_size_R4P interface~byte_size->proc~byte_size_r4p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \n    arrows point from an interface to procedures which implement that interface.\n    This could include the module procedures in a generic interface or the\n    implementation in a submodule of an interface in a parent module. Contents Source Code volatile_doctest Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I8P ) endprogram volatile_doctest","tags":"","loc":"program/volatile_doctest~110.html"},{"title":"penf_stringify-doctest-89.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-89.f90~~EfferentGraph sourcefile~penf_stringify-doctest-89.f90 penf_stringify-doctest-89.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-89.f90 Source Code program volatile_doctest use penf_stringify use penf print FI4P , bcton ( '00000000000000000000000000000001' , knd = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-89.f90.html"},{"title":"penf_stringify-doctest-60.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-60.f90~~EfferentGraph sourcefile~penf_stringify-doctest-60.f90 penf_stringify-doctest-60.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-60.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , 2_I1P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-60.f90.html"},{"title":"penf_stringify-doctest-39.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-39.f90~~EfferentGraph sourcefile~penf_stringify-doctest-39.f90 penf_stringify-doctest-39.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-39.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-39.f90.html"},{"title":"penf_stringify-doctest-71.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-71.f90~~EfferentGraph sourcefile~penf_stringify-doctest-71.f90 penf_stringify-doctest-71.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-71.f90 Source Code program volatile_doctest use penf_stringify use penf print FR16P , cton ( str = '-1.0' , knd = 1._R16P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-71.f90.html"},{"title":"penf_stringify-doctest-21.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-21.f90~~EfferentGraph sourcefile~penf_stringify-doctest-21.f90 penf_stringify-doctest-21.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-21.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R4P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-21.f90.html"},{"title":"penf_stringify-doctest-79.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-79.f90~~EfferentGraph sourcefile~penf_stringify-doctest-79.f90 penf_stringify-doctest-79.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-79.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-79.f90.html"},{"title":"penf_stringify-doctest-80.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-80.f90~~EfferentGraph sourcefile~penf_stringify-doctest-80.f90 penf_stringify-doctest-80.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-80.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-80.f90.html"},{"title":"penf_stringify-doctest-67.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-67.f90~~EfferentGraph sourcefile~penf_stringify-doctest-67.f90 penf_stringify-doctest-67.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-67.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-67.f90.html"},{"title":"penf_stringify-doctest-4.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-4.f90~~EfferentGraph sourcefile~penf_stringify-doctest-4.f90 penf_stringify-doctest-4.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-4.f90 Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( 'I was DEFAULT kind, but now I am UCS4' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-4.f90.html"},{"title":"penf_stringify-doctest-14.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-14.f90~~EfferentGraph sourcefile~penf_stringify-doctest-14.f90 penf_stringify-doctest-14.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-14.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R16P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-14.f90.html"},{"title":"penf_stringify-doctest-37.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-37.f90~~EfferentGraph sourcefile~penf_stringify-doctest-37.f90 penf_stringify-doctest-37.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-37.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-37.f90.html"},{"title":"penf_stringify-doctest-2.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-2.f90~~EfferentGraph sourcefile~penf_stringify-doctest-2.f90 penf_stringify-doctest-2.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-2.f90 Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( 'I was ASCII kind and I am still ASCII' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-2.f90.html"},{"title":"penf_stringify-doctest-85.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-85.f90~~EfferentGraph sourcefile~penf_stringify-doctest-85.f90 penf_stringify-doctest-85.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-85.f90 Source Code program volatile_doctest use penf_stringify use penf print FR16P , bcton ( '00000000000000000000000000000000000000000000000000000000000000000000000000000' // & '000000000000000000000000000000000001111111100111111' , knd = 1._R16P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-85.f90.html"},{"title":"penf_stringify-doctest-49.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-49.f90~~EfferentGraph sourcefile~penf_stringify-doctest-49.f90 penf_stringify-doctest-49.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-49.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-49.f90.html"},{"title":"penf_stringify-doctest-62.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-62.f90~~EfferentGraph sourcefile~penf_stringify-doctest-62.f90 penf_stringify-doctest-62.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-62.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-62.f90.html"},{"title":"penf_stringify-doctest-19.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-19.f90~~EfferentGraph sourcefile~penf_stringify-doctest-19.f90 penf_stringify-doctest-19.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-19.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R8P , compact = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-19.f90.html"},{"title":"penf_stringify-doctest-7.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-7.f90~~EfferentGraph sourcefile~penf_stringify-doctest-7.f90 penf_stringify-doctest-7.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-7.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FR16P , n = 1._R16P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-7.f90.html"},{"title":"penf_stringify-doctest-53.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-53.f90~~EfferentGraph sourcefile~penf_stringify-doctest-53.f90 penf_stringify-doctest-53.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-53.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-53.f90.html"},{"title":"penf_stringify-doctest-34.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-34.f90~~EfferentGraph sourcefile~penf_stringify-doctest-34.f90 penf_stringify-doctest-34.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-34.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-34.f90.html"},{"title":"penf_stringify-doctest-45.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-45.f90~~EfferentGraph sourcefile~penf_stringify-doctest-45.f90 penf_stringify-doctest-45.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-45.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-45.f90.html"},{"title":"penf_stringify-doctest-76.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-76.f90~~EfferentGraph sourcefile~penf_stringify-doctest-76.f90 penf_stringify-doctest-76.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-76.f90 Source Code program volatile_doctest use penf_stringify use penf print FI2P , cton ( str = '-1' , knd = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-76.f90.html"},{"title":"penf_stringify-doctest-46.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-46.f90~~EfferentGraph sourcefile~penf_stringify-doctest-46.f90 penf_stringify-doctest-46.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-46.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], compact = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-46.f90.html"},{"title":"penf_stringify-doctest-43.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-43.f90~~EfferentGraph sourcefile~penf_stringify-doctest-43.f90 penf_stringify-doctest-43.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-43.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , 2._R4P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-43.f90.html"},{"title":"penf_stringify-doctest-66.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-66.f90~~EfferentGraph sourcefile~penf_stringify-doctest-66.f90 penf_stringify-doctest-66.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-66.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I4P , nz_pad = 5 ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-66.f90.html"},{"title":"penf_stringify-doctest-20.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-20.f90~~EfferentGraph sourcefile~penf_stringify-doctest-20.f90 penf_stringify-doctest-20.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-20.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-20.f90.html"},{"title":"penf_stringify-doctest-86.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-86.f90~~EfferentGraph sourcefile~penf_stringify-doctest-86.f90 penf_stringify-doctest-86.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-86.f90 Source Code program volatile_doctest use penf_stringify use penf print FR8P , bcton ( '0000000000000000000000000000000000000000000000001111000000111111' , knd = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-86.f90.html"},{"title":"penf_stringify-doctest-78.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-78.f90~~EfferentGraph sourcefile~penf_stringify-doctest-78.f90 penf_stringify-doctest-78.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-78.f90 Source Code program volatile_doctest use penf_stringify use penf character ( 128 ) :: b b = bstr ( n = 1._R16P ) print \"(A)\" , b ( 17 :) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-78.f90.html"},{"title":"penf_stringify-doctest-10.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-10.f90~~EfferentGraph sourcefile~penf_stringify-doctest-10.f90 penf_stringify-doctest-10.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-10.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI8P , n = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-10.f90.html"},{"title":"penf_stringify-doctest-82.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-82.f90~~EfferentGraph sourcefile~penf_stringify-doctest-82.f90 penf_stringify-doctest-82.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-82.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-82.f90.html"},{"title":"penf_stringify-doctest-64.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-64.f90~~EfferentGraph sourcefile~penf_stringify-doctest-64.f90 penf_stringify-doctest-64.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-64.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I8P , nz_pad = 5 ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-64.f90.html"},{"title":"penf_stringify-doctest-8.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-8.f90~~EfferentGraph sourcefile~penf_stringify-doctest-8.f90 penf_stringify-doctest-8.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-8.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FR8P , n = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-8.f90.html"},{"title":"penf_stringify-doctest-65.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-65.f90~~EfferentGraph sourcefile~penf_stringify-doctest-65.f90 penf_stringify-doctest-65.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-65.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-65.f90.html"},{"title":"penf_stringify-doctest-6.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-6.f90~~EfferentGraph sourcefile~penf_stringify-doctest-6.f90 penf_stringify-doctest-6.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-6.f90 Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( UCS4_ 'I was UCS4 kind and I am still UCS4' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-6.f90.html"},{"title":"penf_stringify-doctest-61.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-61.f90~~EfferentGraph sourcefile~penf_stringify-doctest-61.f90 penf_stringify-doctest-61.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-61.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-61.f90.html"},{"title":"penf_stringify-doctest-90.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-90.f90~~EfferentGraph sourcefile~penf_stringify-doctest-90.f90 penf_stringify-doctest-90.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-90.f90 Source Code program volatile_doctest use penf_stringify use penf print FI2P , bcton ( '0000000000000001' , knd = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-90.f90.html"},{"title":"penf_stringify-doctest-51.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-51.f90~~EfferentGraph sourcefile~penf_stringify-doctest-51.f90 penf_stringify-doctest-51.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-51.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-51.f90.html"},{"title":"penf_stringify-doctest-87.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-87.f90~~EfferentGraph sourcefile~penf_stringify-doctest-87.f90 penf_stringify-doctest-87.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-87.f90 Source Code program volatile_doctest use penf_stringify use penf print FR4P , bcton ( '00000000000000001000000000111111' , knd = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-87.f90.html"},{"title":"penf_stringify-doctest-23.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-23.f90~~EfferentGraph sourcefile~penf_stringify-doctest-23.f90 penf_stringify-doctest-23.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-23.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-23.f90.html"},{"title":"penf_stringify-doctest-24.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-24.f90~~EfferentGraph sourcefile~penf_stringify-doctest-24.f90 penf_stringify-doctest-24.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-24.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I8P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-24.f90.html"},{"title":"penf_stringify-doctest-35.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-35.f90~~EfferentGraph sourcefile~penf_stringify-doctest-35.f90 penf_stringify-doctest-35.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-35.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-35.f90.html"},{"title":"penf_stringify-doctest-26.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-26.f90~~EfferentGraph sourcefile~penf_stringify-doctest-26.f90 penf_stringify-doctest-26.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-26.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I4P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-26.f90.html"},{"title":"penf_stringify-doctest-22.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-22.f90~~EfferentGraph sourcefile~penf_stringify-doctest-22.f90 penf_stringify-doctest-22.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-22.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R4P , compact = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-22.f90.html"},{"title":"penf_stringify-doctest-36.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-36.f90~~EfferentGraph sourcefile~penf_stringify-doctest-36.f90 penf_stringify-doctest-36.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-36.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ], compact = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-36.f90.html"},{"title":"penf_stringify-doctest-41.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-41.f90~~EfferentGraph sourcefile~penf_stringify-doctest-41.f90 penf_stringify-doctest-41.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-41.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], compact = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-41.f90.html"},{"title":"penf_stringify-doctest-32.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-32.f90~~EfferentGraph sourcefile~penf_stringify-doctest-32.f90 penf_stringify-doctest-32.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-32.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , - 2._R16P ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-32.f90.html"},{"title":"penf_stringify-doctest-33.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-33.f90~~EfferentGraph sourcefile~penf_stringify-doctest-33.f90 penf_stringify-doctest-33.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-33.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R16P , 2._R16P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-33.f90.html"},{"title":"penf_stringify-doctest-55.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-55.f90~~EfferentGraph sourcefile~penf_stringify-doctest-55.f90 penf_stringify-doctest-55.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-55.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-55.f90.html"},{"title":"penf_stringify-doctest-29.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-29.f90~~EfferentGraph sourcefile~penf_stringify-doctest-29.f90 penf_stringify-doctest-29.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-29.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-29.f90.html"},{"title":"penf_stringify-doctest-42.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-42.f90~~EfferentGraph sourcefile~penf_stringify-doctest-42.f90 penf_stringify-doctest-42.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-42.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-42.f90.html"},{"title":"penf_stringify-doctest-31.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-31.f90~~EfferentGraph sourcefile~penf_stringify-doctest-31.f90 penf_stringify-doctest-31.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-31.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-31.f90.html"},{"title":"penf_stringify-doctest-77.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-77.f90~~EfferentGraph sourcefile~penf_stringify-doctest-77.f90 penf_stringify-doctest-77.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-77.f90 Source Code program volatile_doctest use penf_stringify use penf print FI1P , cton ( str = '-1' , knd = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-77.f90.html"},{"title":"penf_stringify-doctest-13.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-13.f90~~EfferentGraph sourcefile~penf_stringify-doctest-13.f90 penf_stringify-doctest-13.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-13.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI1P , n = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-13.f90.html"},{"title":"penf_stringify-doctest-47.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-47.f90~~EfferentGraph sourcefile~penf_stringify-doctest-47.f90 penf_stringify-doctest-47.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-47.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-47.f90.html"},{"title":"penf_stringify-doctest-57.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-57.f90~~EfferentGraph sourcefile~penf_stringify-doctest-57.f90 penf_stringify-doctest-57.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-57.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-57.f90.html"},{"title":"penf_stringify-doctest-59.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-59.f90~~EfferentGraph sourcefile~penf_stringify-doctest-59.f90 penf_stringify-doctest-59.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-59.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I1P , - 2_I1P ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-59.f90.html"},{"title":"penf_stringify-doctest-58.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-58.f90~~EfferentGraph sourcefile~penf_stringify-doctest-58.f90 penf_stringify-doctest-58.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-58.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , - 2_I2P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-58.f90.html"},{"title":"penf_stringify-doctest-81.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-81.f90~~EfferentGraph sourcefile~penf_stringify-doctest-81.f90 penf_stringify-doctest-81.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-81.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-81.f90.html"},{"title":"penf_stringify-doctest-75.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-75.f90~~EfferentGraph sourcefile~penf_stringify-doctest-75.f90 penf_stringify-doctest-75.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-75.f90 Source Code program volatile_doctest use penf_stringify use penf print FI4P , cton ( str = '-1' , knd = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-75.f90.html"},{"title":"penf_stringify-doctest-1.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-1.f90~~EfferentGraph sourcefile~penf_stringify-doctest-1.f90 penf_stringify-doctest-1.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-1.f90 Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( 'I was DEFAULT kind, but now I am ASCII' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-1.f90.html"},{"title":"penf_stringify-doctest-84.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-84.f90~~EfferentGraph sourcefile~penf_stringify-doctest-84.f90 penf_stringify-doctest-84.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-84.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-84.f90.html"},{"title":"penf_stringify-doctest-54.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-54.f90~~EfferentGraph sourcefile~penf_stringify-doctest-54.f90 penf_stringify-doctest-54.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-54.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , - 2_I4P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-54.f90.html"},{"title":"penf_stringify-doctest-83.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-83.f90~~EfferentGraph sourcefile~penf_stringify-doctest-83.f90 penf_stringify-doctest-83.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-83.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , bstr ( n = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-83.f90.html"},{"title":"penf_stringify-doctest-38.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-38.f90~~EfferentGraph sourcefile~penf_stringify-doctest-38.f90 penf_stringify-doctest-38.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-38.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , 2._R8P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-38.f90.html"},{"title":"penf_stringify-doctest-9.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-9.f90~~EfferentGraph sourcefile~penf_stringify-doctest-9.f90 penf_stringify-doctest-9.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-9.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FR4P , n = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-9.f90.html"},{"title":"penf_stringify-doctest-15.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-15.f90~~EfferentGraph sourcefile~penf_stringify-doctest-15.f90 penf_stringify-doctest-15.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-15.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R16P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-15.f90.html"},{"title":"penf_stringify-doctest-74.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-74.f90~~EfferentGraph sourcefile~penf_stringify-doctest-74.f90 penf_stringify-doctest-74.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-74.f90 Source Code program volatile_doctest use penf_stringify use penf print FI8P , cton ( str = '-1' , knd = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-74.f90.html"},{"title":"penf_stringify-doctest-73.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-73.f90~~EfferentGraph sourcefile~penf_stringify-doctest-73.f90 penf_stringify-doctest-73.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-73.f90 Source Code program volatile_doctest use penf_stringify use penf print FR4P , cton ( str = '-1.0' , knd = 1._R4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-73.f90.html"},{"title":"penf_stringify-doctest-16.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-16.f90~~EfferentGraph sourcefile~penf_stringify-doctest-16.f90 penf_stringify-doctest-16.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-16.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R16P , compact = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-16.f90.html"},{"title":"penf_stringify-doctest-50.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-50.f90~~EfferentGraph sourcefile~penf_stringify-doctest-50.f90 penf_stringify-doctest-50.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-50.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , - 2_I8P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-50.f90.html"},{"title":"penf_stringify-doctest-3.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-3.f90~~EfferentGraph sourcefile~penf_stringify-doctest-3.f90 penf_stringify-doctest-3.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-3.f90 Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = ASCII ), allocatable :: string string = str_ascii ( UCS4_ 'I was UCS4 kind, but now I am ASCII' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-3.f90.html"},{"title":"penf_stringify-doctest-11.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-11.f90~~EfferentGraph sourcefile~penf_stringify-doctest-11.f90 penf_stringify-doctest-11.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-11.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI4P , n = 1_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-11.f90.html"},{"title":"penf_stringify-doctest-68.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-68.f90~~EfferentGraph sourcefile~penf_stringify-doctest-68.f90 penf_stringify-doctest-68.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-68.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I2P , nz_pad = 3 ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-68.f90.html"},{"title":"penf_stringify-doctest-25.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-25.f90~~EfferentGraph sourcefile~penf_stringify-doctest-25.f90 penf_stringify-doctest-25.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-25.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-25.f90.html"},{"title":"penf_stringify-doctest-30.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-30.f90~~EfferentGraph sourcefile~penf_stringify-doctest-30.f90 penf_stringify-doctest-30.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-30.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I1P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-30.f90.html"},{"title":"penf_stringify-doctest-28.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-28.f90~~EfferentGraph sourcefile~penf_stringify-doctest-28.f90 penf_stringify-doctest-28.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-28.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I2P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-28.f90.html"},{"title":"penf_stringify-doctest-18.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-18.f90~~EfferentGraph sourcefile~penf_stringify-doctest-18.f90 penf_stringify-doctest-18.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-18.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R8P , no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-18.f90.html"},{"title":"penf_stringify-doctest-5.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-5.f90~~EfferentGraph sourcefile~penf_stringify-doctest-5.f90 penf_stringify-doctest-5.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-5.f90 Source Code program volatile_doctest use penf_stringify use penf character ( len = :, kind = UCS4 ), allocatable :: string string = str_ascii ( ASCII_ 'I was ASCII kind, but now I am UCS4' ) print \"(A)\" , string endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-5.f90.html"},{"title":"penf_stringify-doctest-63.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-63.f90~~EfferentGraph sourcefile~penf_stringify-doctest-63.f90 penf_stringify-doctest-63.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-63.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-63.f90.html"},{"title":"penf_stringify-doctest-48.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-48.f90~~EfferentGraph sourcefile~penf_stringify-doctest-48.f90 penf_stringify-doctest-48.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-48.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I8P , 2_I8P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-48.f90.html"},{"title":"penf_stringify-doctest-52.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-52.f90~~EfferentGraph sourcefile~penf_stringify-doctest-52.f90 penf_stringify-doctest-52.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-52.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I4P , 2_I4P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-52.f90.html"},{"title":"penf_stringify-doctest-44.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-44.f90~~EfferentGraph sourcefile~penf_stringify-doctest-44.f90 penf_stringify-doctest-44.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-44.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R4P , - 2._R4P ], separator = '|' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-44.f90.html"},{"title":"penf_stringify-doctest-88.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-88.f90~~EfferentGraph sourcefile~penf_stringify-doctest-88.f90 penf_stringify-doctest-88.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-88.f90 Source Code program volatile_doctest use penf_stringify use penf print FI8P , bcton ( '0000000000000000000000000000000000000000000000000000000000000001' , knd = 1_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-88.f90.html"},{"title":"penf_stringify-doctest-72.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-72.f90~~EfferentGraph sourcefile~penf_stringify-doctest-72.f90 penf_stringify-doctest-72.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-72.f90 Source Code program volatile_doctest use penf_stringify use penf print FR8P , cton ( str = '-1.0' , knd = 1._R8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-72.f90.html"},{"title":"penf_stringify-doctest-27.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-27.f90~~EfferentGraph sourcefile~penf_stringify-doctest-27.f90 penf_stringify-doctest-27.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-27.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-27.f90.html"},{"title":"penf_stringify-doctest-17.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-17.f90~~EfferentGraph sourcefile~penf_stringify-doctest-17.f90 penf_stringify-doctest-17.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-17.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n =- 1._R8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-17.f90.html"},{"title":"penf_stringify-doctest-70.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-70.f90~~EfferentGraph sourcefile~penf_stringify-doctest-70.f90 penf_stringify-doctest-70.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-70.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I1P , nz_pad = 3 ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-70.f90.html"},{"title":"penf_stringify-doctest-12.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-12.f90~~EfferentGraph sourcefile~penf_stringify-doctest-12.f90 penf_stringify-doctest-12.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-12.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( fm = FI2P , n = 1_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-12.f90.html"},{"title":"penf_stringify-doctest-69.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-69.f90~~EfferentGraph sourcefile~penf_stringify-doctest-69.f90 penf_stringify-doctest-69.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-69.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , strz ( n = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-69.f90.html"},{"title":"penf_stringify-doctest-40.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-40.f90~~EfferentGraph sourcefile~penf_stringify-doctest-40.f90 penf_stringify-doctest-40.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-40.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1._R8P , - 2._R8P ], delimiters = [ '(' , ')' ]) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-40.f90.html"},{"title":"penf_stringify-doctest-91.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-91.f90~~EfferentGraph sourcefile~penf_stringify-doctest-91.f90 penf_stringify-doctest-91.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-91.f90 Source Code program volatile_doctest use penf_stringify use penf print FI1P , bcton ( '00000001' , knd = 1_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-91.f90.html"},{"title":"penf_stringify-doctest-56.f90 – PENF","text":"This file depends on sourcefile~~penf_stringify-doctest-56.f90~~EfferentGraph sourcefile~penf_stringify-doctest-56.f90 penf_stringify-doctest-56.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_stringify-doctest-56.f90 Source Code program volatile_doctest use penf_stringify use penf print \"(A)\" , str ( n = [ 1_I2P , 2_I2P ], no_sign = . true .) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_stringify-doctest-56.f90.html"},{"title":"penf-doctest-2.f90 – PENF","text":"This file depends on sourcefile~~penf-doctest-2.f90~~EfferentGraph sourcefile~penf-doctest-2.f90 penf-doctest-2.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf-doctest-2.f90 Source Code program volatile_doctest use penf use penf call penf_init print FI1P , BYR4P endprogram volatile_doctest","tags":"","loc":"sourcefile/penf-doctest-2.f90.html"},{"title":"penf-doctest-6.f90 – PENF","text":"This file depends on sourcefile~~penf-doctest-6.f90~~EfferentGraph sourcefile~penf-doctest-6.f90 penf-doctest-6.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf-doctest-6.f90 Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf-doctest-6.f90.html"},{"title":"penf-doctest-5.f90 – PENF","text":"This file depends on sourcefile~~penf-doctest-5.f90~~EfferentGraph sourcefile~penf-doctest-5.f90 penf-doctest-5.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf-doctest-5.f90 Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf-doctest-5.f90.html"},{"title":"penf-doctest-1.f90 – PENF","text":"This file depends on sourcefile~~penf-doctest-1.f90~~EfferentGraph sourcefile~penf-doctest-1.f90 penf-doctest-1.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf-doctest-1.f90 Source Code program volatile_doctest use penf use penf call check_endian print * , endian endprogram volatile_doctest","tags":"","loc":"sourcefile/penf-doctest-1.f90.html"},{"title":"penf-doctest-3.f90 – PENF","text":"This file depends on sourcefile~~penf-doctest-3.f90~~EfferentGraph sourcefile~penf-doctest-3.f90 penf-doctest-3.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf-doctest-3.f90 Source Code program volatile_doctest use penf use penf integer :: u open ( newunit = u , status = 'scratch' ) call penf_print ( u ) close ( u ) print \"(A)\" , 'done' endprogram volatile_doctest","tags":"","loc":"sourcefile/penf-doctest-3.f90.html"},{"title":"penf-doctest-4.f90 – PENF","text":"This file depends on sourcefile~~penf-doctest-4.f90~~EfferentGraph sourcefile~penf-doctest-4.f90 penf-doctest-4.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf-doctest-4.f90 Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf-doctest-4.f90.html"},{"title":"penf-doctest-7.f90 – PENF","text":"This file depends on sourcefile~~penf-doctest-7.f90~~EfferentGraph sourcefile~penf-doctest-7.f90 penf-doctest-7.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf-doctest-7.f90 Source Code program volatile_doctest use penf use penf print FI4P , digit ( 100_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf-doctest-7.f90.html"},{"title":"penf_b_size-doctest-12.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-12.f90~~EfferentGraph sourcefile~penf_b_size-doctest-12.f90 penf_b_size-doctest-12.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-12.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I1P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-12.f90.html"},{"title":"penf_b_size-doctest-6.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-6.f90~~EfferentGraph sourcefile~penf_b_size-doctest-6.f90 penf_b_size-doctest-6.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-6.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1._R8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-6.f90.html"},{"title":"penf_b_size-doctest-11.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-11.f90~~EfferentGraph sourcefile~penf_b_size-doctest-11.f90 penf_b_size-doctest-11.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-11.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I2P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-11.f90.html"},{"title":"penf_b_size-doctest-4.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-4.f90~~EfferentGraph sourcefile~penf_b_size-doctest-4.f90 penf_b_size-doctest-4.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-4.f90 Source Code program volatile_doctest use penf_b_size use penf print FI4P , bit_size ( 'ab' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-4.f90.html"},{"title":"penf_b_size-doctest-2.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-2.f90~~EfferentGraph sourcefile~penf_b_size-doctest-2.f90 penf_b_size-doctest-2.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-2.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , bit_size ( 1._R8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-2.f90.html"},{"title":"penf_b_size-doctest-7.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-7.f90~~EfferentGraph sourcefile~penf_b_size-doctest-7.f90 penf_b_size-doctest-7.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-7.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1._R4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-7.f90.html"},{"title":"penf_b_size-doctest-10.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-10.f90~~EfferentGraph sourcefile~penf_b_size-doctest-10.f90 penf_b_size-doctest-10.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-10.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-10.f90.html"},{"title":"penf_b_size-doctest-8.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-8.f90~~EfferentGraph sourcefile~penf_b_size-doctest-8.f90 penf_b_size-doctest-8.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-8.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 'ab' ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-8.f90.html"},{"title":"penf_b_size-doctest-3.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-3.f90~~EfferentGraph sourcefile~penf_b_size-doctest-3.f90 penf_b_size-doctest-3.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-3.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , bit_size ( 1._R4P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-3.f90.html"},{"title":"penf_b_size-doctest-5.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-5.f90~~EfferentGraph sourcefile~penf_b_size-doctest-5.f90 penf_b_size-doctest-5.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-5.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1._R16P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-5.f90.html"},{"title":"penf_b_size-doctest-1.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-1.f90~~EfferentGraph sourcefile~penf_b_size-doctest-1.f90 penf_b_size-doctest-1.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-1.f90 Source Code program volatile_doctest use penf_b_size use penf print FI2P , bit_size ( 1._R16P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-1.f90.html"},{"title":"penf_b_size-doctest-9.f90 – PENF","text":"This file depends on sourcefile~~penf_b_size-doctest-9.f90~~EfferentGraph sourcefile~penf_b_size-doctest-9.f90 penf_b_size-doctest-9.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Programs volatile_doctest Source Code penf_b_size-doctest-9.f90 Source Code program volatile_doctest use penf_b_size use penf print FI1P , byte_size ( 1_I8P ) endprogram volatile_doctest","tags":"","loc":"sourcefile/penf_b_size-doctest-9.f90.html"},{"title":"penf_b_size.F90 – PENF","text":"PENF bit/byte size functions. This file depends on sourcefile~~penf_b_size.f90~~EfferentGraph sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Files dependent on this one sourcefile~~penf_b_size.f90~~AfferentGraph sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-7.f90 penf_b_size-doctest-7.f90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-6.f90 penf_b_size-doctest-6.f90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size-doctest-4.f90 penf_b_size-doctest-4.f90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-8.f90 penf_b_size-doctest-8.f90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-5.f90 penf_b_size-doctest-5.f90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-9.f90 penf_b_size-doctest-9.f90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-11.f90 penf_b_size-doctest-11.f90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-12.f90 penf_b_size-doctest-12.f90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-2.f90 penf_b_size-doctest-2.f90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-10.f90 penf_b_size-doctest-10.f90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-3.f90 penf_b_size-doctest-3.f90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-1.f90 penf_b_size-doctest-1.f90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-86.f90 penf_stringify-doctest-86.f90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-63.f90 penf_stringify-doctest-63.f90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-40.f90 penf_stringify-doctest-40.f90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-87.f90 penf_stringify-doctest-87.f90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-19.f90 penf_stringify-doctest-19.f90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-29.f90 penf_stringify-doctest-29.f90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-16.f90 penf_stringify-doctest-16.f90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-78.f90 penf_stringify-doctest-78.f90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-48.f90 penf_stringify-doctest-48.f90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-67.f90 penf_stringify-doctest-67.f90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-23.f90 penf_stringify-doctest-23.f90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-91.f90 penf_stringify-doctest-91.f90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-7.f90 penf_stringify-doctest-7.f90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-42.f90 penf_stringify-doctest-42.f90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-50.f90 penf_stringify-doctest-50.f90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-89.f90 penf_stringify-doctest-89.f90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-10.f90 penf_stringify-doctest-10.f90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-52.f90 penf_stringify-doctest-52.f90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-80.f90 penf_stringify-doctest-80.f90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-24.f90 penf_stringify-doctest-24.f90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-1.f90 penf_stringify-doctest-1.f90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-56.f90 penf_stringify-doctest-56.f90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-53.f90 penf_stringify-doctest-53.f90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-31.f90 penf_stringify-doctest-31.f90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-3.f90 penf_stringify-doctest-3.f90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-82.f90 penf_stringify-doctest-82.f90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-75.f90 penf_stringify-doctest-75.f90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-44.f90 penf_stringify-doctest-44.f90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-4.f90 penf_stringify-doctest-4.f90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-35.f90 penf_stringify-doctest-35.f90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-84.f90 penf_stringify-doctest-84.f90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf.f90 sourcefile~penf-doctest-2.f90 penf-doctest-2.f90 sourcefile~penf-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-34.f90 penf_stringify-doctest-34.f90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-77.f90 penf_stringify-doctest-77.f90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-11.f90 penf_stringify-doctest-11.f90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-60.f90 penf_stringify-doctest-60.f90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-64.f90 penf_stringify-doctest-64.f90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-88.f90 penf_stringify-doctest-88.f90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-14.f90 penf_stringify-doctest-14.f90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-26.f90 penf_stringify-doctest-26.f90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-54.f90 penf_stringify-doctest-54.f90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf.f90 sourcefile~penf-doctest-6.f90 penf-doctest-6.f90 sourcefile~penf-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-45.f90 penf_stringify-doctest-45.f90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-13.f90 penf_stringify-doctest-13.f90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-68.f90 penf_stringify-doctest-68.f90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-39.f90 penf_stringify-doctest-39.f90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-8.f90 penf_stringify-doctest-8.f90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-72.f90 penf_stringify-doctest-72.f90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-22.f90 penf_stringify-doctest-22.f90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-83.f90 penf_stringify-doctest-83.f90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf.f90 sourcefile~penf-doctest-5.f90 penf-doctest-5.f90 sourcefile~penf-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-76.f90 penf_stringify-doctest-76.f90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-47.f90 penf_stringify-doctest-47.f90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-25.f90 penf_stringify-doctest-25.f90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-65.f90 penf_stringify-doctest-65.f90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-27.f90 penf_stringify-doctest-27.f90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-2.f90 penf_stringify-doctest-2.f90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-36.f90 penf_stringify-doctest-36.f90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-38.f90 penf_stringify-doctest-38.f90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf.f90 sourcefile~penf-doctest-1.f90 penf-doctest-1.f90 sourcefile~penf-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-46.f90 penf_stringify-doctest-46.f90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-57.f90 penf_stringify-doctest-57.f90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-30.f90 penf_stringify-doctest-30.f90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-21.f90 penf_stringify-doctest-21.f90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-6.f90 penf_stringify-doctest-6.f90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-17.f90 penf_stringify-doctest-17.f90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-37.f90 penf_stringify-doctest-37.f90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-41.f90 penf_stringify-doctest-41.f90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-9.f90 penf_stringify-doctest-9.f90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf-doctest-3.f90 penf-doctest-3.f90 sourcefile~penf-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-28.f90 penf_stringify-doctest-28.f90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-43.f90 penf_stringify-doctest-43.f90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-59.f90 penf_stringify-doctest-59.f90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-61.f90 penf_stringify-doctest-61.f90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-70.f90 penf_stringify-doctest-70.f90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-85.f90 penf_stringify-doctest-85.f90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-32.f90 penf_stringify-doctest-32.f90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-15.f90 penf_stringify-doctest-15.f90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf.f90 sourcefile~penf-doctest-4.f90 penf-doctest-4.f90 sourcefile~penf-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-66.f90 penf_stringify-doctest-66.f90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-58.f90 penf_stringify-doctest-58.f90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-18.f90 penf_stringify-doctest-18.f90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-71.f90 penf_stringify-doctest-71.f90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-90.f90 penf_stringify-doctest-90.f90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-12.f90 penf_stringify-doctest-12.f90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-49.f90 penf_stringify-doctest-49.f90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-33.f90 penf_stringify-doctest-33.f90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-74.f90 penf_stringify-doctest-74.f90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf.f90 sourcefile~penf-doctest-7.f90 penf-doctest-7.f90 sourcefile~penf-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-20.f90 penf_stringify-doctest-20.f90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-81.f90 penf_stringify-doctest-81.f90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-5.f90 penf_stringify-doctest-5.f90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-79.f90 penf_stringify-doctest-79.f90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-51.f90 penf_stringify-doctest-51.f90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-69.f90 penf_stringify-doctest-69.f90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-62.f90 penf_stringify-doctest-62.f90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-55.f90 penf_stringify-doctest-55.f90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-73.f90 penf_stringify-doctest-73.f90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Modules penf_b_size Source Code penf_b_size.F90 Source Code !< PENF bit/byte size functions. module penf_b_size !< PENF bit/byte size functions. use penf_global_parameters_variables implicit none private save public :: bit_size , byte_size interface bit_size !< Overloading of the intrinsic *bit_size* function for computing the number of bits of (also) real and character variables. module procedure & #if defined _R16P bit_size_R16P , & #endif bit_size_R8P , & bit_size_R4P , & bit_size_chr endinterface interface byte_size !< Compute the number of bytes of a variable. module procedure & byte_size_I8P , & byte_size_I4P , & byte_size_I2P , & byte_size_I1P , & #if defined _R16P byte_size_R16P , & #endif byte_size_R8P , & byte_size_R4P , & byte_size_chr endinterface contains elemental function bit_size_R16P ( i ) result ( bits ) !< Compute the number of bits of a real variable. !< !<```fortran !< use penf !< print FI2P, bit_size(1._R16P) !<``` !=> 128 <<< real ( R16P ), intent ( in ) :: i !< Real variable whose number of bits must be computed. integer ( I2P ) :: bits !< Number of bits of r. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I2P ) * 8_I2P endfunction bit_size_R16P elemental function bit_size_R8P ( i ) result ( bits ) !< Compute the number of bits of a real variable. !< !<```fortran !< use penf !< print FI1P, bit_size(1._R8P) !<``` !=> 64 <<< real ( R8P ), intent ( in ) :: i !< Real variable whose number of bits must be computed. integer ( I1P ) :: bits !< Number of bits of r. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I1P ) * 8_I1P endfunction bit_size_R8P elemental function bit_size_R4P ( i ) result ( bits ) !< Compute the number of bits of a real variable. !< !<```fortran !< use penf !< print FI1P, bit_size(1._R4P) !<``` !=> 32 <<< real ( R4P ), intent ( in ) :: i !< Real variable whose number of bits must be computed. integer ( I1P ) :: bits !< Number of bits of r. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I1P ) * 8_I1P endfunction bit_size_R4P elemental function bit_size_chr ( i ) result ( bits ) !< Compute the number of bits of a character variable. !< !<```fortran !< use penf !< print FI4P, bit_size('ab') !<``` !=> 16 <<< character ( * ), intent ( IN ) :: i !< Character variable whose number of bits must be computed. integer ( I4P ) :: bits !< Number of bits of c. integer ( I1P ) :: mold ( 1 ) !< \"Molding\" dummy variable for bits counting. bits = size ( transfer ( i , mold ), dim = 1 , kind = I4P ) * 8_I4P endfunction bit_size_chr elemental function byte_size_R16P ( i ) result ( bytes ) !< Compute the number of bytes of a real variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1._R16P) !<``` !=> 16 <<< real ( R16P ), intent ( in ) :: i !< Real variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of r. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_R16P elemental function byte_size_R8P ( i ) result ( bytes ) !< Compute the number of bytes of a real variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1._R8P) !<``` !=> 8 <<< real ( R8P ), intent ( in ) :: i !< Real variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of r. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_R8P elemental function byte_size_R4P ( i ) result ( bytes ) !< Compute the number of bytes of a real variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1._R4P) !<``` !=> 4 <<< real ( R4P ), intent ( in ) :: i !< Real variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of r. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_R4P elemental function byte_size_chr ( i ) result ( bytes ) !< Compute the number of bytes of a character variable. !< !<```fortran !< use penf !< print FI1P, byte_size('ab') !<``` !=> 2 <<< character ( * ), intent ( in ) :: i !< Character variable whose number of bytes must be computed. integer ( I4P ) :: bytes !< Number of bytes of c. bytes = bit_size ( i ) / 8_I4P endfunction byte_size_chr elemental function byte_size_I8P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I8P) !<``` !=> 8 <<< integer ( I8P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I8P elemental function byte_size_I4P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I4P) !<``` !=> 4 <<< integer ( I4P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I4P elemental function byte_size_I2P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I2P) !<``` !=> 2 <<< integer ( I2P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I2P elemental function byte_size_I1P ( i ) result ( bytes ) !< Compute the number of bytes of an integer variable. !< !<```fortran !< use penf !< print FI1P, byte_size(1_I1P) !<``` !=> 1 <<< integer ( I1P ), intent ( in ) :: i !< Integer variable whose number of bytes must be computed. integer ( I1P ) :: bytes !< Number of bytes of i. bytes = bit_size ( i ) / 8_I1P endfunction byte_size_I1P endmodule penf_b_size","tags":"","loc":"sourcefile/penf_b_size.f90.html"},{"title":"penf_global_parameters_variables.F90 – PENF","text":"PENF global parameters and variables. Files dependent on this one sourcefile~~penf_global_parameters_variables.f90~~AfferentGraph sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size-doctest-9.f90 penf_b_size-doctest-9.f90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-86.f90 penf_stringify-doctest-86.f90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-63.f90 penf_stringify-doctest-63.f90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-87.f90 penf_stringify-doctest-87.f90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-40.f90 penf_stringify-doctest-40.f90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-6.f90 penf_b_size-doctest-6.f90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-19.f90 penf_stringify-doctest-19.f90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-29.f90 penf_stringify-doctest-29.f90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-16.f90 penf_stringify-doctest-16.f90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-78.f90 penf_stringify-doctest-78.f90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-48.f90 penf_stringify-doctest-48.f90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-67.f90 penf_stringify-doctest-67.f90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-23.f90 penf_stringify-doctest-23.f90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-91.f90 penf_stringify-doctest-91.f90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-11.f90 penf_b_size-doctest-11.f90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-7.f90 penf_stringify-doctest-7.f90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-42.f90 penf_stringify-doctest-42.f90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-50.f90 penf_stringify-doctest-50.f90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-89.f90 penf_stringify-doctest-89.f90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-10.f90 penf_stringify-doctest-10.f90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-52.f90 penf_stringify-doctest-52.f90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-80.f90 penf_stringify-doctest-80.f90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-24.f90 penf_stringify-doctest-24.f90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-1.f90 penf_stringify-doctest-1.f90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-56.f90 penf_stringify-doctest-56.f90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-4.f90 penf_b_size-doctest-4.f90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-53.f90 penf_stringify-doctest-53.f90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-31.f90 penf_stringify-doctest-31.f90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-3.f90 penf_stringify-doctest-3.f90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-82.f90 penf_stringify-doctest-82.f90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-75.f90 penf_stringify-doctest-75.f90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-44.f90 penf_stringify-doctest-44.f90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-4.f90 penf_stringify-doctest-4.f90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-35.f90 penf_stringify-doctest-35.f90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-84.f90 penf_stringify-doctest-84.f90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf.f90 sourcefile~penf-doctest-2.f90 penf-doctest-2.f90 sourcefile~penf-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-2.f90 penf_b_size-doctest-2.f90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-34.f90 penf_stringify-doctest-34.f90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-77.f90 penf_stringify-doctest-77.f90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-11.f90 penf_stringify-doctest-11.f90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-60.f90 penf_stringify-doctest-60.f90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-64.f90 penf_stringify-doctest-64.f90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-88.f90 penf_stringify-doctest-88.f90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-14.f90 penf_stringify-doctest-14.f90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-26.f90 penf_stringify-doctest-26.f90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-54.f90 penf_stringify-doctest-54.f90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf.f90 sourcefile~penf-doctest-6.f90 penf-doctest-6.f90 sourcefile~penf-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-7.f90 penf_b_size-doctest-7.f90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-45.f90 penf_stringify-doctest-45.f90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-13.f90 penf_stringify-doctest-13.f90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-68.f90 penf_stringify-doctest-68.f90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-39.f90 penf_stringify-doctest-39.f90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-8.f90 penf_stringify-doctest-8.f90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-72.f90 penf_stringify-doctest-72.f90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-22.f90 penf_stringify-doctest-22.f90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-83.f90 penf_stringify-doctest-83.f90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf.f90 sourcefile~penf-doctest-5.f90 penf-doctest-5.f90 sourcefile~penf-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-10.f90 penf_b_size-doctest-10.f90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-76.f90 penf_stringify-doctest-76.f90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-47.f90 penf_stringify-doctest-47.f90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-25.f90 penf_stringify-doctest-25.f90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-65.f90 penf_stringify-doctest-65.f90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-27.f90 penf_stringify-doctest-27.f90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-2.f90 penf_stringify-doctest-2.f90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-36.f90 penf_stringify-doctest-36.f90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-38.f90 penf_stringify-doctest-38.f90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf.f90 sourcefile~penf-doctest-1.f90 penf-doctest-1.f90 sourcefile~penf-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-8.f90 penf_b_size-doctest-8.f90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-46.f90 penf_stringify-doctest-46.f90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-57.f90 penf_stringify-doctest-57.f90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-30.f90 penf_stringify-doctest-30.f90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-17.f90 penf_stringify-doctest-17.f90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-21.f90 penf_stringify-doctest-21.f90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-6.f90 penf_stringify-doctest-6.f90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-37.f90 penf_stringify-doctest-37.f90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-41.f90 penf_stringify-doctest-41.f90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-9.f90 penf_stringify-doctest-9.f90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf-doctest-3.f90 penf-doctest-3.f90 sourcefile~penf-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-3.f90 penf_b_size-doctest-3.f90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-28.f90 penf_stringify-doctest-28.f90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-43.f90 penf_stringify-doctest-43.f90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-59.f90 penf_stringify-doctest-59.f90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-61.f90 penf_stringify-doctest-61.f90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-70.f90 penf_stringify-doctest-70.f90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-85.f90 penf_stringify-doctest-85.f90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-32.f90 penf_stringify-doctest-32.f90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-15.f90 penf_stringify-doctest-15.f90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf.f90 sourcefile~penf-doctest-4.f90 penf-doctest-4.f90 sourcefile~penf-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-5.f90 penf_b_size-doctest-5.f90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-66.f90 penf_stringify-doctest-66.f90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-58.f90 penf_stringify-doctest-58.f90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-18.f90 penf_stringify-doctest-18.f90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-71.f90 penf_stringify-doctest-71.f90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-90.f90 penf_stringify-doctest-90.f90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-12.f90 penf_stringify-doctest-12.f90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-49.f90 penf_stringify-doctest-49.f90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-33.f90 penf_stringify-doctest-33.f90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-74.f90 penf_stringify-doctest-74.f90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf.f90 sourcefile~penf-doctest-7.f90 penf-doctest-7.f90 sourcefile~penf-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-1.f90 penf_b_size-doctest-1.f90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-20.f90 penf_stringify-doctest-20.f90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-81.f90 penf_stringify-doctest-81.f90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-5.f90 penf_stringify-doctest-5.f90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-79.f90 penf_stringify-doctest-79.f90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-51.f90 penf_stringify-doctest-51.f90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-69.f90 penf_stringify-doctest-69.f90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-12.f90 penf_b_size-doctest-12.f90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf_b_size.f90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-62.f90 penf_stringify-doctest-62.f90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-55.f90 penf_stringify-doctest-55.f90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-73.f90 penf_stringify-doctest-73.f90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Modules penf_global_parameters_variables Source Code penf_global_parameters_variables.F90 Source Code !< PENF global parameters and variables. module penf_global_parameters_variables !< PENF global parameters and variables. !< !< @note All module defined entities are public. implicit none public save integer , parameter :: endianL = 1 !< Little endian parameter. integer , parameter :: endianB = 0 !< Big endian parameter. ! portable kind parameters #ifdef _ASCII_SUPPORTED integer , parameter :: ASCII = selected_char_kind ( 'ascii' ) !< ASCII character set kind. #else integer , parameter :: ASCII = selected_char_kind ( 'default' ) !< ASCII character set kind defined as default set. #endif #ifdef _UCS4_SUPPORTED integer , parameter :: UCS4 = selected_char_kind ( 'iso_10646' ) !< Unicode character set kind. #else integer , parameter :: UCS4 = selected_char_kind ( 'default' ) !< Unicode character set kind defined as default set. #endif #if defined _CK_IS_DEFAULT integer , parameter :: CK = selected_char_kind ( 'default' ) !< Default kind character. #elif defined _CK_IS_ASCII integer , parameter :: CK = ASCII !< Default kind character. #elif defined _CK_IS_UCS4 integer , parameter :: CK = UCS4 !< Default kind character. #else integer , parameter :: CK = selected_char_kind ( 'default' ) !< Default kind character. #endif #if defined _R16P integer , parameter :: R16P = selected_real_kind ( 33 , 4931 ) !< 33 digits, range [10&#94;{-4931}, 10&#94;{+4931} - 1]; 128 bits. #else integer , parameter :: R16P = selected_real_kind ( 15 , 307 ) !< 15 digits, range [10&#94;{-307} , 10&#94;{+307}  - 1]; 64 bits. #endif integer , parameter :: R8P = selected_real_kind ( 15 , 307 ) !< 15 digits, range [10&#94;{-307} , 10&#94;{+307}  - 1]; 64 bits. integer , parameter :: R4P = selected_real_kind ( 6 , 37 ) !< 6  digits, range [10&#94;{-37}  , 10&#94;{+37}   - 1]; 32 bits. #if defined _R16P #if defined _R_P_IS_R16P integer , parameter :: R_P = R16P !< Default real precision. #endif #endif #if defined _R_P_IS_R8P integer , parameter :: R_P = R8P !< Default real precision. #elif defined _R_P_IS_R4P integer , parameter :: R_P = R4P !< Default real precision. #else integer , parameter :: R_P = R8P !< Default real precision. #endif integer , parameter :: I8P = selected_int_kind ( 18 ) !< Range [-2&#94;{63},+2&#94;{63} - 1], 19 digits plus sign; 64 bits. integer , parameter :: I4P = selected_int_kind ( 9 ) !< Range [-2&#94;{31},+2&#94;{31} - 1], 10 digits plus sign; 32 bits. integer , parameter :: I2P = selected_int_kind ( 4 ) !< Range [-2&#94;{15},+2&#94;{15} - 1], 5  digits plus sign; 16 bits. integer , parameter :: I1P = selected_int_kind ( 2 ) !< Range [-2&#94;{7} ,+2&#94;{7}  - 1], 3  digits plus sign; 8  bits. integer , parameter :: I_P = I4P !< Default integer precision. ! format parameters #if defined _R16P character ( * ), parameter :: FR16P = '(E42.33E4)' !< Output format for kind=R16P real. #else character ( * ), parameter :: FR16P = '(E23.15E3)' !< Output format for kind=R8P real. #endif character ( * ), parameter :: FR8P = '(E23.15E3)' !< Output format for kind=R8P real. character ( * ), parameter :: FR4P = '(E13.6E2)' !< Output format for kind=R4P real. #if defined _R16P #if defined _R_P_IS_R16P character ( * ), parameter :: FR_P = FR16P !< Output format for kind=R_P real. #endif #endif #if defined _R_P_IS_R8P character ( * ), parameter :: FR_P = FR8P !< Output format for kind=R_P real. #elif defined _R_P_IS_R4P character ( * ), parameter :: FR_P = FR4P !< Output format for kind=R_P real. #else character ( * ), parameter :: FR_P = FR8P !< Output format for kind=R_P real. #endif character ( * ), parameter :: FI8P = '(I20)' !< Output format for kind=I8P integer. character ( * ), parameter :: FI8PZP = '(I20.19)' !< Output format for kind=I8P integer with zero prefixing. character ( * ), parameter :: FI4P = '(I11)' !< Output format for kind=I4P integer. character ( * ), parameter :: FI4PZP = '(I11.10)' !< Output format for kind=I4P integer with zero prefixing. character ( * ), parameter :: FI2P = '(I6)' !< Output format for kind=I2P integer. character ( * ), parameter :: FI2PZP = '(I6.5)' !< Output format for kind=I2P integer with zero prefixing. character ( * ), parameter :: FI1P = '(I4)' !< Output format for kind=I1P integer. character ( * ), parameter :: FI1PZP = '(I4.3)' !< Output format for kind=I1P integer with zero prefixing. character ( * ), parameter :: FI_P = FI4P !< Output format for kind=I_P integer. character ( * ), parameter :: FI_PZP = FI4PZP !< Output format for kind=I_P integer with zero prefixing. ! length (number of digits) of formatted numbers #if defined _R16P integer , parameter :: DR16P = 42 !< Number of digits of output format FR16P. #else integer , parameter :: DR16P = 23 !< Number of digits of output format FR8P. #endif integer , parameter :: DR8P = 23 !< Number of digits of output format FR8P. integer , parameter :: DR4P = 13 !< Number of digits of output format FR4P. #if defined _R16P #if defined _R_P_IS_R16P integer , parameter :: DR_P = DR16P !< Number of digits of output format FR_P. #endif #endif #if defined _R_P_IS_R8P integer , parameter :: DR_P = DR8P !< Number of digits of output format FR_P. #elif defined _R_P_IS_R4P integer , parameter :: DR_P = DR4P !< Number of digits of output format FR_P. #else integer , parameter :: DR_P = DR8P !< Number of digits of output format FR_P. #endif integer , parameter :: DI8P = 20 !< Number of digits of output format I8P. integer , parameter :: DI4P = 11 !< Number of digits of output format I4P. integer , parameter :: DI2P = 6 !< Number of digits of output format I2P. integer , parameter :: DI1P = 4 !< Number of digits of output format I1P. integer , parameter :: DI_P = DI4P !< Number of digits of output format I_P. ! list of kinds integer , parameter :: CHARACTER_KINDS_LIST ( 1 : 3 ) = [ ASCII , UCS4 , CK ] !< List of character kinds. #if defined _R16P integer , parameter :: REAL_KINDS_LIST ( 1 : 4 ) = [ R16P , R8P , R4P , R_P ] !< List of real kinds. #else integer , parameter :: REAL_KINDS_LIST ( 1 : 3 ) = [ R8P , R4P , R_P ] !< List of real kinds. #endif #if defined _R16P character ( * ), parameter :: REAL_FORMATS_LIST ( 1 : 4 ) = [ FR16P , FR8P , FR4P // ' ' , FR_P ] !< List of real formats. #else character ( * ), parameter :: REAL_FORMATS_LIST ( 1 : 3 ) = [ FR8P , FR4P // ' ' , FR_P ] !< List of real formats. #endif integer , parameter :: INTEGER_KINDS_LIST ( 1 : 5 ) = [ I8P , I4P , I2P , I1P , I_P ] !< List of integer kinds. character ( * ), parameter :: INTEGER_FORMATS_LIST ( 1 : 5 ) = [ FI8P , FI4P , FI2P // ' ' , FI1P // ' ' , FI_P ] !< List of integer formats. ! minimum and maximum (representable) values #if defined _R16P real ( R16P ), parameter :: MinR16P = - huge ( 1._R16P ) !< Minimum value of kind=R16P real. real ( R16P ), parameter :: MaxR16P = huge ( 1._R16P ) !< Maximum value of kind=R16P real. #else real ( R8P ), parameter :: MinR16P = - huge ( 1._R8P ) !< Minimum value of kind=R8P real. real ( R8P ), parameter :: MaxR16P = huge ( 1._R8P ) !< Maximum value of kind=R8P real. #endif real ( R8P ), parameter :: MinR8P = - huge ( 1._R8P ) !< Minimum value of kind=R8P real. real ( R8P ), parameter :: MaxR8P = huge ( 1._R8P ) !< Maximum value of kind=R8P real. real ( R4P ), parameter :: MinR4P = - huge ( 1._R4P ) !< Minimum value of kind=R4P real. real ( R4P ), parameter :: MaxR4P = huge ( 1._R4P ) !< Maximum value of kind=R4P real. real ( R_P ), parameter :: MinR_P = - huge ( 1._R_P ) !< Minimum value of kind=R_P real. real ( R_P ), parameter :: MaxR_P = huge ( 1._R_P ) !< Maximum value of kind=R_P real. integer ( I8P ), parameter :: MinI8P = - huge ( 1_I8P ) !< Minimum value of kind=I8P integer. integer ( I4P ), parameter :: MinI4P = - huge ( 1_I4P ) !< Minimum value of kind=I4P integer. integer ( I2P ), parameter :: MinI2P = - huge ( 1_I2P ) !< Minimum value of kind=I2P integer. integer ( I1P ), parameter :: MinI1P = - huge ( 1_I1P ) !< Minimum value of kind=I1P integer. integer ( I_P ), parameter :: MinI_P = - huge ( 1_I_P ) !< Minimum value of kind=I_P integer. integer ( I8P ), parameter :: MaxI8P = huge ( 1_I8P ) !< Maximum value of kind=I8P integer. integer ( I4P ), parameter :: MaxI4P = huge ( 1_I4P ) !< Maximum value of kind=I4P integer. integer ( I2P ), parameter :: MaxI2P = huge ( 1_I2P ) !< Maximum value of kind=I2P integer. integer ( I1P ), parameter :: MaxI1P = huge ( 1_I1P ) !< Maximum value of kind=I1P integer. integer ( I_P ), parameter :: MaxI_P = huge ( 1_I_P ) !< Maximum value of kind=I_P integer. ! real smallest (representable) values #if defined _R16P real ( R16P ), parameter :: smallR16P = tiny ( 1._R16P ) !< Smallest representable value of kind=R16P real. #else real ( R8P ), parameter :: smallR16P = tiny ( 1._R8P ) !< Smallest representable value of kind=R8P real. #endif real ( R8P ), parameter :: smallR8P = tiny ( 1._R8P ) !< Smallest representable value of kind=R8P real. real ( R4P ), parameter :: smallR4P = tiny ( 1._R4P ) !< Smallest representable value of kind=R4P real. real ( R_P ), parameter :: smallR_P = tiny ( 1._R_P ) !< Smallest representable value of kind=R_P real. ! smallest real representable difference by the running calculator #if defined _R16P real ( R16P ), parameter :: ZeroR16P = nearest ( 1._R16P , 1._R16P ) - & nearest ( 1._R16P , - 1._R16P ) !< Smallest representable difference of kind=R16P real. #else real ( R8P ), parameter :: ZeroR16P = 0._R8P !nearest(1._R8P, 1._R8P) - & !nearest(1._R8P,-1._R8P)   !< Smallest representable difference of kind=R8P real. #endif real ( R8P ), parameter :: ZeroR8P = 0._R8P !nearest(1._R8P, 1._R8P) - & !nearest(1._R8P,-1._R8P)   !< Smallest representable difference of kind=R8P real. real ( R4P ), parameter :: ZeroR4P = 0._R4P !nearest(1._R4P, 1._R4P) - & !nearest(1._R4P,-1._R4P)   !< Smallest representable difference of kind=R4P real. real ( R_P ), parameter :: ZeroR_P = 0._R_P !nearest(1._R_P, 1._R_P) - & !nearest(1._R_P,-1._R_P)   !< Smallest representable difference of kind=R_P real. ! bits/bytes memory requirements #if defined _R16P integer ( I2P ), parameter :: BIR16P = storage_size ( MaxR16P ) !< Number of bits of kind=R16P real. #else integer ( I1P ), parameter :: BIR16P = storage_size ( MaxR8P ) !< Number of bits of kind=R8P real. #endif integer ( I1P ), parameter :: BIR8P = storage_size ( MaxR8P ) !< Number of bits of kind=R8P real. integer ( I1P ), parameter :: BIR4P = storage_size ( MaxR4P ) !< Number of bits of kind=R4P real. integer ( I1P ), parameter :: BIR_P = storage_size ( MaxR_P ) !< Number of bits of kind=R_P real. #if defined _R16P integer ( I2P ), parameter :: BYR16P = BIR16P / 8_I2P !< Number of bytes of kind=R16P real. #else integer ( I1P ), parameter :: BYR16P = BIR8P / 8_I1P !< Number of bytes of kind=R8P real. #endif integer ( I1P ), parameter :: BYR8P = BIR8P / 8_I1P !< Number of bytes of kind=R8P real. integer ( I1P ), parameter :: BYR4P = BIR4P / 8_I1P !< Number of bytes of kind=R4P real. integer ( I1P ), parameter :: BYR_P = BIR_P / 8_I1P !< Number of bytes of kind=R_P real. integer ( I8P ), parameter :: BII8P = storage_size ( MaxI8P ) !< Number of bits of kind=I8P integer. integer ( I4P ), parameter :: BII4P = storage_size ( MaxI4P ) !< Number of bits of kind=I4P integer. integer ( I2P ), parameter :: BII2P = storage_size ( MaxI2P ) !< Number of bits of kind=I2P integer. integer ( I1P ), parameter :: BII1P = storage_size ( MaxI1P ) !< Number of bits of kind=I1P integer. integer ( I_P ), parameter :: BII_P = storage_size ( MaxI_P ) !< Number of bits of kind=I_P integer. integer ( I8P ), parameter :: BYI8P = BII8P / 8_I8P !< Number of bytes of kind=I8P integer. integer ( I4P ), parameter :: BYI4P = BII4P / 8_I4P !< Number of bytes of kind=I4P integer. integer ( I2P ), parameter :: BYI2P = BII2P / 8_I2P !< Number of bytes of kind=I2P integer. integer ( I1P ), parameter :: BYI1P = BII1P / 8_I1P !< Number of bytes of kind=I1P integer. integer ( I_P ), parameter :: BYI_P = BII_P / 8_I_P !< Number of bytes of kind=I_P integer. endmodule penf_global_parameters_variables","tags":"","loc":"sourcefile/penf_global_parameters_variables.f90.html"},{"title":"penf.F90 – PENF","text":"Portability Environment for Fortran poor people. This file depends on sourcefile~~penf.f90~~EfferentGraph sourcefile~penf.f90 penf.F90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf.f90->sourcefile~penf_b_size.f90 sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Files dependent on this one sourcefile~~penf.f90~~AfferentGraph sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-86.f90 penf_stringify-doctest-86.f90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-63.f90 penf_stringify-doctest-63.f90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-9.f90 penf_b_size-doctest-9.f90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-40.f90 penf_stringify-doctest-40.f90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-87.f90 penf_stringify-doctest-87.f90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-19.f90 penf_stringify-doctest-19.f90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-29.f90 penf_stringify-doctest-29.f90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-16.f90 penf_stringify-doctest-16.f90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-6.f90 penf_b_size-doctest-6.f90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-78.f90 penf_stringify-doctest-78.f90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-48.f90 penf_stringify-doctest-48.f90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-67.f90 penf_stringify-doctest-67.f90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-23.f90 penf_stringify-doctest-23.f90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-91.f90 penf_stringify-doctest-91.f90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-7.f90 penf_stringify-doctest-7.f90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-42.f90 penf_stringify-doctest-42.f90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-50.f90 penf_stringify-doctest-50.f90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-11.f90 penf_b_size-doctest-11.f90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-89.f90 penf_stringify-doctest-89.f90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-10.f90 penf_stringify-doctest-10.f90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-52.f90 penf_stringify-doctest-52.f90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-80.f90 penf_stringify-doctest-80.f90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-24.f90 penf_stringify-doctest-24.f90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-1.f90 penf_stringify-doctest-1.f90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-56.f90 penf_stringify-doctest-56.f90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-53.f90 penf_stringify-doctest-53.f90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-31.f90 penf_stringify-doctest-31.f90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-3.f90 penf_stringify-doctest-3.f90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-4.f90 penf_b_size-doctest-4.f90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-82.f90 penf_stringify-doctest-82.f90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-75.f90 penf_stringify-doctest-75.f90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-44.f90 penf_stringify-doctest-44.f90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-4.f90 penf_stringify-doctest-4.f90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-35.f90 penf_stringify-doctest-35.f90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-84.f90 penf_stringify-doctest-84.f90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf.f90 sourcefile~penf-doctest-2.f90 penf-doctest-2.f90 sourcefile~penf-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-34.f90 penf_stringify-doctest-34.f90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-77.f90 penf_stringify-doctest-77.f90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-11.f90 penf_stringify-doctest-11.f90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-2.f90 penf_b_size-doctest-2.f90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-60.f90 penf_stringify-doctest-60.f90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-64.f90 penf_stringify-doctest-64.f90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-88.f90 penf_stringify-doctest-88.f90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-14.f90 penf_stringify-doctest-14.f90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-26.f90 penf_stringify-doctest-26.f90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-54.f90 penf_stringify-doctest-54.f90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf.f90 sourcefile~penf-doctest-6.f90 penf-doctest-6.f90 sourcefile~penf-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-45.f90 penf_stringify-doctest-45.f90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-13.f90 penf_stringify-doctest-13.f90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-68.f90 penf_stringify-doctest-68.f90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-7.f90 penf_b_size-doctest-7.f90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-39.f90 penf_stringify-doctest-39.f90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-8.f90 penf_stringify-doctest-8.f90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-72.f90 penf_stringify-doctest-72.f90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-22.f90 penf_stringify-doctest-22.f90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-83.f90 penf_stringify-doctest-83.f90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf.f90 sourcefile~penf-doctest-5.f90 penf-doctest-5.f90 sourcefile~penf-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-76.f90 penf_stringify-doctest-76.f90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-47.f90 penf_stringify-doctest-47.f90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-25.f90 penf_stringify-doctest-25.f90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-10.f90 penf_b_size-doctest-10.f90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-65.f90 penf_stringify-doctest-65.f90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-27.f90 penf_stringify-doctest-27.f90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-2.f90 penf_stringify-doctest-2.f90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-36.f90 penf_stringify-doctest-36.f90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-38.f90 penf_stringify-doctest-38.f90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf.f90 sourcefile~penf-doctest-1.f90 penf-doctest-1.f90 sourcefile~penf-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-46.f90 penf_stringify-doctest-46.f90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-57.f90 penf_stringify-doctest-57.f90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-30.f90 penf_stringify-doctest-30.f90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-8.f90 penf_b_size-doctest-8.f90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-17.f90 penf_stringify-doctest-17.f90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-21.f90 penf_stringify-doctest-21.f90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-6.f90 penf_stringify-doctest-6.f90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-37.f90 penf_stringify-doctest-37.f90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-41.f90 penf_stringify-doctest-41.f90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-9.f90 penf_stringify-doctest-9.f90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf-doctest-3.f90 penf-doctest-3.f90 sourcefile~penf-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-28.f90 penf_stringify-doctest-28.f90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-43.f90 penf_stringify-doctest-43.f90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-59.f90 penf_stringify-doctest-59.f90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-3.f90 penf_b_size-doctest-3.f90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-61.f90 penf_stringify-doctest-61.f90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-70.f90 penf_stringify-doctest-70.f90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-85.f90 penf_stringify-doctest-85.f90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-32.f90 penf_stringify-doctest-32.f90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-15.f90 penf_stringify-doctest-15.f90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf.f90 sourcefile~penf-doctest-4.f90 penf-doctest-4.f90 sourcefile~penf-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-66.f90 penf_stringify-doctest-66.f90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-58.f90 penf_stringify-doctest-58.f90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-18.f90 penf_stringify-doctest-18.f90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-5.f90 penf_b_size-doctest-5.f90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-71.f90 penf_stringify-doctest-71.f90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-90.f90 penf_stringify-doctest-90.f90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-12.f90 penf_stringify-doctest-12.f90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-49.f90 penf_stringify-doctest-49.f90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-33.f90 penf_stringify-doctest-33.f90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-74.f90 penf_stringify-doctest-74.f90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf.f90 sourcefile~penf-doctest-7.f90 penf-doctest-7.f90 sourcefile~penf-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-5.f90 penf_stringify-doctest-5.f90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-20.f90 penf_stringify-doctest-20.f90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-81.f90 penf_stringify-doctest-81.f90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-1.f90 penf_b_size-doctest-1.f90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-79.f90 penf_stringify-doctest-79.f90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-51.f90 penf_stringify-doctest-51.f90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-69.f90 penf_stringify-doctest-69.f90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-62.f90 penf_stringify-doctest-62.f90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-55.f90 penf_stringify-doctest-55.f90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-73.f90 penf_stringify-doctest-73.f90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-12.f90 penf_b_size-doctest-12.f90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Modules penf Source Code penf.F90 Source Code !< Portability Environment for Fortran poor people. module penf !< Portability Environment for Fortran poor people. use penf_global_parameters_variables #ifdef __INTEL_COMPILER use penf_b_size #else use penf_b_size , only : bit_size , byte_size #endif use penf_stringify , only : str_ascii , str_ucs4 , str , strz , cton , bstr , bcton implicit none private save ! global parameters and variables public :: endianL , endianB , endian , is_initialized public :: ASCII , UCS4 , CK public :: R16P , FR16P , DR16P , MinR16P , MaxR16P , BIR16P , BYR16P , smallR16P , ZeroR16P public :: R8P , FR8P , DR8P , MinR8P , MaxR8P , BIR8P , BYR8P , smallR8P , ZeroR8P public :: R4P , FR4P , DR4P , MinR4P , MaxR4P , BIR4P , BYR4P , smallR4P , ZeroR4P public :: R_P , FR_P , DR_P , MinR_P , MaxR_P , BIR_P , BYR_P , smallR_P , ZeroR_P public :: I8P , FI8P , DI8P , MinI8P , MaxI8P , BII8P , BYI8P public :: I4P , FI4P , DI4P , MinI4P , MaxI4P , BII4P , BYI4P public :: I2P , FI2P , DI2P , MinI2P , MaxI2P , BII2P , BYI2P public :: I1P , FI1P , DI1P , MinI1P , MaxI1P , BII1P , BYI1P public :: I_P , FI_P , DI_P , MinI_P , MaxI_P , BII_P , BYI_P public :: CHARACTER_KINDS_LIST , REAL_KINDS_LIST , REAL_FORMATS_LIST public :: INTEGER_KINDS_LIST , INTEGER_FORMATS_LIST ! bit/byte size functions public :: bit_size , byte_size ! stringify facility public :: str_ascii , str_ucs4 public :: str , strz , cton public :: bstr , bcton ! miscellanea facility public :: check_endian public :: digit public :: penf_Init public :: penf_print integer , protected :: endian = endianL !< Bit ordering: Little endian (endianL), or Big endian (endianB). logical , protected :: is_initialized = . false . !< Check the initialization of some variables that must be initialized. #ifdef __GFORTRAN__ ! work-around for strange gfortran bug... interface bit_size !< Overloading of the intrinsic *bit_size* function for computing the number of bits of (also) real and character variables. endinterface #endif interface digit !< Compute the number of digits in decimal base of the input integer. module procedure digit_I8 , digit_I4 , digit_I2 , digit_I1 endinterface contains ! public procedures subroutine check_endian () !< Check the type of bit ordering (big or little endian) of the running architecture. !< !> @note The result is stored into the *endian* global variable. !< !<```fortran !< use penf !< call check_endian !< print *, endian !<``` !=> 1 <<< if ( is_little_endian ()) then endian = endianL else endian = endianB endif contains pure function is_little_endian () result ( is_little ) !< Check if the type of the bit ordering of the running architecture is little endian. logical :: is_little !< Logical output: true is the running architecture uses little endian ordering, false otherwise. integer ( I1P ) :: int1 ( 1 : 4 ) !< One byte integer array for casting 4 bytes integer. int1 = transfer ( 1_I4P , int1 ) is_little = ( int1 ( 1 ) == 1_I1P ) endfunction is_little_endian endsubroutine check_endian subroutine penf_init () !< Initialize PENF's variables that are not initialized into the definition specification. !< !<```fortran !< use penf !< call penf_init !< print FI1P, BYR4P !<``` !=> 4 <<< call check_endian is_initialized = . true . endsubroutine penf_init subroutine penf_print ( unit , pref , iostat , iomsg ) !< Print to the specified unit the PENF's environment data. !< !<```fortran !< use penf !< integer :: u !< open(newunit=u, status='scratch') !< call penf_print(u) !< close(u) !< print \"(A)\", 'done' !<``` !=> done <<< integer ( I4P ), intent ( in ) :: unit !< Logic unit. character ( * ), intent ( in ), optional :: pref !< Prefixing string. integer ( I4P ), intent ( out ), optional :: iostat !< IO error. character ( * ), intent ( out ), optional :: iomsg !< IO error message. character ( len = :), allocatable :: prefd !< Prefixing string. integer ( I4P ) :: iostatd !< IO error. character ( 500 ) :: iomsgd !< Temporary variable for IO error message. if (. not . is_initialized ) call penf_init prefd = '' ; if ( present ( pref )) prefd = pref if ( endian == endianL ) then write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'This architecture has LITTLE Endian bit ordering' else write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'This architecture has BIG Endian bit ordering' endif write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Character kind:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ASCII: ' // str ( n = ASCII ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  UCS4:  ' // str ( n = UCS4 ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  CK:    ' // str ( n = CK ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Reals kind, format and characters number:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R16P: ' // str ( n = R16P ) // ',' // FR16P // ',' // str ( n = DR16P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R8P:  ' // str ( n = R8P ) // ',' // FR8P // ',' // str ( n = DR8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R4P:  ' // str ( n = R4P ) // ',' // FR4P // ',' // str ( n = DR4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R_P:  ' // str ( n = R_P ) // ',' // FR_P // ',' // str ( n = DR_P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Integers kind, format and characters number:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I8P:  ' // str ( n = I8P ) // ',' // FI8P // ',' // str ( n = DI8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I4P:  ' // str ( n = I4P ) // ',' // FI4P // ',' // str ( n = DI4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I2P:  ' // str ( n = I2P ) // ',' // FI2P // ',' // str ( n = DI2P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I1P:  ' // str ( n = I1P ) // ',' // FI1P // ',' // str ( n = DI1P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Reals minimum and maximum values:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R16P: ' // str ( n = MinR16P ) // ',' // str ( n = MaxR16P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R8P:  ' // str ( n = MinR8P ) // ',' // str ( n = MaxR8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R4P:  ' // str ( n = MinR4P ) // ',' // str ( n = MaxR4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R_P:  ' // str ( n = MinR_P ) // ',' // str ( n = MaxR_P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Integergs minimum and maximum values:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I8P:  ' // str ( n = MinI8P ) // ',' // str ( n = MaxI8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I4P:  ' // str ( n = MinI4P ) // ',' // str ( n = MaxI4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I2P:  ' // str ( n = MinI2P ) // ',' // str ( n = MaxI2P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I1P:  ' // str ( n = MinI1P ) // ',' // str ( n = MaxI1P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Reals bits/bytes sizes:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R16P: ' // str ( n = BIR16P ) // '/' // str ( n = BYR16P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R8P:  ' // str ( n = BIR8P ) // '/' // str ( n = BYR8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R4P:  ' // str ( n = BIR4P ) // '/' // str ( n = BYR4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  R_P:  ' // str ( n = BIR_P ) // '/' // str ( n = BYR_P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Integers bits/bytes sizes:' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I8P:  ' // str ( n = BII8P ) // '/' // str ( n = BYI8P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I4P:  ' // str ( n = BII4P ) // '/' // str ( n = BYI4P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I2P:  ' // str ( n = BII2P ) // '/' // str ( n = BYI2P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  I1P:  ' // str ( n = BII1P ) // '/' // str ( n = BYI1P ) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Smallest reals' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR16P: ' // str ( smallR16P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR8P:  ' // str ( smallR8P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR4P:  ' // str ( smallR4P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  smallR_P:  ' // str ( smallR_P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // 'Machine zero' write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR16P: ' // str ( ZeroR16P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR8P:  ' // str ( ZeroR8P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR4P:  ' // str ( ZeroR4P , . true .) write ( unit = unit , fmt = '(A)' , iostat = iostatd , iomsg = iomsgd ) prefd // '  ZeroR_P:  ' // str ( ZeroR_P , . true .) if ( present ( iostat )) iostat = iostatd if ( present ( iomsg )) iomsg = iomsgd endsubroutine penf_print ! private procedures elemental function digit_I8 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I8P) !<``` !=> 3 <<< integer ( I8P ), intent ( in ) :: n !< Input integer. character ( DI8P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI8P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I8 elemental function digit_I4 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I4P) !<``` !=> 3 <<< integer ( I4P ), intent ( in ) :: n !< Input integer. character ( DI4P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI4P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I4 elemental function digit_I2 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I2P) !<``` !=> 3 <<< integer ( I2P ), intent ( in ) :: n !< Input integer. character ( DI2P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI2P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I2 elemental function digit_I1 ( n ) result ( digit ) !< Compute the number of digits in decimal base of the input integer. !< !<```fortran !< use penf !< print FI4P, digit(100_I1P) !<``` !=> 3 <<< integer ( I1P ), intent ( in ) :: n !< Input integer. character ( DI1P ) :: str !< Returned string containing input number plus padding zeros. integer ( I4P ) :: digit !< Number of digits. write ( str , FI1P ) abs ( n ) ! Casting of n to string. digit = len_trim ( adjustl ( str )) ! Calculating the digits number of n. endfunction digit_I1 endmodule penf","tags":"","loc":"sourcefile/penf.f90.html"},{"title":"penf_stringify.F90 – PENF","text":"PENF string-to-number (and viceversa) facility. This file depends on sourcefile~~penf_stringify.f90~~EfferentGraph sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_b_size.f90 penf_b_size.F90 sourcefile~penf_stringify.f90->sourcefile~penf_b_size.f90 sourcefile~penf_global_parameters_variables.f90 penf_global_parameters_variables.F90 sourcefile~penf_stringify.f90->sourcefile~penf_global_parameters_variables.f90 sourcefile~penf_b_size.f90->sourcefile~penf_global_parameters_variables.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Files dependent on this one sourcefile~~penf_stringify.f90~~AfferentGraph sourcefile~penf_stringify.f90 penf_stringify.F90 sourcefile~penf_stringify-doctest-86.f90 penf_stringify-doctest-86.f90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf_stringify.f90 sourcefile~penf.f90 penf.F90 sourcefile~penf_stringify-doctest-86.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-63.f90 penf_stringify-doctest-63.f90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-63.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-40.f90 penf_stringify-doctest-40.f90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-40.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-87.f90 penf_stringify-doctest-87.f90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-87.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-19.f90 penf_stringify-doctest-19.f90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-19.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-29.f90 penf_stringify-doctest-29.f90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-29.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-16.f90 penf_stringify-doctest-16.f90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-16.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-78.f90 penf_stringify-doctest-78.f90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-78.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-48.f90 penf_stringify-doctest-48.f90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-48.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-67.f90 penf_stringify-doctest-67.f90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-67.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-23.f90 penf_stringify-doctest-23.f90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-23.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-91.f90 penf_stringify-doctest-91.f90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-91.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-7.f90 penf_stringify-doctest-7.f90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-42.f90 penf_stringify-doctest-42.f90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-42.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-50.f90 penf_stringify-doctest-50.f90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-50.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-89.f90 penf_stringify-doctest-89.f90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-89.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-10.f90 penf_stringify-doctest-10.f90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-52.f90 penf_stringify-doctest-52.f90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-52.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-80.f90 penf_stringify-doctest-80.f90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-80.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-24.f90 penf_stringify-doctest-24.f90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-24.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-1.f90 penf_stringify-doctest-1.f90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-56.f90 penf_stringify-doctest-56.f90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-56.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-53.f90 penf_stringify-doctest-53.f90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-53.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-31.f90 penf_stringify-doctest-31.f90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-31.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-3.f90 penf_stringify-doctest-3.f90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-82.f90 penf_stringify-doctest-82.f90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-82.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-75.f90 penf_stringify-doctest-75.f90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-75.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-44.f90 penf_stringify-doctest-44.f90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-44.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-4.f90 penf_stringify-doctest-4.f90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-35.f90 penf_stringify-doctest-35.f90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-35.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-84.f90 penf_stringify-doctest-84.f90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-84.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-34.f90 penf_stringify-doctest-34.f90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-34.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-77.f90 penf_stringify-doctest-77.f90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-77.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-11.f90 penf_stringify-doctest-11.f90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-60.f90 penf_stringify-doctest-60.f90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-60.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-64.f90 penf_stringify-doctest-64.f90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-64.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-88.f90 penf_stringify-doctest-88.f90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-88.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-14.f90 penf_stringify-doctest-14.f90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-14.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-26.f90 penf_stringify-doctest-26.f90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-26.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-54.f90 penf_stringify-doctest-54.f90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-54.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-45.f90 penf_stringify-doctest-45.f90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-45.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-13.f90 penf_stringify-doctest-13.f90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-13.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-68.f90 penf_stringify-doctest-68.f90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-68.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-39.f90 penf_stringify-doctest-39.f90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-39.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-8.f90 penf_stringify-doctest-8.f90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-72.f90 penf_stringify-doctest-72.f90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-72.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-22.f90 penf_stringify-doctest-22.f90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-22.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-83.f90 penf_stringify-doctest-83.f90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-83.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-76.f90 penf_stringify-doctest-76.f90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-76.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-47.f90 penf_stringify-doctest-47.f90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-47.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-25.f90 penf_stringify-doctest-25.f90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-25.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-65.f90 penf_stringify-doctest-65.f90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-65.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-27.f90 penf_stringify-doctest-27.f90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-27.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-2.f90 penf_stringify-doctest-2.f90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-36.f90 penf_stringify-doctest-36.f90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-36.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-38.f90 penf_stringify-doctest-38.f90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-38.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-46.f90 penf_stringify-doctest-46.f90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-46.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-57.f90 penf_stringify-doctest-57.f90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-57.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-30.f90 penf_stringify-doctest-30.f90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-30.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-21.f90 penf_stringify-doctest-21.f90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-21.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-6.f90 penf_stringify-doctest-6.f90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-17.f90 penf_stringify-doctest-17.f90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-17.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-37.f90 penf_stringify-doctest-37.f90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-37.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-41.f90 penf_stringify-doctest-41.f90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-41.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-9.f90 penf_stringify-doctest-9.f90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-28.f90 penf_stringify-doctest-28.f90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-28.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-43.f90 penf_stringify-doctest-43.f90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-43.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-59.f90 penf_stringify-doctest-59.f90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-59.f90->sourcefile~penf.f90 sourcefile~penf.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-61.f90 penf_stringify-doctest-61.f90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-61.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-70.f90 penf_stringify-doctest-70.f90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-70.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-85.f90 penf_stringify-doctest-85.f90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-85.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-32.f90 penf_stringify-doctest-32.f90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-32.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-15.f90 penf_stringify-doctest-15.f90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-15.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-66.f90 penf_stringify-doctest-66.f90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-66.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-58.f90 penf_stringify-doctest-58.f90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-58.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-18.f90 penf_stringify-doctest-18.f90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-18.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-71.f90 penf_stringify-doctest-71.f90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-71.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-90.f90 penf_stringify-doctest-90.f90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-90.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-12.f90 penf_stringify-doctest-12.f90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-12.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-49.f90 penf_stringify-doctest-49.f90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-49.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-33.f90 penf_stringify-doctest-33.f90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-33.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-74.f90 penf_stringify-doctest-74.f90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-74.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-20.f90 penf_stringify-doctest-20.f90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-20.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-81.f90 penf_stringify-doctest-81.f90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-81.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-5.f90 penf_stringify-doctest-5.f90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-79.f90 penf_stringify-doctest-79.f90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-79.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-51.f90 penf_stringify-doctest-51.f90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-51.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-69.f90 penf_stringify-doctest-69.f90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-69.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-62.f90 penf_stringify-doctest-62.f90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-62.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-55.f90 penf_stringify-doctest-55.f90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-55.f90->sourcefile~penf.f90 sourcefile~penf_stringify-doctest-73.f90 penf_stringify-doctest-73.f90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf_stringify.f90 sourcefile~penf_stringify-doctest-73.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-9.f90 penf_b_size-doctest-9.f90 sourcefile~penf_b_size-doctest-9.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-4.f90 penf_b_size-doctest-4.f90 sourcefile~penf_b_size-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf-doctest-5.f90 penf-doctest-5.f90 sourcefile~penf-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-10.f90 penf_b_size-doctest-10.f90 sourcefile~penf_b_size-doctest-10.f90->sourcefile~penf.f90 sourcefile~penf-doctest-4.f90 penf-doctest-4.f90 sourcefile~penf-doctest-4.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-6.f90 penf_b_size-doctest-6.f90 sourcefile~penf_b_size-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf-doctest-2.f90 penf-doctest-2.f90 sourcefile~penf-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-5.f90 penf_b_size-doctest-5.f90 sourcefile~penf_b_size-doctest-5.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-2.f90 penf_b_size-doctest-2.f90 sourcefile~penf_b_size-doctest-2.f90->sourcefile~penf.f90 sourcefile~penf-doctest-1.f90 penf-doctest-1.f90 sourcefile~penf-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-8.f90 penf_b_size-doctest-8.f90 sourcefile~penf_b_size-doctest-8.f90->sourcefile~penf.f90 sourcefile~penf-doctest-7.f90 penf-doctest-7.f90 sourcefile~penf-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-11.f90 penf_b_size-doctest-11.f90 sourcefile~penf_b_size-doctest-11.f90->sourcefile~penf.f90 sourcefile~penf-doctest-6.f90 penf-doctest-6.f90 sourcefile~penf-doctest-6.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-1.f90 penf_b_size-doctest-1.f90 sourcefile~penf_b_size-doctest-1.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-7.f90 penf_b_size-doctest-7.f90 sourcefile~penf_b_size-doctest-7.f90->sourcefile~penf.f90 sourcefile~penf-doctest-3.f90 penf-doctest-3.f90 sourcefile~penf-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-3.f90 penf_b_size-doctest-3.f90 sourcefile~penf_b_size-doctest-3.f90->sourcefile~penf.f90 sourcefile~penf_b_size-doctest-12.f90 penf_b_size-doctest-12.f90 sourcefile~penf_b_size-doctest-12.f90->sourcefile~penf.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\n    is dependent upon another if the latter must be compiled before the former\n    can be. Contents Modules penf_stringify Source Code penf_stringify.F90 Source Code !< PENF string-to-number (and viceversa) facility. module penf_stringify !< PENF string-to-number (and viceversa) facility. use , intrinsic :: iso_fortran_env , only : stderr => error_unit use penf_b_size use penf_global_parameters_variables implicit none private save public :: str_ascii , str_ucs4 public :: str , strz , cton public :: bstr , bcton interface str_ascii !< Convert string of any kind to ASCII string. module procedure str_ascii_default #if defined _ASCII_SUPPORTED && defined _ASCII_NEQ_DEFAULT module procedure str_ascii_ascii #endif #ifdef _UCS4_SUPPORTED module procedure str_ascii_ucs4 #endif endinterface interface str_ucs4 !< Convert string of any kind to UCS4 string. module procedure str_ucs4_default #if defined _ASCII_SUPPORTED && defined _ASCII_NEQ_DEFAULT module procedure str_ucs4_ascii #endif #ifdef _UCS4_SUPPORTED module procedure str_ucs4_ucs4 #endif endinterface interface str !< Convert number (real and integer) to string (number to string type casting). module procedure & #if defined _R16P strf_R16P , str_R16P , & #endif strf_R8P , str_R8P , & strf_R4P , str_R4P , & strf_I8P , str_I8P , & strf_I4P , str_I4P , & strf_I2P , str_I2P , & strf_I1P , str_I1P , & str_bol , & #if defined _R16P str_a_R16P , & #endif str_a_R8P , & str_a_R4P , & str_a_I8P , & str_a_I4P , & str_a_I2P , & str_a_I1P endinterface interface strz !< Convert integer, to string, prefixing with the right number of zeros (integer to string type casting with zero padding). module procedure strz_I8P , strz_I4P , strz_I2P , strz_I1P endinterface interface cton !< Convert string to number (real and integer, string to number type casting). module procedure & #if defined _R16P ctor_R16P , & #endif ctor_R8P , & ctor_R4P , & ctoi_I8P , & ctoi_I4P , & ctoi_I2P , & ctoi_I1P endinterface interface bstr !< Convert number (real and integer) to bit-string (number to bit-string type casting). module procedure & #if defined _R16P bstr_R16P , & #endif bstr_R8P , & bstr_R4P , & bstr_I8P , & bstr_I4P , & bstr_I2P , & bstr_I1P endinterface interface bcton !< Convert bit-string to number (real and integer, bit-string to number type casting). module procedure & #if defined _R16P bctor_R16P , & #endif bctor_R8P , & bctor_R4P , & bctoi_I8P , & bctoi_I4P , & bctoi_I2P , & bctoi_I1P endinterface contains pure function str_ascii_default ( input ) result ( output ) !< Convert string of default kind to ASCII string. !< !<```fortran !< use penf !< character(len=:, kind=ASCII), allocatable :: string !< string = str_ascii('I was DEFAULT kind, but now I am ASCII') !< print \"(A)\", string !<``` !=> I was DEFAULT kind, but now I am ASCII <<< character ( len =* ), intent ( in ) :: input !< Input string of default kind. character ( len = :, kind = ASCII ), allocatable :: output !< Output string of ASCII kind. output = input endfunction str_ascii_default pure function str_ascii_ascii ( input ) result ( output ) !< Convert string of ASCII kind to ASCII string, just for convenience in sanitize strings. !< !<```fortran !< use penf !< character(len=:, kind=ASCII), allocatable :: string !< string = str_ascii('I was ASCII kind and I am still ASCII') !< print \"(A)\", string !<``` !=> I was ASCII kind and I am still ASCII <<< character ( len =* , kind = ASCII ), intent ( in ) :: input !< Input string of ASCII kind. character ( len = :, kind = ASCII ), allocatable :: output !< Output string of ASCII kind. output = input endfunction str_ascii_ascii pure function str_ascii_ucs4 ( input ) result ( output ) !< Convert string of UCS4 kind to ASCII string. !< !<```fortran !< use penf !< character(len=:, kind=ASCII), allocatable :: string !< string = str_ascii(UCS4_'I was UCS4 kind, but now I am ASCII') !< print \"(A)\", string !<``` !=> I was UCS4 kind, but now I am ASCII <<< character ( len =* , kind = UCS4 ), intent ( in ) :: input !< Input string of UCS4 kind. character ( len = :, kind = ASCII ), allocatable :: output !< Output string of ASCII kind. output = input endfunction str_ascii_ucs4 pure function str_ucs4_default ( input ) result ( output ) !< Convert string of default kind to UCS4 string. !< !<```fortran !< use penf !< character(len=:, kind=UCS4), allocatable :: string !< string = str_ascii('I was DEFAULT kind, but now I am UCS4') !< print \"(A)\", string !<``` !=> I was DEFAULT kind, but now I am UCS4 <<< character ( len =* ), intent ( in ) :: input !< Input string of default kind. character ( len = :, kind = UCS4 ), allocatable :: output !< Output string of UCS4 kind. output = input endfunction str_ucs4_default pure function str_ucs4_ascii ( input ) result ( output ) !< Convert string of ASCII kind to UCS4 string. !< !<```fortran !< use penf !< character(len=:, kind=UCS4), allocatable :: string !< string = str_ascii(ASCII_'I was ASCII kind, but now I am UCS4') !< print \"(A)\", string !<``` !=> I was ASCII kind, but now I am UCS4 <<< character ( len =* , kind = ASCII ), intent ( in ) :: input !< Input string of ASCII kind. character ( len = :, kind = UCS4 ), allocatable :: output !< Output string of UCS4 kind. output = input endfunction str_ucs4_ascii pure function str_ucs4_ucs4 ( input ) result ( output ) !< Convert string of UCS4 kind to UCS4 string, just for convenience in sanitize strings. !< !<```fortran !< use penf !< character(len=:, kind=UCS4), allocatable :: string !< string = str_ascii(UCS4_'I was UCS4 kind and I am still UCS4') !< print \"(A)\", string !<``` !=> I was UCS4 kind and I am still UCS4 <<< character ( len =* , kind = UCS4 ), intent ( in ) :: input !< Input string of UCS4 kind. character ( len = :, kind = UCS4 ), allocatable :: output !< Output string of UCS4 kind. output = input endfunction str_ucs4_ucs4 elemental function strf_R16P ( fm , n ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FR16P, n=1._R16P) !<``` !=> 0.100000000000000000000000000000000E+0001 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. real ( R16P ), intent ( in ) :: n !< Real to be converted. character ( DR16P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_R16P elemental function strf_R8P ( fm , n ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FR8P, n=1._R8P) !<``` !=> 0.100000000000000E+001 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. real ( R8P ), intent ( in ) :: n !< Real to be converted. character ( DR8P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_R8P elemental function strf_R4P ( fm , n ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FR4P, n=1._R4P) !<``` !=> 0.100000E+01 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. real ( R4P ), intent ( in ) :: n !< Real to be converted. character ( DR4P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_R4P elemental function strf_I8P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI8P, n=1_I8P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I8P ), intent ( in ) :: n !< Integer to be converted. character ( DI8P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I8P elemental function strf_I4P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI4P, n=1_I4P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I4P ), intent ( in ) :: n !< Integer to be converted. character ( DI4P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I4P elemental function strf_I2P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI2P, n=1_I2P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I2P ), intent ( in ) :: n !< Integer to be converted. character ( DI2P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I2P elemental function strf_I1P ( fm , n ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(fm=FI1P, n=1_I1P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: fm !< Format different from the standard for the kind. integer ( I1P ), intent ( in ) :: n !< Integer to be converted. character ( DI1P ) :: str !< Returned string containing input number. write ( str , trim ( fm )) n endfunction strf_I1P elemental function str_R16P ( n , no_sign , compact ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R16P) !<``` !=> -0.100000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R16P, no_sign=.true.) !<``` !=> 0.100000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R16P, compact=.true.) !<``` !=> -0.1E+1 <<< real ( R16P ), intent ( in ) :: n !< Real to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( DR16P ) :: str !< Returned string containing input number. write ( str , FR16P ) n ! Casting of n to string. if ( n > 0._R16P ) str ( 1 : 1 ) = '+' ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. if ( present ( compact )) then if ( compact ) call compact_real_string ( string = str ) endif endfunction str_R16P elemental function str_R8P ( n , no_sign , compact ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R8P) !<``` !=> -0.100000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R8P, no_sign=.true.) !<``` !=> 0.100000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R8P, compact=.true.) !<``` !=> -0.1E+1 <<< real ( R8P ), intent ( in ) :: n !< Real to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( DR8P ) :: str !< Returned string containing input number. write ( str , FR8P ) n ! Casting of n to string. if ( n > 0._R8P ) str ( 1 : 1 ) = '+' ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. if ( present ( compact )) then if ( compact ) call compact_real_string ( string = str ) endif endfunction str_R8P elemental function str_R4P ( n , no_sign , compact ) result ( str ) !< Convert real to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R4P) !<``` !=> -0.100000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R4P, no_sign=.true.) !<``` !=> 0.100000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1._R4P, compact=.true.) !<``` !=> -0.1E+1 <<< real ( R4P ), intent ( in ) :: n !< Real to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( DR4P ) :: str !< Returned string containing input number. write ( str , FR4P ) n ! Casting of n to string. if ( n > 0._R4P ) str ( 1 : 1 ) = '+' ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. if ( present ( compact )) then if ( compact ) call compact_real_string ( string = str ) endif endfunction str_R4P elemental function str_I8P ( n , no_sign ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I8P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I8P, no_sign=.true.) !<``` !=> 1 <<< integer ( I8P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI8P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI8P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I8P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I8P elemental function str_I4P ( n , no_sign ) result ( str ) !< Converting integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I4P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I4P, no_sign=.true.) !<``` !=> 1 <<< integer ( I4P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI4P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI4P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I4P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I4P elemental function str_I2P ( n , no_sign ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I2P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I2P, no_sign=.true.) !<``` !=> 1 <<< integer ( I2P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI2P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI2P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I2P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I2P elemental function str_I1P ( n , no_sign ) result ( str ) !< Convert integer to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I1P) !<``` !=> -1 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=-1_I1P, no_sign=.true.) !<``` !=> 1 <<< integer ( I1P ), intent ( in ) :: n !< Integer to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( DI1P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI1P ) n ! Casting of n to string. str = adjustl ( trim ( str )) ! Removing white spaces. if ( n >= 0_I1P ) str = '+' // trim ( str ) ! Prefixing plus if n>0. if ( present ( no_sign )) str = str ( 2 :) ! Leaving out the sign. endfunction str_I1P elemental function str_bol ( n ) result ( str ) !< Convert logical to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=.true.) !<``` !=> T <<< logical , intent ( in ) :: n !< Logical to be converted. character ( 1 ) :: str !< Returned string containing input number plus padding zeros. write ( str , '(L1)' ) n endfunction str_bol pure function str_a_R16P ( n , no_sign , separator , delimiters , compact ) result ( str ) !< Converting real array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P]) !<``` !=> +0.100000000000000000000000000000000E+0001,-0.200000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, 2._R16P], no_sign=.true.) !<``` !=> 0.100000000000000000000000000000000E+0001,0.200000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P], separator='|') !<``` !=> +0.100000000000000000000000000000000E+0001|-0.200000000000000000000000000000000E+0001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P], delimiters=['(', ')']) !<``` !=> (+0.100000000000000000000000000000000E+0001,-0.200000000000000000000000000000000E+0001) <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R16P, -2._R16P], compact=.true.) !<``` !=> +0.1E+1,-0.2E+1 <<< real ( R16P ), intent ( in ) :: n (:) !< Real array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DR16P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator do i = 1 , size ( n ) strn = str_R16P ( no_sign = no_sign , compact = compact , n = n ( i )) str = str // sep // trim ( strn ) enddo str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_R16P pure function str_a_R8P ( n , no_sign , separator , delimiters , compact ) result ( str ) !< Convert real array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P]) !<``` !=> +0.100000000000000E+001,-0.200000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, 2._R8P], no_sign=.true.) !<``` !=> 0.100000000000000E+001,0.200000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P], separator='|') !<``` !=> +0.100000000000000E+001|-0.200000000000000E+001 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P], delimiters=['(', ')']) !<``` !=> (+0.100000000000000E+001,-0.200000000000000E+001) <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R8P, -2._R8P], compact=.true.) !<``` !=> +0.1E+1,-0.2E+1 <<< real ( R8P ), intent ( in ) :: n (:) !< Real array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DR8P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator do i = 1 , size ( n ) strn = str_R8P ( no_sign = no_sign , compact = compact , n = n ( i )) str = str // sep // trim ( strn ) enddo str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_R8P pure function str_a_R4P ( n , no_sign , separator , delimiters , compact ) result ( str ) !< Convert real array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P]) !<``` !=> +0.100000E+01,-0.200000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, 2._R4P], no_sign=.true.) !<``` !=> 0.100000E+01,0.200000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P], separator='|') !<``` !=> +0.100000E+01|-0.200000E+01 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P], delimiters=['(', ')']) !<``` !=> (+0.100000E+01,-0.200000E+01) <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1._R4P, -2._R4P], compact=.true.) !<``` !=> +0.1E+1,-0.2E+1 <<< real ( R4P ), intent ( in ) :: n (:) !< Real array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. logical , intent ( in ), optional :: compact !< Flag for *compacting* string encoding. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DR4P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator do i = 1 , size ( n ) strn = str_R4P ( no_sign = no_sign , compact = compact , n = n ( i )) str = str // sep // trim ( strn ) enddo str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_R4P pure function str_a_I8P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, -2_I8P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, 2_I8P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, -2_I8P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I8P, -2_I8P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I8P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI8P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I8P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I8P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I8P pure function str_a_I4P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, -2_I4P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, 2_I4P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, -2_I4P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I4P, -2_I4P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I4P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI4P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I4P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I4P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I4P pure function str_a_I2P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, -2_I2P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, 2_I2P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, -2_I2P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I2P, -2_I2P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I2P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI2P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I2P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I2P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I2P pure function str_a_I1P ( n , no_sign , separator , delimiters ) result ( str ) !< Convert integer array to string. !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, -2_I1P]) !<``` !=> +1,-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, 2_I1P], no_sign=.true.) !<``` !=> 1,2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, -2_I1P], separator='|') !<``` !=> +1|-2 <<< !< !<```fortran !< use penf !< print \"(A)\", str(n=[1_I1P, -2_I1P], delimiters=['(', ')']) !<``` !=> (+1,-2) <<< integer ( I1P ), intent ( in ) :: n (:) !< Integer array to be converted. logical , intent ( in ), optional :: no_sign !< Flag for leaving out the sign. character ( 1 ), intent ( in ), optional :: separator !< Eventual separator of array values. character ( * ), intent ( in ), optional :: delimiters ( 1 : 2 ) !< Eventual delimiters of array values. character ( len = :), allocatable :: str !< Returned string containing input number. character ( DI1P ) :: strn !< String containing of element of input array number. character ( len = 1 ) :: sep !< Array values separator integer :: i !< Counter. str = '' sep = ',' if ( present ( separator )) sep = separator if ( present ( no_sign )) then do i = 1 , size ( n ) strn = str_I1P ( no_sign = no_sign , n = n ( i )) str = str // sep // trim ( strn ) enddo else do i = 1 , size ( n ) strn = str_I1P ( n = n ( i )) str = str // sep // trim ( strn ) enddo endif str = trim ( str ( 2 :)) if ( present ( delimiters )) str = delimiters ( 1 ) // str // delimiters ( 2 ) endfunction str_a_I1P pure subroutine compact_real_string ( string ) !< author: Izaak Beekman !< date: 02/24/2015 !< !< Compact a string representing a real number, so that the same value is displayed with fewer characters. !< !< @note No need to add doctest: this is tested by a lot of doctests of other TBPs. character ( len =* ), intent ( inout ) :: string !< string representation of a real number. character ( len = len ( string )) :: significand !< Significand characters. character ( len = len ( string )) :: expnt !< Exponent characters. character ( len = 2 ) :: separator !< Separator characters. integer ( I4P ) :: exp_start !< Start position of exponent. integer ( I4P ) :: decimal_pos !< Decimal positions. integer ( I4P ) :: sig_trim !< Signature trim. integer ( I4P ) :: exp_trim !< Exponent trim. integer ( I4P ) :: i !< counter string = adjustl ( string ) exp_start = scan ( string , 'eEdD' ) if ( exp_start == 0 ) exp_start = scan ( string , '-+' , back = . true .) decimal_pos = scan ( string , '.' ) if ( exp_start /= 0 ) separator = string ( exp_start : exp_start ) if ( exp_start < decimal_pos ) then ! possibly signed, exponent-less float significand = string sig_trim = len ( trim ( significand )) do i = len ( trim ( significand )), decimal_pos + 2 , - 1 ! look from right to left at 0s, but save one after the decimal place if ( significand ( i : i ) == '0' ) then sig_trim = i - 1 else exit endif enddo string = trim ( significand ( 1 : sig_trim )) elseif ( exp_start > decimal_pos ) then ! float has exponent significand = string ( 1 : exp_start - 1 ) sig_trim = len ( trim ( significand )) do i = len ( trim ( significand )), decimal_pos + 2 , - 1 ! look from right to left at 0s if ( significand ( i : i ) == '0' ) then sig_trim = i - 1 else exit endif enddo expnt = adjustl ( string ( exp_start + 1 :)) if ( expnt ( 1 : 1 ) == '+' . or . expnt ( 1 : 1 ) == '-' ) then separator = trim ( adjustl ( separator )) // expnt ( 1 : 1 ) exp_start = exp_start + 1 expnt = adjustl ( string ( exp_start + 1 :)) endif exp_trim = 1 do i = 1 ,( len ( trim ( expnt )) - 1 ) ! look at exponent leading zeros saving last if ( expnt ( i : i ) == '0' ) then exp_trim = i + 1 else exit endif enddo string = trim ( adjustl ( significand ( 1 : sig_trim ))) // & trim ( adjustl ( separator )) // & trim ( adjustl ( expnt ( exp_trim :))) !else ! mal-formed real, BUT this code should be unreachable endif endsubroutine compact_real_string elemental function strz_I8P ( n , nz_pad ) result ( str ) !< Converting integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I8P) !<``` !=> 0000000000000000001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I8P, nz_pad=5) !<``` !=> 00001 <<< integer ( I8P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI8P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI8PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI8P - nz_pad : DI8P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I8P elemental function strz_I4P ( n , nz_pad ) result ( str ) !< Convert integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I4P) !<``` !=> 0000000001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I4P, nz_pad=5) !<``` !=> 00001 <<< integer ( I4P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI4P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI4PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI4P - nz_pad : DI4P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I4P elemental function strz_I2P ( n , nz_pad ) result ( str ) !< Convert integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I2P) !<``` !=> 00001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I2P, nz_pad=3) !<``` !=> 001 <<< integer ( I2P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI2P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI2PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI2P - nz_pad : DI2P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I2P elemental function strz_I1P ( n , nz_pad ) result ( str ) !< Convert integer to string, prefixing with the right number of zeros. !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I1P) !<``` !=> 001 <<< !< !<```fortran !< use penf !< print \"(A)\", strz(n=1_I1P, nz_pad=3) !<``` !=> 001 <<< integer ( I1P ), intent ( in ) :: n !< Integer to be converted. integer ( I4P ), intent ( in ), optional :: nz_pad !< Number of zeros padding. character ( DI1P ) :: str !< Returned string containing input number plus padding zeros. write ( str , FI1PZP ) n ! Casting of n to string. str = str ( 2 :) ! Leaving out the sign. if ( present ( nz_pad )) str = str ( DI1P - nz_pad : DI1P - 1 ) ! Leaving out the extra zeros padding endfunction strz_I1P function ctor_R16P ( str , knd , pref , error ) result ( n ) !< Convert string to real. !< !<```fortran !< use penf !< print FR16P, cton(str='-1.0', knd=1._R16P) !<``` !=> -0.100000000000000000000000000000000E+0001 <<< character ( * ), intent ( in ) :: str !< String containing input number. real ( R16P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. real ( R16P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to real failed! real(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctor_R16P function ctor_R8P ( str , knd , pref , error ) result ( n ) !< Convert string to real. !< !<```fortran !< use penf !< print FR8P, cton(str='-1.0', knd=1._R8P) !<``` !=> -0.100000000000000E+001 <<< character ( * ), intent ( in ) :: str !< String containing input number. real ( R8P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. real ( R8P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to real failed! real(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctor_R8P function ctor_R4P ( str , knd , pref , error ) result ( n ) !< Convert string to real. !< !<```fortran !< use penf !< print FR4P, cton(str='-1.0', knd=1._R4P) !<``` !=> -0.100000E+01 <<< character ( * ), intent ( in ) :: str !< String containing input number. real ( R4P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. real ( R4P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to real failed! real(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctor_R4P function ctoi_I8P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI8P, cton(str='-1', knd=1_I8P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I8P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I8P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I8P function ctoi_I4P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI4P, cton(str='-1', knd=1_I4P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I4P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I4P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I4P function ctoi_I2P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI2P, cton(str='-1', knd=1_I2P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I2P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I2P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I2P function ctoi_I1P ( str , knd , pref , error ) result ( n ) !< Convert string to integer. !< !<```fortran !< use penf !< print FI1P, cton(str='-1', knd=1_I1P) !<``` !=> -1 <<< character ( * ), intent ( in ) :: str !< String containing input number. integer ( I1P ), intent ( in ) :: knd !< Number kind. character ( * ), optional , intent ( in ) :: pref !< Prefixing string. integer ( I4P ), optional , intent ( out ) :: error !< Error trapping flag: 0 no errors, >0 error occurs. integer ( I1P ) :: n !< Number returned. integer ( I4P ) :: err !< Error trapping flag: 0 no errors, >0 error occurs. character ( len = :), allocatable :: prefd !< Prefixing string. read ( str , * , iostat = err ) n ! Casting of str to n. if ( err /= 0 ) then prefd = '' ; if ( present ( pref )) prefd = pref write ( stderr , '(A,I1,A)' ) prefd // ' Error: conversion of string \"' // str // '\" to integer failed! integer(' , kind ( knd ), ')' endif if ( present ( error )) error = err endfunction ctoi_I1P elemental function bstr_R16P ( n ) result ( bstr ) !< Convert real to string of bits. !< !< @note It is assumed that R16P is represented by means of 128 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< character(128) :: b !< b = bstr(n=1._R16P) !< print \"(A)\", b(17:) !<``` !=> 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111100111111 <<< real ( R16P ), intent ( in ) :: n !< Real to be converted. character ( 128 ) :: bstr !< Returned bit-string containing input number. integer ( I1P ) :: buffer ( 16 ) !< Transfer buffer. buffer = transfer ( n , buffer ) write ( bstr , '(16B8.8)' ) buffer endfunction bstr_R16P elemental function bstr_R8P ( n ) result ( bstr ) !< Convert real to string of bits. !< !< @note It is assumed that R8P is represented by means of 64 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1._R8P) !<``` !=> 0000000000000000000000000000000000000000000000001111000000111111 <<< real ( R8P ), intent ( in ) :: n !< Real to be converted. character ( 64 ) :: bstr !< Returned bit-string containing input number. integer ( I1P ) :: buffer ( 8 ) !< Transfer buffer. buffer = transfer ( n , buffer ) write ( bstr , '(8B8.8)' ) buffer endfunction bstr_R8P elemental function bstr_R4P ( n ) result ( bstr ) !< Convert real to string of bits. !< !< @note It is assumed that R4P is represented by means of 32 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1._R4P) !<``` !=> 00000000000000001000000000111111 <<< real ( R4P ), intent ( in ) :: n !< Real to be converted. character ( 32 ) :: bstr !< Returned bit-string containing input number. integer ( I1P ) :: buffer ( 4 ) !< Transfer buffer. buffer = transfer ( n , buffer ) write ( bstr , '(4B8.8)' ) buffer endfunction bstr_R4P elemental function bstr_I8P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I8P is represented by means of 64 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I8P) !<``` !=> 0000000000000000000000000000000000000000000000000000000000000001 <<< integer ( I8P ), intent ( in ) :: n !< Real to be converted. character ( 64 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B64.64)' ) n endfunction bstr_I8P elemental function bstr_I4P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I4P is represented by means of 32 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I4P) !<``` !=> 00000000000000000000000000000001 <<< integer ( I4P ), intent ( in ) :: n !< Real to be converted. character ( 32 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B32.32)' ) n endfunction bstr_I4P elemental function bstr_I2P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I2P is represented by means of 16 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I2P) !<``` !=> 0000000000000001 <<< integer ( I2P ), intent ( in ) :: n !< Real to be converted. character ( 16 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B16.16)' ) n endfunction bstr_I2P elemental function bstr_I1P ( n ) result ( bstr ) !< Convert integer to string of bits. !< !< @note It is assumed that I1P is represented by means of 8 bits, but this is not ensured in all architectures. !< !<```fortran !< use penf !< print \"(A)\", bstr(n=1_I1P) !<``` !=> 00000001 <<< integer ( I1P ), intent ( in ) :: n !< Real to be converted. character ( 8 ) :: bstr !< Returned bit-string containing input number. write ( bstr , '(B8.8)' ) n endfunction bstr_I1P elemental function bctor_R16P ( bstr , knd ) result ( n ) !< Convert bit-string to real. !< !<```fortran !< use penf !< print FR16P, bcton('00000000000000000000000000000000000000000000000000000000000000000000000000000'//& !<                    '000000000000000000000000000000000001111111100111111', knd=1._R16P) !<``` !=> 0.100000000000000000000000000000000E+0001 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. real ( R16P ), intent ( in ) :: knd !< Number kind. real ( R16P ) :: n !< Number returned. integer ( I1P ) :: buffer ( 16 ) !< Transfer buffer. read ( bstr , '(16B8.8)' ) buffer n = transfer ( buffer , n ) endfunction bctor_R16P elemental function bctor_R8P ( bstr , knd ) result ( n ) !< Convert bit-string to real. !< !<```fortran !< use penf !< print FR8P, bcton('0000000000000000000000000000000000000000000000001111000000111111', knd=1._R8P) !<``` !=> 0.100000000000000E+001 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. real ( R8P ), intent ( in ) :: knd !< Number kind. real ( R8P ) :: n !< Number returned. integer ( I1P ) :: buffer ( 8 ) !< Transfer buffer. read ( bstr , '(8B8.8)' ) buffer n = transfer ( buffer , n ) endfunction bctor_R8P elemental function bctor_R4P ( bstr , knd ) result ( n ) !< Convert bit-string to real. !< !<```fortran !< use penf !< print FR4P, bcton('00000000000000001000000000111111', knd=1._R4P) !<``` !=> 0.100000E+01 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. real ( R4P ), intent ( in ) :: knd !< Number kind. real ( R4P ) :: n !< Number returned. integer ( I1P ) :: buffer ( 4 ) !< Transfer buffer. read ( bstr , '(4B8.8)' ) buffer n = transfer ( buffer , n ) endfunction bctor_R4P elemental function bctoi_I8P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI8P, bcton('0000000000000000000000000000000000000000000000000000000000000001', knd=1_I8P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I8P ), intent ( in ) :: knd !< Number kind. integer ( I8P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I8P elemental function bctoi_I4P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI4P, bcton('00000000000000000000000000000001', knd=1_I4P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I4P ), intent ( in ) :: knd !< Number kind. integer ( I4P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I4P elemental function bctoi_I2P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI2P, bcton('0000000000000001', knd=1_I2P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I2P ), intent ( in ) :: knd !< Number kind. integer ( I2P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I2P elemental function bctoi_I1P ( bstr , knd ) result ( n ) !< Convert bit-string to integer. !< !<```fortran !< use penf !< print FI1P, bcton('00000001', knd=1_I1P) !<``` !=> 1 <<< character ( * ), intent ( in ) :: bstr !< String containing input number. integer ( I1P ), intent ( in ) :: knd !< Number kind. integer ( I1P ) :: n !< Number returned. read ( bstr , '(B' // trim ( str ( bit_size ( knd ), . true .)) // '.' // trim ( str ( bit_size ( knd ), . true .)) // ')' ) n endfunction bctoi_I1P endmodule penf_stringify","tags":"","loc":"sourcefile/penf_stringify.f90.html"}]}